º[37m[INFO] 23:31:37,103 [Test worker] eddsa.EdDSASecurityProviderRegistrar.getOrCreateProvider - getOrCreateProvider(EdDSA) created instance of net.i2p.crypto.eddsa.EdDSASecurityProvider
[m…[37m[INFO] 23:31:45,714 [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-b60183af-dfb2-4586-8bc6-ccf5b305652b.jar
[m…[37m[INFO] 23:31:45,755 [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-04794743-f7f0-4641-a20b-627497b99344.jar
[mÕ[37m[INFO] 23:31:45,805 [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-b60183af-dfb2-4586-8bc6-ccf5b305652b.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-04794743-f7f0-4641-a20b-627497b99344.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig)
[mj[37m[INFO] 23:31:45,853 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:31:45,862 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[mÓ[37m[INFO] 23:31:45,888 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-b60183af-dfb2-4586-8bc6-ccf5b305652b.jar
[mÓ[37m[INFO] 23:31:45,914 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-04794743-f7f0-4641-a20b-627497b99344.jar
[m¿[37m[INFO] 23:31:45,944 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar
[m∏[37m[INFO] 23:31:45,994 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar
[mó[37m[INFO] 23:31:46,056 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar
[m≥[37m[INFO] 23:31:46,209 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2107c4b0
[m`[37m[INFO] 23:31:46,413 [Test worker] hikari.HikariDataSource.<init> - HikariPool-1 - Started.
[mp[37m[INFO] 23:31:47,046 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÃ[37m[INFO] 23:31:47,108 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mﬂ[37m[INFO] 23:31:47,113 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mn[37m[INFO] 23:31:47,431 [Test worker] hibernate.Version.logVersion - HHH000412: Hibernate Core {5.2.6.Final}
[ml[37m[INFO] 23:31:47,446 [Test worker] cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
[mz[37m[INFO] 23:31:47,544 [Test worker] common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[mÚ[37m[INFO] 23:31:47,713 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:31:47,739 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:31:47,829 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:31:49,658 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6e8cdaeb] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mﬁ[37m[INFO] 23:31:49,754 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:31:50,091 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:31:50,376 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:31:50,378 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[mj[37m[INFO] 23:31:50,390 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:50,494 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[m˜[37m[INFO] 23:31:50,496 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[m©[37m[INFO] 23:31:50,800 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:31:50,945 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:31:51,053 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:31:51,060 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m≥[37m[INFO] 23:31:51,172 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
[m ?QUASAR WARNING: Assertions enabled. This may harm performance.
 `QUASAR WARNING: Fibers are set to verify instrumentation. This may *severely* harm performance.
‡[37m[INFO] 23:31:51,330 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:31:51,335 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:31:51,344 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:31:51,349 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:31:51,354 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:31:51,435 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 03826B6DE03F62AD75E58D57A994D16DA40CFABAFE0DB6716AC6208042ECCE2A, not inserting the second time
[mÙ[37m[INFO] 23:31:51,560 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[mè[37m[INFO] 23:31:51,596 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:51,599 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[mÙ[37m[INFO] 23:31:51,600 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[mè[37m[INFO] 23:31:51,610 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:51,613 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[mj[37m[INFO] 23:31:51,622 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:31:51,628 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:31:51,671 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:31:51,702 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@183c6b20
[m`[37m[INFO] 23:31:51,714 [Test worker] hikari.HikariDataSource.<init> - HikariPool-2 - Started.
[mp[37m[INFO] 23:31:51,729 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:31:51,741 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:31:51,743 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:31:51,754 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:31:51,759 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:31:51,768 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:31:51,928 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1a8aa528] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:31:51,985 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:31:51,994 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:31:52,006 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:31:52,014 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[mj[37m[INFO] 23:31:52,027 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:52,035 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[m˜[37m[INFO] 23:31:52,038 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[m©[37m[INFO] 23:31:52,202 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:31:52,337 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:31:52,429 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:31:52,432 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:31:52,458 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:31:52,464 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:31:52,467 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:31:52,469 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:31:52,473 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:31:52,494 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 10F931EC92BCC7F5165AF017DFEAFFDC6B748C9D9F0233314B461801DCD2C900, not inserting the second time
[mÙ[37m[INFO] 23:31:52,501 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[mj[37m[INFO] 23:31:52,504 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:52,524 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[mÙ[37m[INFO] 23:31:52,526 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[mj[37m[INFO] 23:31:52,532 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:52,543 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[mÙ[37m[INFO] 23:31:52,545 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[mè[37m[INFO] 23:31:52,550 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:52,552 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[mÙ[37m[INFO] 23:31:52,553 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[mè[37m[INFO] 23:31:52,555 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:52,556 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[mj[37m[INFO] 23:31:52,560 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:31:52,561 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:31:52,580 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:31:52,590 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c2e94b3
[m`[37m[INFO] 23:31:52,595 [Test worker] hikari.HikariDataSource.<init> - HikariPool-3 - Started.
[mp[37m[INFO] 23:31:52,602 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:31:52,604 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:31:52,605 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:31:52,611 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:31:52,612 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:31:52,617 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:31:52,682 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c34aac3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:31:52,731 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:31:52,735 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:31:52,752 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÔ[37m[INFO] 23:31:52,755 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[mj[37m[INFO] 23:31:52,766 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:31:52,775 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[mÚ[37m[INFO] 23:31:52,778 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[m©[37m[INFO] 23:31:52,942 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:31:53,092 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:31:53,193 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:31:53,196 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:31:53,219 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:31:53,226 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:31:53,228 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:31:53,230 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:31:53,232 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:31:53,260 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7DF0214E41543E0E3D9733608D1EA110B6B500F8F73BF2A6C4BE53AD391BA709, not inserting the second time
[mÙ[37m[INFO] 23:31:53,280 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[mj[37m[INFO] 23:31:53,287 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:53,307 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378)
[mÔ[37m[INFO] 23:31:53,309 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[mj[37m[INFO] 23:31:53,315 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:31:53,340 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[mÙ[37m[INFO] 23:31:53,342 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[mj[37m[INFO] 23:31:53,350 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:53,369 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014)
[mÔ[37m[INFO] 23:31:53,392 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[mj[37m[INFO] 23:31:53,398 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:31:53,417 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[mÔ[37m[INFO] 23:31:53,419 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[mè[37m[INFO] 23:31:53,427 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:31:53,429 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[mÔ[37m[INFO] 23:31:53,431 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[mè[37m[INFO] 23:31:53,432 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:31:53,433 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755)
[m[37m[INFO] 23:31:54,396 [Mock network] flow.[0bf22c6e-e524-4bda-a1de-eaf4e1c3bb41].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7151905298114691681).
[m¨[37m[INFO] 23:31:54,590 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7151905298114691681). {invocation_id=d10b0ee9-51df-4835-b8a7-108938c0d29d, invocation_timestamp=2019-10-31T23:31:54.582Z, session_id=d10b0ee9-51df-4835-b8a7-108938c0d29d, session_timestamp=2019-10-31T23:31:54.582Z}
[mZSigned transaction hash: BE07ED1C8F3537AE97BFB245B9E2661CA2639DAA8E4166A56F6BAE43243D3841
ÖBE07ED1C8F3537AE97BFB245B9E2661CA2639DAA8E4166A56F6BAE43243D3841 == BE07ED1C8F3537AE97BFB245B9E2661CA2639DAA8E4166A56F6BAE43243D3841
ÖBE07ED1C8F3537AE97BFB245B9E2661CA2639DAA8E4166A56F6BAE43243D3841 == BE07ED1C8F3537AE97BFB245B9E2661CA2639DAA8E4166A56F6BAE43243D3841
d[37m[INFO] 23:31:54,883 [Test worker] pool.HikariPool.shutdown - HikariPool-1 - Close initiated...
[mY[37m[INFO] 23:31:54,890 [Test worker] pool.HikariPool.shutdown - HikariPool-1 - Closed.
[md[37m[INFO] 23:31:54,892 [Test worker] pool.HikariPool.shutdown - HikariPool-2 - Close initiated...
[mY[37m[INFO] 23:31:54,900 [Test worker] pool.HikariPool.shutdown - HikariPool-2 - Closed.
[md[37m[INFO] 23:31:54,901 [Test worker] pool.HikariPool.shutdown - HikariPool-3 - Close initiated...
[mY[37m[INFO] 23:31:54,908 [Test worker] pool.HikariPool.shutdown - HikariPool-3 - Closed.
[mj[37m[INFO] 23:31:54,989 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:31:54,991 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m≤[37m[INFO] 23:31:54,998 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@9585b4a
[m`[37m[INFO] 23:31:55,004 [Test worker] hikari.HikariDataSource.<init> - HikariPool-4 - Started.
[mp[37m[INFO] 23:31:55,013 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÃ[37m[INFO] 23:31:55,014 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mﬂ[37m[INFO] 23:31:55,015 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:31:55,023 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:31:55,027 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:31:55,034 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:31:55,140 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4b68eb3d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mﬁ[37m[INFO] 23:31:55,165 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:31:55,168 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:31:55,173 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:31:55,175 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[mj[37m[INFO] 23:31:55,179 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:55,192 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[m˜[37m[INFO] 23:31:55,193 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[m©[37m[INFO] 23:31:55,334 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:31:55,466 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:31:55,567 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:31:55,568 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m≥[37m[INFO] 23:31:55,592 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
[m‡[37m[INFO] 23:31:55,598 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:31:55,601 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:31:55,603 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:31:55,604 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:31:55,605 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:31:55,628 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CFC01F117F0702C4414A7E3ACD781C5B3C923032FEE4B1058D1EF32D22B1D16F, not inserting the second time
[mÙ[37m[INFO] 23:31:55,636 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[mè[37m[INFO] 23:31:55,641 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:55,643 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[mÙ[37m[INFO] 23:31:55,645 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[mè[37m[INFO] 23:31:55,646 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:55,647 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[mj[37m[INFO] 23:31:55,652 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:31:55,654 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:31:55,684 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:31:55,698 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4631243b
[m`[37m[INFO] 23:31:55,708 [Test worker] hikari.HikariDataSource.<init> - HikariPool-5 - Started.
[mp[37m[INFO] 23:31:55,718 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:31:55,721 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:31:55,722 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:31:55,731 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:31:55,735 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:31:55,743 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:31:55,851 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6835b066] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:31:55,906 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:31:55,908 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:31:55,917 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:31:55,918 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[mj[37m[INFO] 23:31:55,923 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:55,932 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[m˜[37m[INFO] 23:31:55,933 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[m©[37m[INFO] 23:31:56,076 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:31:56,235 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:31:56,334 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:31:56,338 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:31:56,356 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:31:56,359 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:31:56,360 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:31:56,361 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:31:56,363 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:31:56,382 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 51156FC5921C286953BE572D4D25F0CE81D5988BAF07B566B6C9866BD8CF2E9D, not inserting the second time
[mÙ[37m[INFO] 23:31:56,389 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[mj[37m[INFO] 23:31:56,393 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:56,408 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[mÙ[37m[INFO] 23:31:56,416 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[mj[37m[INFO] 23:31:56,422 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:56,430 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[mÙ[37m[INFO] 23:31:56,435 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[mè[37m[INFO] 23:31:56,441 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:56,442 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[mÙ[37m[INFO] 23:31:56,443 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[mè[37m[INFO] 23:31:56,444 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:56,445 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[mj[37m[INFO] 23:31:56,451 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:31:56,452 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:31:56,477 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:31:56,486 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@53fa09cf
[m`[37m[INFO] 23:31:56,491 [Test worker] hikari.HikariDataSource.<init> - HikariPool-6 - Started.
[mp[37m[INFO] 23:31:56,499 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:31:56,501 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:31:56,502 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:31:56,510 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:31:56,511 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:31:56,515 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:31:56,617 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1f6df42e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:31:56,654 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:31:56,656 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:31:56,667 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÔ[37m[INFO] 23:31:56,672 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[mj[37m[INFO] 23:31:56,676 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:31:56,686 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[mÚ[37m[INFO] 23:31:56,689 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[m©[37m[INFO] 23:31:56,845 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:31:56,976 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:31:57,070 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:31:57,071 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:31:57,089 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:31:57,091 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:31:57,092 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:31:57,093 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:31:57,095 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:31:57,109 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 64E37F0DC74073E3ABE1CB01A0EBD24D04309044F03B8D66BB179D7472C3C3C5, not inserting the second time
[mÙ[37m[INFO] 23:31:57,115 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[mj[37m[INFO] 23:31:57,117 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:57,125 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175)
[mÔ[37m[INFO] 23:31:57,127 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[mj[37m[INFO] 23:31:57,129 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:31:57,141 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[mÙ[37m[INFO] 23:31:57,143 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[mj[37m[INFO] 23:31:57,145 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:57,152 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918)
[mÔ[37m[INFO] 23:31:57,153 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[mj[37m[INFO] 23:31:57,155 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:31:57,163 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[mÔ[37m[INFO] 23:31:57,164 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[mè[37m[INFO] 23:31:57,168 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:31:57,169 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[mÔ[37m[INFO] 23:31:57,170 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[mè[37m[INFO] 23:31:57,171 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:31:57,172 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672)
[m[37m[INFO] 23:31:57,316 [Mock network] flow.[cf491bc7-3acd-4d1e-b3ae-b98a7266dff9].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2112507011219707355).
[m¨[37m[INFO] 23:31:57,481 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2112507011219707355). {invocation_id=c75b6c3c-e32d-4742-91eb-335708ce0513, invocation_timestamp=2019-10-31T23:31:57.480Z, session_id=c75b6c3c-e32d-4742-91eb-335708ce0513, session_timestamp=2019-10-31T23:31:57.480Z}
[mTransaction:
åOUTPUT:     AssetState(amount=100 Asset(name=asset) issued by O=Mock Company 1, L=London, C=GB[00], owner=O=Mock Company 1, L=London, C=GB)
vCOMMAND:    com.dz0189.issue.AssetContract.Commands.Issue with pubkeys DL6TWyxzx83aUZm5GiiTUxmRP9V3Rr5Dy5uW6nNCPa5NE8
MATTACHMENT: 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47

d[37m[INFO] 23:31:57,616 [Test worker] pool.HikariPool.shutdown - HikariPool-4 - Close initiated...
[mY[37m[INFO] 23:31:57,625 [Test worker] pool.HikariPool.shutdown - HikariPool-4 - Closed.
[md[37m[INFO] 23:31:57,626 [Test worker] pool.HikariPool.shutdown - HikariPool-5 - Close initiated...
[mY[37m[INFO] 23:31:57,634 [Test worker] pool.HikariPool.shutdown - HikariPool-5 - Closed.
[md[37m[INFO] 23:31:57,635 [Test worker] pool.HikariPool.shutdown - HikariPool-6 - Close initiated...
[mY[37m[INFO] 23:31:57,642 [Test worker] pool.HikariPool.shutdown - HikariPool-6 - Closed.
[mj[37m[INFO] 23:31:57,708 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:31:57,710 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m≥[37m[INFO] 23:31:57,723 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7f5cee81
[m`[37m[INFO] 23:31:57,730 [Test worker] hikari.HikariDataSource.<init> - HikariPool-7 - Started.
[mp[37m[INFO] 23:31:57,744 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÃ[37m[INFO] 23:31:57,745 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mﬂ[37m[INFO] 23:31:57,747 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:31:57,752 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:31:57,754 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:31:57,758 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:31:57,845 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@68b83e39] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mﬁ[37m[INFO] 23:31:57,867 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:31:57,869 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:31:57,874 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:31:57,875 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[mj[37m[INFO] 23:31:57,879 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:57,886 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[m˜[37m[INFO] 23:31:57,887 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[m©[37m[INFO] 23:31:58,010 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:31:58,143 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:31:58,239 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:31:58,241 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m≥[37m[INFO] 23:31:58,256 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
[m‡[37m[INFO] 23:31:58,261 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:31:58,262 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:31:58,268 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:31:58,272 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:31:58,273 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:31:58,290 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 21023668570D40BE04E590305197A986860CC7B5927B536CF84E946113814E45, not inserting the second time
[mÙ[37m[INFO] 23:31:58,299 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[mè[37m[INFO] 23:31:58,309 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:58,311 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[mÙ[37m[INFO] 23:31:58,311 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[mè[37m[INFO] 23:31:58,312 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:58,319 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[mj[37m[INFO] 23:31:58,324 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:31:58,325 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:31:58,351 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:31:58,364 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@204b79dd
[m`[37m[INFO] 23:31:58,375 [Test worker] hikari.HikariDataSource.<init> - HikariPool-8 - Started.
[mp[37m[INFO] 23:31:58,382 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:31:58,383 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:31:58,384 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:31:58,391 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:31:58,395 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:31:58,399 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:31:58,515 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1ba68e19] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:31:58,537 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:31:58,539 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:31:58,544 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:31:58,545 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[mj[37m[INFO] 23:31:58,548 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:58,552 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[m˜[37m[INFO] 23:31:58,553 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[m©[37m[INFO] 23:31:58,673 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:31:58,791 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:31:58,885 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:31:58,887 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:31:58,899 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:31:58,901 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:31:58,902 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:31:58,903 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:31:58,904 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:31:58,915 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2683C76A5518C4B0BBAD2510CDA59C7FADA188BDDF27975C013CE9BD8A3C8FE2, not inserting the second time
[mÙ[37m[INFO] 23:31:58,921 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[mj[37m[INFO] 23:31:58,925 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:58,935 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[mÙ[37m[INFO] 23:31:58,936 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[mj[37m[INFO] 23:31:58,938 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:58,956 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[mÙ[37m[INFO] 23:31:58,963 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[mè[37m[INFO] 23:31:58,970 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:58,971 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[mÙ[37m[INFO] 23:31:58,972 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[mè[37m[INFO] 23:31:58,973 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:31:58,974 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[mj[37m[INFO] 23:31:58,976 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:31:58,979 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:31:59,002 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:31:59,010 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c535f12
[m`[37m[INFO] 23:31:59,014 [Test worker] hikari.HikariDataSource.<init> - HikariPool-9 - Started.
[mp[37m[INFO] 23:31:59,021 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:31:59,022 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:31:59,023 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:31:59,027 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:31:59,028 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:31:59,042 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m¢[37m[INFO] 23:31:59,088 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e41fc18] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:31:59,110 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:31:59,112 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:31:59,123 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÔ[37m[INFO] 23:31:59,124 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mj[37m[INFO] 23:31:59,129 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:31:59,134 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mÚ[37m[INFO] 23:31:59,135 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[m©[37m[INFO] 23:31:59,263 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:31:59,436 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:31:59,522 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:31:59,525 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:31:59,544 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:31:59,546 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:31:59,547 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:31:59,548 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:31:59,554 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:31:59,570 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 65D97BE879DB41688881B72B59F886BE4B01E32522773B5AADF1566936FC325D, not inserting the second time
[mÙ[37m[INFO] 23:31:59,580 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[mj[37m[INFO] 23:31:59,589 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:59,602 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875)
[mÔ[37m[INFO] 23:31:59,606 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mj[37m[INFO] 23:31:59,609 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:31:59,621 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mÙ[37m[INFO] 23:31:59,624 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[mj[37m[INFO] 23:31:59,627 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:31:59,638 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545)
[mÔ[37m[INFO] 23:31:59,643 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mj[37m[INFO] 23:31:59,645 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:31:59,654 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mÔ[37m[INFO] 23:31:59,656 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mè[37m[INFO] 23:31:59,665 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:31:59,674 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mÔ[37m[INFO] 23:31:59,675 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mè[37m[INFO] 23:31:59,676 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:31:59,677 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124)
[mw[31m[WARN] 23:31:59,741 [Mock network] flow.[a8e0a5be-001e-418d-9f74-cd8152a42725].run - Flow finished with exception
Æ[m net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: D918B4F7DFD84AA8759ED50BCF00DA08DC1515ABD1AFA62ED607E275E88175A4
z	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
p	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
s	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
S	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
S	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
{	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
{	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
^	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
]	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
w	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
s	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
Z	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
K	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
à	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
Å	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
b	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
b	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
ä	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
uCaused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
^	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
Y	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
z	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
Ò[37m[INFO] 23:31:59,855 [Mock network] flow.[f5c5d067-474b-44a1-9e07-cf7e757df664].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8868051853605884119).
[m≠[37m[INFO] 23:31:59,940 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8868051853605884119). {invocation_id=0a046300-14a6-4360-8bf3-46b6a903c909, invocation_timestamp=2019-10-31T23:31:59.939Z, session_id=0a046300-14a6-4360-8bf3-46b6a903c909, session_timestamp=2019-10-31T23:31:59.939Z}
[md[37m[INFO] 23:32:00,066 [Test worker] pool.HikariPool.shutdown - HikariPool-7 - Close initiated...
[mY[37m[INFO] 23:32:00,070 [Test worker] pool.HikariPool.shutdown - HikariPool-7 - Closed.
[md[37m[INFO] 23:32:00,072 [Test worker] pool.HikariPool.shutdown - HikariPool-8 - Close initiated...
[mY[37m[INFO] 23:32:00,079 [Test worker] pool.HikariPool.shutdown - HikariPool-8 - Closed.
[md[37m[INFO] 23:32:00,081 [Test worker] pool.HikariPool.shutdown - HikariPool-9 - Close initiated...
[mY[37m[INFO] 23:32:00,088 [Test worker] pool.HikariPool.shutdown - HikariPool-9 - Closed.
[mj[37m[INFO] 23:32:00,143 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:00,148 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m≥[37m[INFO] 23:32:00,157 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4ceab3f7
[ma[37m[INFO] 23:32:00,161 [Test worker] hikari.HikariDataSource.<init> - HikariPool-10 - Started.
[mp[37m[INFO] 23:32:00,172 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÃ[37m[INFO] 23:32:00,173 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mﬂ[37m[INFO] 23:32:00,174 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:00,180 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:00,184 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:00,188 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:32:00,315 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@31ffd4df] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mﬁ[37m[INFO] 23:32:00,353 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:00,355 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:00,361 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:32:00,362 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mj[37m[INFO] 23:32:00,365 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:00,374 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[m˜[37m[INFO] 23:32:00,375 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[m©[37m[INFO] 23:32:00,521 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:00,653 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:00,739 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:00,741 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m≥[37m[INFO] 23:32:00,749 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
[m‡[37m[INFO] 23:32:00,753 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:00,754 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:00,755 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:00,755 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:00,756 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:00,767 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2B6C4B80889AC7EE55022AFFE88F4B421BF622C8D46F42BC43D2688A33CD6BAB, not inserting the second time
[mÙ[37m[INFO] 23:32:00,772 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mè[37m[INFO] 23:32:00,775 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:00,776 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mÙ[37m[INFO] 23:32:00,777 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mè[37m[INFO] 23:32:00,778 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:00,779 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mj[37m[INFO] 23:32:00,783 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:00,784 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:32:00,796 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:32:00,802 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7dc583ed
[ma[37m[INFO] 23:32:00,805 [Test worker] hikari.HikariDataSource.<init> - HikariPool-11 - Started.
[mp[37m[INFO] 23:32:00,816 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:32:00,818 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:32:00,818 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:00,825 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:00,826 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:00,829 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m¢[37m[INFO] 23:32:00,884 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@d510c24] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:32:00,913 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:00,914 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:00,920 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:32:00,921 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mj[37m[INFO] 23:32:00,924 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:00,928 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[m˜[37m[INFO] 23:32:00,928 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[m©[37m[INFO] 23:32:01,151 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:01,287 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:01,394 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:01,395 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:32:01,414 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:01,416 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:01,416 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:01,417 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:01,418 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:01,433 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 33F52FCE7DDC46B54D29E6A1C3581991A245AF1E1B852C0BEDFFB8FB63FFF427, not inserting the second time
[mÙ[37m[INFO] 23:32:01,437 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mj[37m[INFO] 23:32:01,439 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:01,459 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mÙ[37m[INFO] 23:32:01,460 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mj[37m[INFO] 23:32:01,463 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:01,471 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mÙ[37m[INFO] 23:32:01,472 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mè[37m[INFO] 23:32:01,477 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:01,477 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mÙ[37m[INFO] 23:32:01,478 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mè[37m[INFO] 23:32:01,480 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:01,480 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mj[37m[INFO] 23:32:01,484 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:01,484 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:32:01,506 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:32:01,520 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@12483b96
[ma[37m[INFO] 23:32:01,523 [Test worker] hikari.HikariDataSource.<init> - HikariPool-12 - Started.
[mp[37m[INFO] 23:32:01,532 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:32:01,533 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:32:01,534 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:01,541 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:01,543 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:01,546 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:32:01,610 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@601d6d8a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:32:01,643 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:01,645 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:01,653 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:32:01,654 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mj[37m[INFO] 23:32:01,658 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:01,662 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[m˜[37m[INFO] 23:32:01,662 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[m©[37m[INFO] 23:32:01,805 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:02,037 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:02,141 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:02,143 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:32:02,156 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:02,157 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:02,160 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:02,161 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:02,161 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:02,174 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E1D5AE525DA44289BA1C34772BB8CBFCAF4D5D0B716EBBE5310A2EB8E16F0080, not inserting the second time
[mÙ[37m[INFO] 23:32:02,180 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mj[37m[INFO] 23:32:02,181 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:02,197 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mÙ[37m[INFO] 23:32:02,198 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mj[37m[INFO] 23:32:02,206 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:02,214 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mÙ[37m[INFO] 23:32:02,217 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mj[37m[INFO] 23:32:02,221 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:02,233 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mÙ[37m[INFO] 23:32:02,234 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mj[37m[INFO] 23:32:02,235 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:02,244 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mÙ[37m[INFO] 23:32:02,245 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mè[37m[INFO] 23:32:02,251 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:02,251 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mÙ[37m[INFO] 23:32:02,252 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mè[37m[INFO] 23:32:02,253 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:02,253 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mj[37m[INFO] 23:32:02,256 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:02,257 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:32:02,278 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:32:02,292 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6be48324
[ma[37m[INFO] 23:32:02,295 [Test worker] hikari.HikariDataSource.<init> - HikariPool-13 - Started.
[mp[37m[INFO] 23:32:02,300 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:32:02,301 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:32:02,302 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:02,311 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:02,312 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:02,316 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m¢[37m[INFO] 23:32:02,386 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e6c6ea1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:32:02,419 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:02,421 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:02,426 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÍ[37m[INFO] 23:32:02,426 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mj[37m[INFO] 23:32:02,431 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:02,434 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mÌ[37m[INFO] 23:32:02,435 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[m©[37m[INFO] 23:32:02,574 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:02,809 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:02,898 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:02,899 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:32:02,910 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:02,914 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:02,915 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:02,916 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:02,916 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:02,930 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C4C137B9F2D94871DF96F2FA8DF7F5AFFC0F2EDD74F8FF0025EA33E1866B3919, not inserting the second time
[mÙ[37m[INFO] 23:32:02,935 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mj[37m[INFO] 23:32:02,936 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:02,950 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mÍ[37m[INFO] 23:32:02,954 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mj[37m[INFO] 23:32:02,964 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:02,972 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mÙ[37m[INFO] 23:32:02,974 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mj[37m[INFO] 23:32:02,975 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:02,984 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mÍ[37m[INFO] 23:32:02,985 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mj[37m[INFO] 23:32:02,987 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:02,997 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mÙ[37m[INFO] 23:32:02,999 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mj[37m[INFO] 23:32:03,001 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:03,008 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mÍ[37m[INFO] 23:32:03,009 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mj[37m[INFO] 23:32:03,011 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:03,020 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mÍ[37m[INFO] 23:32:03,021 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mè[37m[INFO] 23:32:03,026 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÔ[37m[INFO] 23:32:03,027 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mÍ[37m[INFO] 23:32:03,028 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mè[37m[INFO] 23:32:03,029 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÔ[37m[INFO] 23:32:03,031 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mj[37m[INFO] 23:32:03,037 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:03,038 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:32:03,056 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:32:03,065 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@22d4f4c2
[ma[37m[INFO] 23:32:03,068 [Test worker] hikari.HikariDataSource.<init> - HikariPool-14 - Started.
[mp[37m[INFO] 23:32:03,072 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:32:03,073 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:32:03,074 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:03,079 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:03,080 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:03,082 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:32:03,140 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5154decc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:32:03,165 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:03,167 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:03,178 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÔ[37m[INFO] 23:32:03,179 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mj[37m[INFO] 23:32:03,183 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:03,186 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mÚ[37m[INFO] 23:32:03,187 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[m©[37m[INFO] 23:32:03,337 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:03,667 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:03,760 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:03,762 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:32:03,782 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:03,785 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:03,787 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:03,788 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:03,789 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:03,802 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F15F0356E4AE617DB3268A87582C03CA1F45E81DB5FBD5D7E5F9BA46771056EA, not inserting the second time
[mÙ[37m[INFO] 23:32:03,809 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mj[37m[INFO] 23:32:03,816 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:03,824 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362)
[mÔ[37m[INFO] 23:32:03,825 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mj[37m[INFO] 23:32:03,827 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:03,836 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mÙ[37m[INFO] 23:32:03,838 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mj[37m[INFO] 23:32:03,841 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:03,848 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921)
[mÔ[37m[INFO] 23:32:03,849 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mj[37m[INFO] 23:32:03,851 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:03,858 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mÙ[37m[INFO] 23:32:03,860 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mj[37m[INFO] 23:32:03,864 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:03,874 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654)
[mÔ[37m[INFO] 23:32:03,875 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mj[37m[INFO] 23:32:03,876 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:03,883 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mÍ[37m[INFO] 23:32:03,885 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mj[37m[INFO] 23:32:03,889 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:03,903 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426)
[mÔ[37m[INFO] 23:32:03,906 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mj[37m[INFO] 23:32:03,908 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:03,915 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mÔ[37m[INFO] 23:32:03,916 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mè[37m[INFO] 23:32:03,919 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:32:03,920 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mÔ[37m[INFO] 23:32:03,921 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[mè[37m[INFO] 23:32:03,923 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:32:03,931 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179)
[m€[37m[INFO] 23:32:03,936 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:03,937 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m€[37m[INFO] 23:32:03,939 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:03,940 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m€[37m[INFO] 23:32:03,941 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:03,941 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m€[37m[INFO] 23:32:03,942 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:03,943 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[mˆ[37m[INFO] 23:32:04,076 [Mock network] flow.[5f460676-84b0-4543-bc11-868192f73720].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4516848815082372572).
[m£[37m[INFO] 23:32:04,182 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4516848815082372572). {invocation_id=a097937d-a01f-4f24-8e35-5e81da213118, invocation_timestamp=2019-10-31T23:32:04.181Z, session_id=a097937d-a01f-4f24-8e35-5e81da213118, session_timestamp=2019-10-31T23:32:04.181Z}
[mı[37m[INFO] 23:32:04,456 [Mock network] flow.[5f460676-84b0-4543-bc11-868192f73720].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5606737329129591193).
[mˇ[37m[INFO] 23:32:04,478 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5606737329129591193). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=7aa4c8d4-cda7-478c-99bc-e0ffde9757e0, invocation_timestamp=2019-10-31T23:32:04.477Z, session_id=7aa4c8d4-cda7-478c-99bc-e0ffde9757e0, session_timestamp=2019-10-31T23:32:04.477Z}
[m[37m[INFO] 23:32:04,545 [Mock network] flow.[5f460676-84b0-4543-bc11-868192f73720].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3554002698039430647).
[mˇ[37m[INFO] 23:32:04,566 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3554002698039430647). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5f50c1af-e43c-4e64-bb75-3405e44550d5, invocation_timestamp=2019-10-31T23:32:04.563Z, session_id=5f50c1af-e43c-4e64-bb75-3405e44550d5, session_timestamp=2019-10-31T23:32:04.563Z}
[mÒ[37m[INFO] 23:32:04,739 [Mock network] flow.[0ed8c095-b92d-426b-bd3a-5cab36351dbf].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7611428257706851275).
[mä[37m[INFO] 23:32:04,775 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7611428257706851275). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=4f68f938-15e9-437c-bdfb-6ebf78b27565, invocation_timestamp=2019-10-31T23:32:04.775Z, session_id=4f68f938-15e9-437c-bdfb-6ebf78b27565, session_timestamp=2019-10-31T23:32:04.775Z}
[mı[37m[INFO] 23:32:04,954 [Mock network] flow.[5fa9ff45-4786-455d-b14a-3d4c445aaf4a].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-367775320554040730).
[mã[37m[INFO] 23:32:05,002 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-367775320554040730). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=329efc01-7cde-4688-8dfd-3b48482729b5, invocation_timestamp=2019-10-31T23:32:05Z, session_id=329efc01-7cde-4688-8dfd-3b48482729b5, session_timestamp=2019-10-31T23:32:05Z}
[m≠[37m[INFO] 23:32:05,023 [Mock network] flow.[e021c38a-fb25-4a9b-bda0-96fdb8b6c353].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:05,135 [Mock network] flow.[e021c38a-fb25-4a9b-bda0-96fdb8b6c353].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[mõ[37m[INFO] 23:32:05,294 [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[])
[mÛ[37m[INFO] 23:32:05,349 [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=33807235970069878).
[më[37m[INFO] 23:32:05,382 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=33807235970069878). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=02d52066-eea5-45b4-a839-632e50010f66, invocation_timestamp=2019-10-31T23:32:05.380Z, session_id=02d52066-eea5-45b4-a839-632e50010f66, session_timestamp=2019-10-31T23:32:05.380Z}
[m≠[37m[INFO] 23:32:05,402 [Mock network] flow.[44768518-ab54-46f0-9b10-314407571c50].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB
[mî[37m[INFO] 23:32:05,459 [Mock network] flow.[44768518-ab54-46f0-9b10-314407571c50].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB
[m†[37m[INFO] 23:32:05,549 [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[])
[m≠[37m[INFO] 23:32:05,626 [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:05,662 [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[m≠[37m[INFO] 23:32:05,663 [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:05,691 [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[mÎ[37m[INFO] 23:32:05,822 [Mock network] flow.[44768518-ab54-46f0-9b10-314407571c50].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2421962775378517487).
[mì[37m[INFO] 23:32:05,846 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2421962775378517487). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=b8a691d5-6d57-4f2d-ae70-f236679b114a, invocation_timestamp=2019-10-31T23:32:05.845Z, session_id=b8a691d5-6d57-4f2d-ae70-f236679b114a, session_timestamp=2019-10-31T23:32:05.845Z}
[m≠[37m[INFO] 23:32:05,858 [Mock network] flow.[30e00467-b5f1-42a2-85b5-c90eee7248ed].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:05,925 [Mock network] flow.[30e00467-b5f1-42a2-85b5-c90eee7248ed].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[m≠[37m[INFO] 23:32:05,927 [Mock network] flow.[30e00467-b5f1-42a2-85b5-c90eee7248ed].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:05,967 [Mock network] flow.[30e00467-b5f1-42a2-85b5-c90eee7248ed].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[m WHATIS THE COMMAND?Transaction:
V‚ñ∂Ô∏éINPUT:      F97007392DFF0B8DC91F20B1BD91932D36D2EE75844A49DEE0F4CD3B9CFF7738(0)
V‚ñ∂Ô∏éINPUT:      9EEAF9D900EFA01CE56CFE182C9C07B886D15B2CE84704B60615BA55C5475A5B(0)
èOUTPUT:     AssetStateNew(amount=100 Asset(name=asset) issued by O=Mock Company 1, L=London, C=GB[00], owner=O=Mock Company 2, L=London, C=GB)
ÑOUTPUT:     PrideState(amount=1000 Asset(name=Prides) issued by O=Twig, L=Manila, C=PH[00], owner=O=Mock Company 1, L=London, C=GB)
yCOMMAND:    com.dz0189.trade.AssetContractNew.Commands.Trade with pubkeys DL4VpdwpYffwdJWxgVXq7NogaDnSYheUTkZaZo5oNx7VYr
™COMMAND:    com.twig.contract.PrideContract.Commands.Transfer with pubkeys DLGCZiKsbg1Xc3xDCa5tfRF3puuSKGcApcoCsrRKZboWCX, DLEF3nuTvkhB7Td9XqLyQhdJvYHjFsycQA82jHPfHVSEKA
MATTACHMENT: DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
MATTACHMENT: 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91

e[37m[INFO] 23:32:06,106 [Test worker] pool.HikariPool.shutdown - HikariPool-10 - Close initiated...
[mZ[37m[INFO] 23:32:06,109 [Test worker] pool.HikariPool.shutdown - HikariPool-10 - Closed.
[me[37m[INFO] 23:32:06,110 [Test worker] pool.HikariPool.shutdown - HikariPool-11 - Close initiated...
[mZ[37m[INFO] 23:32:06,112 [Test worker] pool.HikariPool.shutdown - HikariPool-11 - Closed.
[me[37m[INFO] 23:32:06,113 [Test worker] pool.HikariPool.shutdown - HikariPool-12 - Close initiated...
[mZ[37m[INFO] 23:32:06,115 [Test worker] pool.HikariPool.shutdown - HikariPool-12 - Closed.
[me[37m[INFO] 23:32:06,116 [Test worker] pool.HikariPool.shutdown - HikariPool-13 - Close initiated...
[mZ[37m[INFO] 23:32:06,119 [Test worker] pool.HikariPool.shutdown - HikariPool-13 - Closed.
[me[37m[INFO] 23:32:06,122 [Test worker] pool.HikariPool.shutdown - HikariPool-14 - Close initiated...
[mZ[37m[INFO] 23:32:06,125 [Test worker] pool.HikariPool.shutdown - HikariPool-14 - Closed.
[mj[37m[INFO] 23:32:06,178 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:06,180 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m≥[37m[INFO] 23:32:06,184 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6e31bfdf
[ma[37m[INFO] 23:32:06,188 [Test worker] hikari.HikariDataSource.<init> - HikariPool-15 - Started.
[mp[37m[INFO] 23:32:06,192 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÃ[37m[INFO] 23:32:06,193 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mﬂ[37m[INFO] 23:32:06,193 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:06,198 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:06,199 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:06,201 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:32:06,256 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5932f50f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mﬁ[37m[INFO] 23:32:06,286 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:06,291 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:06,297 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:32:06,298 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mj[37m[INFO] 23:32:06,303 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:06,311 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[m˜[37m[INFO] 23:32:06,312 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[m©[37m[INFO] 23:32:06,454 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:06,624 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:06,716 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:06,717 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m≥[37m[INFO] 23:32:06,726 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
[m‡[37m[INFO] 23:32:06,729 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:06,731 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:06,732 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:06,732 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:06,733 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:06,747 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 04F328489330DCCF7AC880C7BE634137336FBBF7E6E9420E9946C526D4515580, not inserting the second time
[mÙ[37m[INFO] 23:32:06,754 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mè[37m[INFO] 23:32:06,762 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:06,763 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mÙ[37m[INFO] 23:32:06,764 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mè[37m[INFO] 23:32:06,765 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:06,766 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mj[37m[INFO] 23:32:06,770 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:06,771 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:32:06,790 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:32:06,799 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2e589079
[ma[37m[INFO] 23:32:06,803 [Test worker] hikari.HikariDataSource.<init> - HikariPool-16 - Started.
[mp[37m[INFO] 23:32:06,807 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:32:06,808 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:32:06,808 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:06,814 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:06,816 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:06,821 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m¢[37m[INFO] 23:32:06,871 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3d2aa62] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:32:06,902 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:06,904 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:06,911 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:32:06,912 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mj[37m[INFO] 23:32:06,918 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:06,920 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[m˜[37m[INFO] 23:32:06,921 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[m©[37m[INFO] 23:32:07,051 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:07,527 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:07,612 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:07,614 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:32:07,628 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:07,629 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:07,630 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:07,630 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:07,631 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:07,646 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7BDDFD473114521EAA93CE16F85AED56C7D53099DA876A5A77FF0E279E4F5853, not inserting the second time
[mÙ[37m[INFO] 23:32:07,651 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mj[37m[INFO] 23:32:07,653 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:07,658 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mÙ[37m[INFO] 23:32:07,659 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mj[37m[INFO] 23:32:07,660 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:07,664 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mÙ[37m[INFO] 23:32:07,665 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mè[37m[INFO] 23:32:07,668 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:07,669 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mÙ[37m[INFO] 23:32:07,669 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mè[37m[INFO] 23:32:07,670 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:07,670 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mj[37m[INFO] 23:32:07,672 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:07,673 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:32:07,683 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:32:07,688 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7047f758
[ma[37m[INFO] 23:32:07,690 [Test worker] hikari.HikariDataSource.<init> - HikariPool-17 - Started.
[mp[37m[INFO] 23:32:07,703 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:32:07,704 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:32:07,705 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:07,709 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:07,710 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:07,713 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:32:07,748 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f422da1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:32:07,761 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:07,762 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:07,766 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÙ[37m[INFO] 23:32:07,767 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mj[37m[INFO] 23:32:07,770 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:07,772 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[m˜[37m[INFO] 23:32:07,772 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[m©[37m[INFO] 23:32:07,909 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:08,048 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:08,136 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:08,138 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:32:08,148 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:08,149 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:08,150 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:08,150 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:08,151 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:08,161 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A848DE9DFB94470950C3A8E3479B5CD7CB1A14982B9A79B481FB2A07B8DE0B3B, not inserting the second time
[mÙ[37m[INFO] 23:32:08,165 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mj[37m[INFO] 23:32:08,166 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:08,177 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mÙ[37m[INFO] 23:32:08,178 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mj[37m[INFO] 23:32:08,180 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:08,186 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mÙ[37m[INFO] 23:32:08,187 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mj[37m[INFO] 23:32:08,193 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:08,204 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mÙ[37m[INFO] 23:32:08,208 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mj[37m[INFO] 23:32:08,209 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:08,216 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mÙ[37m[INFO] 23:32:08,218 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mè[37m[INFO] 23:32:08,221 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:08,222 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mÙ[37m[INFO] 23:32:08,222 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mè[37m[INFO] 23:32:08,223 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[m˘[37m[INFO] 23:32:08,223 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mj[37m[INFO] 23:32:08,226 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:08,226 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:32:08,242 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key!
[m≥[37m[INFO] 23:32:08,249 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c017680
[ma[37m[INFO] 23:32:08,252 [Test worker] hikari.HikariDataSource.<init> - HikariPool-18 - Started.
[mp[37m[INFO] 23:32:08,260 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:32:08,261 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:32:08,262 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:08,266 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:08,267 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:08,270 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m£[37m[INFO] 23:32:08,337 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5020ec23] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:32:08,351 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:08,352 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:08,359 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÍ[37m[INFO] 23:32:08,359 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mj[37m[INFO] 23:32:08,362 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:08,366 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mÌ[37m[INFO] 23:32:08,367 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[m©[37m[INFO] 23:32:08,533 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:08,663 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:08,756 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:08,758 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:32:08,772 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:08,773 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:08,774 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:08,775 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:08,775 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:08,789 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B35736E26B6D12808DA0F2CAAAE34239F9D2916473C134EA9EF2CEAE88794635, not inserting the second time
[mÙ[37m[INFO] 23:32:08,793 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mj[37m[INFO] 23:32:08,795 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:08,800 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mÍ[37m[INFO] 23:32:08,801 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mj[37m[INFO] 23:32:08,802 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:08,806 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mÙ[37m[INFO] 23:32:08,807 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mj[37m[INFO] 23:32:08,808 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:08,812 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mÍ[37m[INFO] 23:32:08,813 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mj[37m[INFO] 23:32:08,814 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:08,818 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mÙ[37m[INFO] 23:32:08,818 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mj[37m[INFO] 23:32:08,820 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:08,824 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mÍ[37m[INFO] 23:32:08,824 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mj[37m[INFO] 23:32:08,825 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:08,830 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mÍ[37m[INFO] 23:32:08,831 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mè[37m[INFO] 23:32:08,833 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÔ[37m[INFO] 23:32:08,834 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mÍ[37m[INFO] 23:32:08,834 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mè[37m[INFO] 23:32:08,835 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÔ[37m[INFO] 23:32:08,836 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mj[37m[INFO] 23:32:08,837 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
[mÇ[31m[WARN] 23:32:08,838 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
[m»[37m[INFO] 23:32:08,848 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key!
[m≤[37m[INFO] 23:32:08,853 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@ca80381
[ma[37m[INFO] 23:32:08,855 [Test worker] hikari.HikariDataSource.<init> - HikariPool-19 - Started.
[mp[37m[INFO] 23:32:08,860 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
[mÒ[37m[INFO] 23:32:08,861 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÑ[37m[INFO] 23:32:08,861 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mÚ[37m[INFO] 23:32:08,865 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
[mz[37m[INFO] 23:32:08,866 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[m¿[37m[INFO] 23:32:08,868 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@19579047
[m¢[37m[INFO] 23:32:08,901 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f384b2e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[mÉ[37m[INFO] 23:32:08,915 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
[mç[37m[INFO] 23:32:08,917 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
[m°[37m[INFO] 23:32:08,921 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
[mÔ[37m[INFO] 23:32:08,921 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mj[37m[INFO] 23:32:08,924 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:08,926 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mÚ[37m[INFO] 23:32:08,927 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[m©[37m[INFO] 23:32:09,069 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9
[m©[37m[INFO] 23:32:09,186 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47
[m©[37m[INFO] 23:32:09,278 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
[m˚[31m[WARN] 23:32:09,280 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
[m‡[37m[INFO] 23:32:09,290 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
[m€[37m[INFO] 23:32:09,291 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:09,292 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m„[37m[INFO] 23:32:09,293 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
[m›[37m[INFO] 23:32:09,293 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
[mﬁ[31m[WARN] 23:32:09,305 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 54E781D1A147D7DC547FA7817AB2EFC57C4C8A2E552621719AB75F275F57BAFE, not inserting the second time
[mÙ[37m[INFO] 23:32:09,308 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mj[37m[INFO] 23:32:09,309 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:09,313 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298)
[mÔ[37m[INFO] 23:32:09,314 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mj[37m[INFO] 23:32:09,315 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:09,322 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mÙ[37m[INFO] 23:32:09,323 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mj[37m[INFO] 23:32:09,324 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:09,328 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912)
[mÔ[37m[INFO] 23:32:09,329 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mj[37m[INFO] 23:32:09,330 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:09,334 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mÙ[37m[INFO] 23:32:09,335 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mj[37m[INFO] 23:32:09,336 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[m˘[37m[INFO] 23:32:09,340 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767)
[mÔ[37m[INFO] 23:32:09,340 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mj[37m[INFO] 23:32:09,341 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:09,345 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mÍ[37m[INFO] 23:32:09,346 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mj[37m[INFO] 23:32:09,347 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÔ[37m[INFO] 23:32:09,351 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359)
[mÔ[37m[INFO] 23:32:09,352 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mj[37m[INFO] 23:32:09,353 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
[mÙ[37m[INFO] 23:32:09,357 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mÔ[37m[INFO] 23:32:09,358 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mè[37m[INFO] 23:32:09,360 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:32:09,360 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mÔ[37m[INFO] 23:32:09,361 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[mè[37m[INFO] 23:32:09,361 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
[mÙ[37m[INFO] 23:32:09,362 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921)
[m€[37m[INFO] 23:32:09,363 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:09,363 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m€[37m[INFO] 23:32:09,364 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:09,365 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m€[37m[INFO] 23:32:09,365 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:09,366 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[m€[37m[INFO] 23:32:09,366 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
[m›[37m[INFO] 23:32:09,367 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
[mı[37m[INFO] 23:32:09,432 [Mock network] flow.[7dd09191-b5db-4b49-953c-0ac141054b1a].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=9150239050117906552).
[m¢[37m[INFO] 23:32:09,497 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=9150239050117906552). {invocation_id=e259e6cc-bcdf-42e6-842a-229714f8c19d, invocation_timestamp=2019-10-31T23:32:09.496Z, session_id=e259e6cc-bcdf-42e6-842a-229714f8c19d, session_timestamp=2019-10-31T23:32:09.496Z}
[mˆ[37m[INFO] 23:32:09,672 [Mock network] flow.[7dd09191-b5db-4b49-953c-0ac141054b1a].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3633655208744426733).
[mÄ[37m[INFO] 23:32:09,689 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3633655208744426733). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ccef02bc-0106-403a-846e-e7c096cb77b2, invocation_timestamp=2019-10-31T23:32:09.687Z, session_id=ccef02bc-0106-403a-846e-e7c096cb77b2, session_timestamp=2019-10-31T23:32:09.687Z}
[mÒ[37m[INFO] 23:32:09,739 [Mock network] flow.[7dd09191-b5db-4b49-953c-0ac141054b1a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4517269667218174252).
[mÄ[37m[INFO] 23:32:09,766 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4517269667218174252). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1197f2b2-55a1-400b-b64d-366bbdb583d3, invocation_timestamp=2019-10-31T23:32:09.765Z, session_id=1197f2b2-55a1-400b-b64d-366bbdb583d3, session_timestamp=2019-10-31T23:32:09.765Z}
[mÒ[37m[INFO] 23:32:09,858 [Mock network] flow.[1c964bf5-a1f5-4a7e-8b57-5f04e8c9daea].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7382784748825815215).
[mä[37m[INFO] 23:32:09,895 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7382784748825815215). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=938154d1-12ec-412c-aed3-6614886c6b1a, invocation_timestamp=2019-10-31T23:32:09.895Z, session_id=938154d1-12ec-412c-aed3-6614886c6b1a, session_timestamp=2019-10-31T23:32:09.895Z}
[mˆ[37m[INFO] 23:32:09,997 [Mock network] flow.[4171451a-a42d-4362-9314-176cbdc9ed02].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-2955452023147895283).
[mî[37m[INFO] 23:32:10,036 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2955452023147895283). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=08165cba-56d6-4277-8a8a-d97a4bede233, invocation_timestamp=2019-10-31T23:32:10.035Z, session_id=08165cba-56d6-4277-8a8a-d97a4bede233, session_timestamp=2019-10-31T23:32:10.035Z}
[m≠[37m[INFO] 23:32:10,055 [Mock network] flow.[5d864d15-6152-4c51-86a1-3170ae9a22a2].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:10,117 [Mock network] flow.[5d864d15-6152-4c51-86a1-3170ae9a22a2].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[mõ[37m[INFO] 23:32:10,178 [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[])
[mı[37m[INFO] 23:32:10,207 [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-649828521548225602).
[mì[37m[INFO] 23:32:10,227 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-649828521548225602). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=3e0ae345-8a55-4eaa-a108-64f39b67eeb5, invocation_timestamp=2019-10-31T23:32:10.226Z, session_id=3e0ae345-8a55-4eaa-a108-64f39b67eeb5, session_timestamp=2019-10-31T23:32:10.226Z}
[m≠[37m[INFO] 23:32:10,237 [Mock network] flow.[34f3a515-6d3f-4a05-ad83-089850f9425d].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB
[mî[37m[INFO] 23:32:10,294 [Mock network] flow.[34f3a515-6d3f-4a05-ad83-089850f9425d].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB
[m†[37m[INFO] 23:32:10,335 [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[])
[m≠[37m[INFO] 23:32:10,393 [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:10,438 [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[m≠[37m[INFO] 23:32:10,440 [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:10,472 [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[mÏ[37m[INFO] 23:32:10,581 [Mock network] flow.[34f3a515-6d3f-4a05-ad83-089850f9425d].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2886378617039110920).
[mî[37m[INFO] 23:32:10,604 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2886378617039110920). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=e22d613d-cbbe-46af-9100-871264165cf6, invocation_timestamp=2019-10-31T23:32:10.603Z, session_id=e22d613d-cbbe-46af-9100-871264165cf6, session_timestamp=2019-10-31T23:32:10.603Z}
[m≠[37m[INFO] 23:32:10,617 [Mock network] flow.[b5a0fa6f-ff99-4043-b286-e7a568d9dcbf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:10,675 [Mock network] flow.[b5a0fa6f-ff99-4043-b286-e7a568d9dcbf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[m≠[37m[INFO] 23:32:10,676 [Mock network] flow.[b5a0fa6f-ff99-4043-b286-e7a568d9dcbf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB
[mî[37m[INFO] 23:32:10,705 [Mock network] flow.[b5a0fa6f-ff99-4043-b286-e7a568d9dcbf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB
[me[37m[INFO] 23:32:10,787 [Test worker] pool.HikariPool.shutdown - HikariPool-15 - Close initiated...
[mZ[37m[INFO] 23:32:10,794 [Test worker] pool.HikariPool.shutdown - HikariPool-15 - Closed.
[me[37m[INFO] 23:32:10,795 [Test worker] pool.HikariPool.shutdown - HikariPool-16 - Close initiated...
[mZ[37m[INFO] 23:32:10,797 [Test worker] pool.HikariPool.shutdown - HikariPool-16 - Closed.
[me[37m[INFO] 23:32:10,798 [Test worker] pool.HikariPool.shutdown - HikariPool-17 - Close initiated...
[mZ[37m[INFO] 23:32:10,804 [Test worker] pool.HikariPool.shutdown - HikariPool-17 - Closed.
[me[37m[INFO] 23:32:10,805 [Test worker] pool.HikariPool.shutdown - HikariPool-18 - Close initiated...
[mZ[37m[INFO] 23:32:10,808 [Test worker] pool.HikariPool.shutdown - HikariPool-18 - Closed.
[me[37m[INFO] 23:32:10,809 [Test worker] pool.HikariPool.shutdown - HikariPool-19 - Close initiated...
[mZ[37m[INFO] 23:32:10,812 [Test worker] pool.HikariPool.shutdown - HikariPool-19 - Closed.
[m