<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.dz0189.flow.AssetIssueFlowTests" tests="3" skipped="0" failures="0" errors="0" timestamp="2019-11-01T04:52:19" hostname="ip-172-31-46-176" time="26.035">
  <properties/>
  <testcase name="flowRecordsTheSameTransactionInBothPartyVaults" classname="com.dz0189.flow.AssetIssueFlowTests" time="20.788"/>
  <testcase name="flowReturnsCorrectlyFormedPartiallySignedTransaction" classname="com.dz0189.flow.AssetIssueFlowTests" time="2.715"/>
  <testcase name="flowReturnsVerifiedPartiallySignedTransaction" classname="com.dz0189.flow.AssetIssueFlowTests" time="2.532"/>
  <system-out><![CDATA[?[37m[INFO] 04:52:22,220 [Test worker] eddsa.EdDSASecurityProviderRegistrar.getOrCreateProvider - getOrCreateProvider(EdDSA) created instance of net.i2p.crypto.eddsa.EdDSASecurityProvider
?[m?[37m[INFO] 04:52:30,960 [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-e7d12302-18eb-485e-9715-d979835f7164.jar
?[m?[37m[INFO] 04:52:31,000 [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-ba797f9e-496b-45ac-ade7-46a9c6e57f05.jar
?[m?[37m[INFO] 04:52:31,063 [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e7d12302-18eb-485e-9715-d979835f7164.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-ba797f9e-496b-45ac-ade7-46a9c6e57f05.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig)
?[m?[37m[INFO] 04:52:31,109 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 04:52:31,118 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 04:52:31,145 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e7d12302-18eb-485e-9715-d979835f7164.jar
?[m?[37m[INFO] 04:52:31,167 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-ba797f9e-496b-45ac-ade7-46a9c6e57f05.jar
?[m?[37m[INFO] 04:52:31,202 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar
?[m?[37m[INFO] 04:52:31,253 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar
?[m?[37m[INFO] 04:52:31,297 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar
?[m?[37m[INFO] 04:52:31,435 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7917a661
?[m?[37m[INFO] 04:52:31,654 [Test worker] hikari.HikariDataSource.<init> - HikariPool-1 - Started.
?[m?[37m[INFO] 04:52:32,285 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 04:52:32,362 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:32,368 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:32,657 [Test worker] hibernate.Version.logVersion - HHH000412: Hibernate Core {5.2.6.Final}
?[m?[37m[INFO] 04:52:32,669 [Test worker] cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
?[m?[37m[INFO] 04:52:32,786 [Test worker] common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
?[m?[37m[INFO] 04:52:32,930 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 04:52:32,962 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 04:52:33,035 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 04:52:34,532 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@474d0eca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 04:52:34,832 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:35,173 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 04:52:35,472 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 04:52:35,475 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:35,487 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:35,599 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:35,602 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:35,888 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8
?[m?[37m[INFO] 04:52:36,031 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22
?[m?[37m[INFO] 04:52:36,128 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 04:52:36,135 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 04:52:36,241 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
?[m?[37m[INFO] 04:52:36,391 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 04:52:36,396 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 04:52:36,399 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:36,401 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:36,407 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 04:52:36,474 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4B69956B3A382881A2F2BB0806805987E9A9B5171B9FD15EA026F8020C747EE0, not inserting the second time
?[m?[37m[INFO] 04:52:36,557 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:36,580 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:36,583 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:36,585 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:36,587 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:36,589 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:36,594 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 04:52:36,596 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 04:52:36,619 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 04:52:36,632 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@47a1794f
?[m?[37m[INFO] 04:52:36,637 [Test worker] hikari.HikariDataSource.<init> - HikariPool-2 - Started.
?[m?[37m[INFO] 04:52:36,646 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 04:52:36,649 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:36,651 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:36,657 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 04:52:36,659 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 04:52:36,665 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 04:52:36,745 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f76fe64] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 04:52:36,780 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:36,783 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 04:52:36,792 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 04:52:36,795 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:36,801 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:36,807 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:36,809 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:36,982 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8
?[m?[37m[INFO] 04:52:37,119 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22
?[m?[37m[INFO] 04:52:37,221 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 04:52:37,228 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 04:52:37,257 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 04:52:37,263 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 04:52:37,267 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:37,270 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:37,274 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 04:52:37,303 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5B223331CC195D72083CF4DADF9C3C15FF21452B3009D3B95894F92A409C9195, not inserting the second time
?[m?[37m[INFO] 04:52:37,320 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:37,343 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:37,358 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:37,360 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:37,367 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:37,379 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:37,381 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:37,389 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:37,391 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:37,396 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:37,398 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:37,399 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:37,404 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 04:52:37,407 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 04:52:37,449 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 04:52:37,475 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@469f3203
?[m?[37m[INFO] 04:52:37,486 [Test worker] hikari.HikariDataSource.<init> - HikariPool-3 - Started.
?[m?[37m[INFO] 04:52:37,504 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 04:52:37,506 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:37,508 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:37,513 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 04:52:37,515 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 04:52:37,519 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 04:52:37,641 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e24af3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 04:52:37,693 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:37,697 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 04:52:37,714 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 04:52:37,716 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:37,724 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:37,735 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:37,737 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:37,875 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8
?[m?[37m[INFO] 04:52:38,007 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22
?[m?[37m[INFO] 04:52:38,104 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 04:52:38,106 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 04:52:38,121 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 04:52:38,123 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 04:52:38,124 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:38,125 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:38,127 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 04:52:38,140 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4FD80BF8F8137EAE0917CBDC0656F68E81D894A7F7CA22EE54777FB9BD55B0DE, not inserting the second time
?[m?[37m[INFO] 04:52:38,148 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:38,150 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:38,169 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475)
?[m?[37m[INFO] 04:52:38,171 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:38,173 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:38,183 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:38,184 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:38,186 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:38,196 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795)
?[m?[37m[INFO] 04:52:38,204 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:38,207 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:38,217 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:38,218 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:38,223 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:38,227 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:38,228 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:38,229 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:38,232 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716)
?[m?[37m[INFO] 04:52:39,402 [Mock network] flow.[389c7895-a83e-40a0-817a-6d66d658afc3].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=520664918274412500).
?[m?[37m[INFO] 04:52:39,640 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=520664918274412500). {invocation_id=312c818d-71cd-4f45-ba5e-8d349009f403, invocation_timestamp=2019-11-01T04:52:39.633Z, session_id=312c818d-71cd-4f45-ba5e-8d349009f403, session_timestamp=2019-11-01T04:52:39.633Z}
?[mSigned transaction hash: E595FE255FC1E32FBF9E5FA56CCDE2E7DDF51832859CF6EB36E67D1C933981E4
E595FE255FC1E32FBF9E5FA56CCDE2E7DDF51832859CF6EB36E67D1C933981E4 == E595FE255FC1E32FBF9E5FA56CCDE2E7DDF51832859CF6EB36E67D1C933981E4
E595FE255FC1E32FBF9E5FA56CCDE2E7DDF51832859CF6EB36E67D1C933981E4 == E595FE255FC1E32FBF9E5FA56CCDE2E7DDF51832859CF6EB36E67D1C933981E4
?[37m[INFO] 04:52:39,868 [Test worker] pool.HikariPool.shutdown - HikariPool-1 - Close initiated...
?[m?[37m[INFO] 04:52:39,880 [Test worker] pool.HikariPool.shutdown - HikariPool-1 - Closed.
?[m?[37m[INFO] 04:52:39,882 [Test worker] pool.HikariPool.shutdown - HikariPool-2 - Close initiated...
?[m?[37m[INFO] 04:52:39,889 [Test worker] pool.HikariPool.shutdown - HikariPool-2 - Closed.
?[m?[37m[INFO] 04:52:39,894 [Test worker] pool.HikariPool.shutdown - HikariPool-3 - Close initiated...
?[m?[37m[INFO] 04:52:39,900 [Test worker] pool.HikariPool.shutdown - HikariPool-3 - Closed.
?[m?[37m[INFO] 04:52:39,944 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 04:52:39,946 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 04:52:39,952 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4c0fddd6
?[m?[37m[INFO] 04:52:39,958 [Test worker] hikari.HikariDataSource.<init> - HikariPool-4 - Started.
?[m?[37m[INFO] 04:52:39,965 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 04:52:39,967 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:39,968 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:39,973 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 04:52:39,975 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 04:52:39,979 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 04:52:40,054 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@66e5e38e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 04:52:40,081 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:40,083 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 04:52:40,089 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 04:52:40,090 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:40,094 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:40,104 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:40,106 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:40,313 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8
?[m?[37m[INFO] 04:52:40,446 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22
?[m?[37m[INFO] 04:52:40,539 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 04:52:40,541 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 04:52:40,555 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
?[m?[37m[INFO] 04:52:40,563 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 04:52:40,566 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 04:52:40,567 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:40,569 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:40,570 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 04:52:40,593 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3D67174E7360986EBAF8C270068B282DFBACE2B2FE61C9BD320AC32A61DDF9F9, not inserting the second time
?[m?[37m[INFO] 04:52:40,603 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:40,612 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:40,616 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:40,618 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:40,620 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:40,621 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:40,626 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 04:52:40,627 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 04:52:40,658 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 04:52:40,676 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7decf9de
?[m?[37m[INFO] 04:52:40,686 [Test worker] hikari.HikariDataSource.<init> - HikariPool-5 - Started.
?[m?[37m[INFO] 04:52:40,694 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 04:52:40,699 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:40,701 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:40,708 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 04:52:40,714 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 04:52:40,720 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 04:52:40,842 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@68f870ee] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 04:52:40,879 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:40,883 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 04:52:40,899 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 04:52:40,901 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:40,907 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:40,913 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:40,923 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:41,062 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8
?[m?[37m[INFO] 04:52:41,186 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22
?[m?[37m[INFO] 04:52:41,279 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 04:52:41,281 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 04:52:41,295 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 04:52:41,296 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 04:52:41,297 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:41,299 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:41,300 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 04:52:41,313 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8418624D7A1064D3375ECB0F435A110573B502B5A2FFFCF2E4B4FD3ED3CDDD13, not inserting the second time
?[m?[37m[INFO] 04:52:41,318 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:41,321 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:41,343 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:41,347 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:41,355 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:41,367 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:41,369 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:41,374 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:41,376 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:41,377 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:41,379 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:41,380 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:41,386 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 04:52:41,387 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 04:52:41,410 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 04:52:41,421 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@68ab06b5
?[m?[37m[INFO] 04:52:41,427 [Test worker] hikari.HikariDataSource.<init> - HikariPool-6 - Started.
?[m?[37m[INFO] 04:52:41,437 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 04:52:41,438 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:41,443 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:41,450 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 04:52:41,452 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 04:52:41,458 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 04:52:41,602 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@420b4ec9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 04:52:41,647 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:41,656 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 04:52:41,661 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 04:52:41,666 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:41,669 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:41,676 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:41,678 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:41,819 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8
?[m?[37m[INFO] 04:52:41,932 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22
?[m?[37m[INFO] 04:52:42,026 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 04:52:42,028 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 04:52:42,041 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 04:52:42,043 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 04:52:42,044 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:42,046 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:42,047 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 04:52:42,065 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BAEC4DCADC436D1A1479CFAE98E90B592BAC3960CCE926AB263E6AF9A7B14E07, not inserting the second time
?[m?[37m[INFO] 04:52:42,072 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:42,074 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:42,088 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090)
?[m?[37m[INFO] 04:52:42,094 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:42,099 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:42,109 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:42,110 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:42,112 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:42,119 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901)
?[m?[37m[INFO] 04:52:42,121 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:42,123 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:42,132 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:42,133 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:42,137 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:42,138 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:42,142 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:42,143 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:42,146 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666)
?[m?[37m[INFO] 04:52:42,337 [Mock network] flow.[bfa96a90-b22f-4e54-ab65-8b0c4613326f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6995359634131847938).
?[m?[37m[INFO] 04:52:42,450 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6995359634131847938). {invocation_id=45d392a6-9a3e-4e37-bd4a-9ad97dcdadff, invocation_timestamp=2019-11-01T04:52:42.446Z, session_id=45d392a6-9a3e-4e37-bd4a-9ad97dcdadff, session_timestamp=2019-11-01T04:52:42.446Z}
?[mTransaction:
OUTPUT:     AssetState(amount=100 Asset(name=asset) issued by O=Mock Company 1, L=London, C=GB[00], owner=O=Mock Company 1, L=London, C=GB)
COMMAND:    com.dz0189.issue.AssetContract.Commands.Issue with pubkeys DL9teP89A9UPwWNJMKTwBu74Htt7aFUybaQtdVp7FiXHfx
ATTACHMENT: DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22

?[37m[INFO] 04:52:42,591 [Test worker] pool.HikariPool.shutdown - HikariPool-4 - Close initiated...
?[m?[37m[INFO] 04:52:42,602 [Test worker] pool.HikariPool.shutdown - HikariPool-4 - Closed.
?[m?[37m[INFO] 04:52:42,603 [Test worker] pool.HikariPool.shutdown - HikariPool-5 - Close initiated...
?[m?[37m[INFO] 04:52:42,608 [Test worker] pool.HikariPool.shutdown - HikariPool-5 - Closed.
?[m?[37m[INFO] 04:52:42,610 [Test worker] pool.HikariPool.shutdown - HikariPool-6 - Close initiated...
?[m?[37m[INFO] 04:52:42,618 [Test worker] pool.HikariPool.shutdown - HikariPool-6 - Closed.
?[m?[37m[INFO] 04:52:42,655 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 04:52:42,660 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 04:52:42,666 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6e78c38e
?[m?[37m[INFO] 04:52:42,675 [Test worker] hikari.HikariDataSource.<init> - HikariPool-7 - Started.
?[m?[37m[INFO] 04:52:42,681 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 04:52:42,682 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:42,686 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:42,693 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 04:52:42,695 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 04:52:42,701 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 04:52:42,816 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1b94ff3d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 04:52:42,858 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:42,860 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 04:52:42,867 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 04:52:42,868 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:42,926 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:42,940 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:42,942 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:43,093 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8
?[m?[37m[INFO] 04:52:43,214 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22
?[m?[37m[INFO] 04:52:43,304 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 04:52:43,306 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 04:52:43,316 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
?[m?[37m[INFO] 04:52:43,320 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 04:52:43,322 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 04:52:43,323 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:43,324 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:43,325 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 04:52:43,337 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 21CC100F984226BA639D2194762D6A12716FF7629FB76FB97B10A58D263C06BF, not inserting the second time
?[m?[37m[INFO] 04:52:43,343 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:43,354 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:43,356 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:43,357 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:43,358 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:43,359 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:43,361 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 04:52:43,362 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 04:52:43,376 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 04:52:43,391 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@111227a1
?[m?[37m[INFO] 04:52:43,395 [Test worker] hikari.HikariDataSource.<init> - HikariPool-8 - Started.
?[m?[37m[INFO] 04:52:43,408 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 04:52:43,409 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:43,410 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:43,417 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 04:52:43,419 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 04:52:43,422 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 04:52:43,506 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2d0f2d32] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 04:52:43,536 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:43,539 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 04:52:43,548 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 04:52:43,549 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:43,555 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:43,561 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:43,562 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:43,686 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8
?[m?[37m[INFO] 04:52:43,800 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22
?[m?[37m[INFO] 04:52:43,948 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 04:52:43,949 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 04:52:43,962 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 04:52:43,963 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 04:52:43,964 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:43,965 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:43,966 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 04:52:43,977 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1C6D06515BC4B9EA61BC3228DC6C62E8F917AAF0F22D2760BA9ECA4EA291974C, not inserting the second time
?[m?[37m[INFO] 04:52:43,982 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:43,984 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:43,998 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:43,999 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:44,001 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:44,007 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:44,008 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:44,012 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:44,013 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:44,014 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:44,015 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:44,016 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:44,018 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 04:52:44,019 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 04:52:44,031 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 04:52:44,038 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c58df2
?[m?[37m[INFO] 04:52:44,041 [Test worker] hikari.HikariDataSource.<init> - HikariPool-9 - Started.
?[m?[37m[INFO] 04:52:44,045 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 04:52:44,046 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:44,047 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:44,051 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 04:52:44,052 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 04:52:44,055 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 04:52:44,113 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3859ab2e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 04:52:44,147 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 04:52:44,148 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 04:52:44,154 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 04:52:44,155 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,159 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:44,163 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,164 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,297 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8
?[m?[37m[INFO] 04:52:44,427 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22
?[m?[37m[INFO] 04:52:44,515 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 04:52:44,517 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 04:52:44,531 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 04:52:44,532 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 04:52:44,533 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:44,534 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 04:52:44,535 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 04:52:44,546 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2682389E2DC55BAF6274A62F1152D579874D38BE502DD6855CDA3F2FC87A6B81, not inserting the second time
?[m?[37m[INFO] 04:52:44,554 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:44,557 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:44,572 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868)
?[m?[37m[INFO] 04:52:44,575 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,582 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:44,592 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,599 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:44,601 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:44,612 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549)
?[m?[37m[INFO] 04:52:44,616 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,618 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 04:52:44,627 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,628 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,635 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:44,645 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,646 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[37m[INFO] 04:52:44,650 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 04:52:44,651 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155)
?[m?[31m[WARN] 04:52:44,704 [Mock network] flow.[b278ba83-9f41-4cc0-8704-104c12d20350].run - Flow finished with exception
?[m net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 2B7509D52404EF3CD493A2F57945CCC52BE1DCA710A9FDCE8E6A515ADC0733E8
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
?[37m[INFO] 04:52:44,802 [Mock network] flow.[a0009fd1-96d1-40c0-9a36-5598758a5308].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6663520228221655000).
?[m?[37m[INFO] 04:52:44,957 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6663520228221655000). {invocation_id=594cbf33-c1d9-4410-93cf-35b63013a1a5, invocation_timestamp=2019-11-01T04:52:44.957Z, session_id=594cbf33-c1d9-4410-93cf-35b63013a1a5, session_timestamp=2019-11-01T04:52:44.957Z}
?[m?[37m[INFO] 04:52:45,108 [Test worker] pool.HikariPool.shutdown - HikariPool-7 - Close initiated...
?[m?[37m[INFO] 04:52:45,118 [Test worker] pool.HikariPool.shutdown - HikariPool-7 - Closed.
?[m?[37m[INFO] 04:52:45,142 [Test worker] pool.HikariPool.shutdown - HikariPool-8 - Close initiated...
?[m?[37m[INFO] 04:52:45,146 [Test worker] pool.HikariPool.shutdown - HikariPool-8 - Closed.
?[m?[37m[INFO] 04:52:45,147 [Test worker] pool.HikariPool.shutdown - HikariPool-9 - Close initiated...
?[m?[37m[INFO] 04:52:45,149 [Test worker] pool.HikariPool.shutdown - HikariPool-9 - Closed.
?[m]]></system-out>
  <system-err><![CDATA[QUASAR WARNING: Assertions enabled. This may harm performance.
QUASAR WARNING: Fibers are set to verify instrumentation. This may *severely* harm performance.
]]></system-err>
</testsuite>
