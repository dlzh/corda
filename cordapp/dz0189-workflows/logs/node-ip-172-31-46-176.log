[INFO ] 2019-11-01T03:31:38,654Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-59e46a5f-6feb-4ad6-b6f4-27aa8f71cc21.jar {}
[INFO ] 2019-11-01T03:31:38,685Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-470143de-2ce6-4d8f-9585-9bec83ef8359.jar {}
[INFO ] 2019-11-01T03:31:38,738Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-59e46a5f-6feb-4ad6-b6f4-27aa8f71cc21.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-470143de-2ce6-4d8f-9585-9bec83ef8359.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T03:31:38,775Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:38,779Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:38,794Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-59e46a5f-6feb-4ad6-b6f4-27aa8f71cc21.jar {}
[INFO ] 2019-11-01T03:31:38,816Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-470143de-2ce6-4d8f-9585-9bec83ef8359.jar {}
[INFO ] 2019-11-01T03:31:38,847Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T03:31:38,901Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T03:31:38,973Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T03:31:39,116Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4f9c641a {}
[INFO ] 2019-11-01T03:31:39,942Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:39,993Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:39,998Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:42,444Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:43,086Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:43,089Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:43,102Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:43,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:43,211Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:43,523Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:43,671Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:43,776Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:43,783Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:43,901Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:31:44,043Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:44,049Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:44,051Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:44,054Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:44,059Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:44,111Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F91650677BCF0E02212E31F8836DC1C5013765B0D7FAD2E4DFECD87B79959E9C, not inserting the second time {}
[INFO ] 2019-11-01T03:31:44,206Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:44,236Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:44,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:44,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:44,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:44,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:44,250Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:44,253Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:44,280Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:44,294Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3f3c4363 {}
[INFO ] 2019-11-01T03:31:44,313Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:44,315Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:44,320Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:44,462Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:44,474Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:44,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:44,482Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:44,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:44,489Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:44,629Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:44,773Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:44,867Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:44,870Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:44,890Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:44,893Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:44,900Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:44,903Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:44,906Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:44,928Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 16B934CD0A4611D267ADC47F1AB9A989A1094E1EFE6B3518ED5098D27AA7F424, not inserting the second time {}
[INFO ] 2019-11-01T03:31:44,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:44,943Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:44,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:44,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:44,979Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:45,003Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:45,006Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:45,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:45,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:45,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:45,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:45,023Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:45,027Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:45,028Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:45,073Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:45,096Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1b01eb6 {}
[INFO ] 2019-11-01T03:31:45,116Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:45,118Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:45,119Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:45,321Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:45,331Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:45,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,338Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:45,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,345Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,507Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:45,656Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:45,750Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:45,754Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:45,772Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:45,773Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:45,775Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:45,779Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:45,781Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:45,800Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DEB739D7FCAE7E4B66D588C39B22B9E4ADB4D43FA748E0571FD8C3699A779C5E, not inserting the second time {}
[INFO ] 2019-11-01T03:31:45,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:45,811Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:45,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579103089) {}
[INFO ] 2019-11-01T03:31:45,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,828Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:45,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,847Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:45,849Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:45,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579104476) {}
[INFO ] 2019-11-01T03:31:45,882Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,885Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:45,897Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,899Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:45,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,907Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:45,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:45,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579105333) {}
[INFO ] 2019-11-01T03:31:46,943Z [Mock network] flow.[73bad3b0-41a7-43fb-8ed0-1bca2ee258ff].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2360884649414161093). {}
[INFO ] 2019-11-01T03:31:47,135Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2360884649414161093). {invocation_id=e887d1fb-0b98-46fa-aec3-3a582aab5955, invocation_timestamp=2019-11-01T03:31:47.126Z, session_id=e887d1fb-0b98-46fa-aec3-3a582aab5955, session_timestamp=2019-11-01T03:31:47.126Z}
[INFO ] 2019-11-01T03:31:47,483Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:47,487Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:47,524Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@299fda70 {}
[INFO ] 2019-11-01T03:31:47,546Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:47,548Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:47,549Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:47,745Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:47,764Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:47,770Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:47,786Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:47,804Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:47,806Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:47,971Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:48,106Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:48,206Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:48,208Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:48,232Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:31:48,239Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:48,242Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:48,246Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:48,248Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:48,249Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:48,279Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FAC92F799F2615F535D0F09115AA1BD33997F183311121C82F74B77C75E2B2E5, not inserting the second time {}
[INFO ] 2019-11-01T03:31:48,287Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:48,305Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:48,306Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:48,307Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:48,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:48,310Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:48,317Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:48,319Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:48,349Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:48,365Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@48fa22b5 {}
[INFO ] 2019-11-01T03:31:48,384Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:48,387Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:48,389Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:48,511Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:48,518Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:48,520Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:48,524Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:48,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:48,533Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:48,673Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:48,791Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:48,920Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:48,923Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:48,936Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:48,938Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:48,939Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:48,941Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:48,942Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:48,955Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key ED4774E11AD0098F19BFA41F70E58257CBA0041AD9B9CD8DC9D9749A0FB55958, not inserting the second time {}
[INFO ] 2019-11-01T03:31:48,961Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:48,970Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:48,994Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:48,998Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:49,003Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:49,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:49,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:49,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:49,032Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:49,033Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:49,034Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:49,036Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:49,043Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:49,044Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:49,066Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:49,083Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4ffced9f {}
[INFO ] 2019-11-01T03:31:49,097Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:49,099Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:49,100Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:49,248Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:49,256Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:49,257Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,261Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:49,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,267Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,393Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:49,505Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:49,598Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:49,603Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:49,617Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:49,619Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:49,620Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:49,621Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:49,622Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:49,642Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 11A367F5C3DBBD3FAF235E7A032192DB45F628950E30CE5D82C8DBCB282A7782, not inserting the second time {}
[INFO ] 2019-11-01T03:31:49,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:49,653Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:49,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579107770) {}
[INFO ] 2019-11-01T03:31:49,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,672Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:49,680Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,681Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:49,683Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:49,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579108520) {}
[INFO ] 2019-11-01T03:31:49,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,694Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:49,702Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,703Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:49,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:49,712Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579109257) {}
[INFO ] 2019-11-01T03:31:49,842Z [Mock network] flow.[d2552b98-f9f6-479b-b796-413006bc2e94].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6293444733353029075). {}
[INFO ] 2019-11-01T03:31:49,928Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6293444733353029075). {invocation_id=5710d9c2-e4ae-4e47-916d-d6431d9ec654, invocation_timestamp=2019-11-01T03:31:49.927Z, session_id=5710d9c2-e4ae-4e47-916d-d6431d9ec654, session_timestamp=2019-11-01T03:31:49.927Z}
[INFO ] 2019-11-01T03:31:50,182Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:50,184Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:50,189Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2b9b56a {}
[INFO ] 2019-11-01T03:31:50,201Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:50,203Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:50,204Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:50,294Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:50,303Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:50,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:50,308Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:50,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:50,317Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:50,447Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:50,569Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:50,661Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:50,663Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:50,674Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:31:50,679Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:50,680Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:50,681Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:50,683Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:50,684Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:50,696Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0005038C11F27DFCDEA25656375E8B20A665A811E21FE10B9598441BD9D7B63F, not inserting the second time {}
[INFO ] 2019-11-01T03:31:50,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:50,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:50,713Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:50,714Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:50,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:50,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:50,718Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:50,719Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:50,733Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:50,746Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@74aebe27 {}
[INFO ] 2019-11-01T03:31:50,767Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:50,769Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:50,770Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:50,925Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:50,932Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:50,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:50,940Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:50,943Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:50,945Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:51,086Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:51,204Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:51,291Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:51,293Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:51,310Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:51,312Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:51,313Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:51,314Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:51,315Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:51,327Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4A6698D0C98CECE0F8F6B7568B0A073844D71F0F36D14F201549BCDACAD4EC4D, not inserting the second time {}
[INFO ] 2019-11-01T03:31:51,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:51,338Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:51,345Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:51,347Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:51,349Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:51,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:51,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:51,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:51,371Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:51,372Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:51,373Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:51,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:51,377Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:51,377Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:51,399Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:51,411Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4fe9d01e {}
[INFO ] 2019-11-01T03:31:51,425Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:51,431Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:51,432Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:51,515Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:51,528Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:51,530Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:51,534Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:51,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:51,540Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:51,681Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:51,834Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:51,923Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:51,925Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:51,942Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:51,945Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:51,946Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:51,951Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:51,952Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:51,971Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BED339A4FFB5C74F336F4A9D5ED904232C298C7406E34C4F0F79628FB79BD122, not inserting the second time {}
[INFO ] 2019-11-01T03:31:51,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:51,987Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:52,004Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579110304) {}
[INFO ] 2019-11-01T03:31:52,005Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:52,010Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:52,031Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:52,032Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:52,034Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:52,047Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579110933) {}
[INFO ] 2019-11-01T03:31:52,049Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:52,052Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:52,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:52,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:52,089Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:52,090Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:52,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[INFO ] 2019-11-01T03:31:52,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:52,099Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579111530) {}
[WARN ] 2019-11-01T03:31:52,173Z [Mock network] flow.[4bd8cf79-945b-4188-9b84-9f8788122229].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 84D125E04C918C80CD6753AFA75F3730301A83DA80A93015564C53BDBEAC0EBD
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T03:31:52,287Z [Mock network] flow.[00ed8d2a-6276-4d3a-bbcf-fc4bd444078e].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3880571580654390268). {}
[INFO ] 2019-11-01T03:31:52,383Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3880571580654390268). {invocation_id=db86b88c-faaf-419a-9e9c-0a53932e3fe5, invocation_timestamp=2019-11-01T03:31:52.382Z, session_id=db86b88c-faaf-419a-9e9c-0a53932e3fe5, session_timestamp=2019-11-01T03:31:52.382Z}
[INFO ] 2019-11-01T03:31:52,590Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:52,594Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:52,601Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@541ba633 {}
[INFO ] 2019-11-01T03:31:52,616Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:52,617Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:52,618Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:52,773Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:52,786Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:52,787Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:52,796Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:52,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:52,809Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:52,991Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:53,128Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:53,219Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:53,221Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:53,231Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:31:53,236Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:53,237Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:53,238Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:53,239Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:53,240Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:53,252Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BF0AD35122C1ABFE72A57292C45DA80DB0D982483A73B498DBE337F72A930D45, not inserting the second time {}
[INFO ] 2019-11-01T03:31:53,259Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:53,269Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:53,271Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:53,273Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:53,275Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:53,276Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:53,279Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:53,280Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:53,308Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:53,324Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@51ec8b9 {}
[INFO ] 2019-11-01T03:31:53,332Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:53,333Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:53,337Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:53,444Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:53,460Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:53,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:53,466Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:53,470Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:53,471Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:53,602Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:53,778Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:53,867Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:53,869Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:53,880Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:53,882Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:53,882Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:53,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:53,886Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:53,899Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2444785C133F170EAC0E31EAD1BEC73F9A7E15DA4EDDAB696C754A7BA7E71C47, not inserting the second time {}
[INFO ] 2019-11-01T03:31:53,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:53,908Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:53,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:53,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:53,918Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:53,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:53,925Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:53,928Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:53,929Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:53,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:53,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:53,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:53,934Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:53,934Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:53,956Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:53,971Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7146a2ee {}
[INFO ] 2019-11-01T03:31:53,989Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:53,991Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:53,992Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:54,059Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:54,065Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:54,066Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,069Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:54,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,074Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,221Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:54,339Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:54,430Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:54,432Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:54,444Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:54,445Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:54,446Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:54,447Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:54,447Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:54,508Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 606DA2B37C3F8AC1FD61900E2B03CE97AE60F97CBDD292F633C4E77973EC8732, not inserting the second time {}
[INFO ] 2019-11-01T03:31:54,521Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:54,524Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:54,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:54,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,545Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:54,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:54,564Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:54,576Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:54,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,584Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:54,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:54,606Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,608Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:54,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:54,612Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:54,613Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:54,634Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:54,650Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2518f20f {}
[INFO ] 2019-11-01T03:31:54,665Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:54,671Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:54,672Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:54,741Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:54,753Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:54,755Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:54,759Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:54,767Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:54,768Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:54,904Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:55,021Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:55,120Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:55,122Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:55,134Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:55,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:55,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:55,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:55,137Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:55,200Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A4756095B501DC9EAE58AD5E54E3743E40483250BF02C9FF1E6E637E7AEA80EC, not inserting the second time {}
[INFO ] 2019-11-01T03:31:55,205Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:55,208Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:55,230Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,231Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:55,245Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,259Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:55,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,261Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,272Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:55,279Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,284Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:55,285Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,286Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:55,317Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:55,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,321Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:55,322Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:55,333Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:55,339Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@34e67b03 {}
[INFO ] 2019-11-01T03:31:55,346Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:55,347Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:55,347Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:55,411Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:55,417Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:55,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,421Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,424Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,544Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:55,677Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:55,819Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:55,820Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:55,831Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:55,833Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:55,833Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:55,834Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:55,835Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:55,852Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3D92AE95D0A34CC6FFD6B630BFFFB9615E146E7E05C40E3E6493632BDC856FDD, not inserting the second time {}
[INFO ] 2019-11-01T03:31:55,858Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:55,860Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,872Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579112787) {}
[INFO ] 2019-11-01T03:31:55,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,875Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:55,888Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,898Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579113462) {}
[INFO ] 2019-11-01T03:31:55,899Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,901Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:55,918Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579114066) {}
[INFO ] 2019-11-01T03:31:55,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,932Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,940Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579114755) {}
[INFO ] 2019-11-01T03:31:55,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,947Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:55,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:55,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:55,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579115418) {}
[INFO ] 2019-11-01T03:31:55,965Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:55,966Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:55,967Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:55,967Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:55,968Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:55,969Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:55,970Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:55,971Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:56,072Z [Mock network] flow.[a36be958-cefb-4945-b90c-669383a0f71c].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3230835667957085290). {}
[INFO ] 2019-11-01T03:31:56,165Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3230835667957085290). {invocation_id=b63916b9-079e-4754-9e25-47ab3bfeadcb, invocation_timestamp=2019-11-01T03:31:56.164Z, session_id=b63916b9-079e-4754-9e25-47ab3bfeadcb, session_timestamp=2019-11-01T03:31:56.164Z}
[INFO ] 2019-11-01T03:31:56,411Z [Mock network] flow.[a36be958-cefb-4945-b90c-669383a0f71c].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2557804788924732394). {}
[INFO ] 2019-11-01T03:31:56,432Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2557804788924732394). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=691b5dab-ce2e-49be-a493-9b7c2fd514e2, invocation_timestamp=2019-11-01T03:31:56.432Z, session_id=691b5dab-ce2e-49be-a493-9b7c2fd514e2, session_timestamp=2019-11-01T03:31:56.432Z}
[INFO ] 2019-11-01T03:31:56,489Z [Mock network] flow.[a36be958-cefb-4945-b90c-669383a0f71c].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-365082513536758492). {}
[INFO ] 2019-11-01T03:31:56,505Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-365082513536758492). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=41618d1d-c9fd-419c-9aec-e378412257d2, invocation_timestamp=2019-11-01T03:31:56.505Z, session_id=41618d1d-c9fd-419c-9aec-e378412257d2, session_timestamp=2019-11-01T03:31:56.505Z}
[INFO ] 2019-11-01T03:31:56,641Z [Mock network] flow.[e07e1b06-c8cd-4fef-bbe0-d8de37f82593].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1588010538055489329). {}
[INFO ] 2019-11-01T03:31:56,678Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1588010538055489329). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=6f20e1b2-5886-4b23-80d2-d052bec1a9f7, invocation_timestamp=2019-11-01T03:31:56.677Z, session_id=6f20e1b2-5886-4b23-80d2-d052bec1a9f7, session_timestamp=2019-11-01T03:31:56.677Z}
[INFO ] 2019-11-01T03:31:56,884Z [Mock network] flow.[b415b973-78d0-40b9-811d-fa1e7bb311f5].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-64806606732167761). {}
[INFO ] 2019-11-01T03:31:56,949Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-64806606732167761). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=4d1e45ae-747a-4812-997f-83d43d1de858, invocation_timestamp=2019-11-01T03:31:56.942Z, session_id=4d1e45ae-747a-4812-997f-83d43d1de858, session_timestamp=2019-11-01T03:31:56.942Z}
[INFO ] 2019-11-01T03:31:56,982Z [Mock network] flow.[8de3593d-7156-4bbe-984f-73e5b07de615].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:31:57,054Z [Mock network] flow.[8de3593d-7156-4bbe-984f-73e5b07de615].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:31:57,197Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:31:57,239Z [Mock network] flow.[bfe0826b-d228-4e66-8f4f-cd2d31e81d8c].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2875682468285499804). {}
[INFO ] 2019-11-01T03:31:57,270Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2875682468285499804). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=08e586cb-9cda-438a-9aac-6d0f578134f6, invocation_timestamp=2019-11-01T03:31:57.269Z, session_id=08e586cb-9cda-438a-9aac-6d0f578134f6, session_timestamp=2019-11-01T03:31:57.269Z}
[INFO ] 2019-11-01T03:31:57,285Z [Mock network] flow.[56f5488b-5317-4a78-935a-c281a78e09eb].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:31:57,335Z [Mock network] flow.[56f5488b-5317-4a78-935a-c281a78e09eb].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:31:57,379Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[WARN ] 2019-11-01T03:31:57,535Z [Mock network] flow.[56f5488b-5317-4a78-935a-c281a78e09eb].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: 93E488253A2FCF67CC7235D31F05EC1002B911F1B93B145C485741DF6CF64A84
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:95) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:64) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:155) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:90) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
	at com.dz0189.trade.AssetContractNew.verifyTrade(AssetContractNew.kt:135) ~[dz0189-contracts-new.jar:?]
	at com.dz0189.trade.AssetContractNew.verify(AssetContractNew.kt:35) ~[dz0189-contracts-new.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 19 more
[WARN ] 2019-11-01T03:31:57,610Z [Mock network] flow.[bfe0826b-d228-4e66-8f4f-cd2d31e81d8c].run - Flow ended due to receiving exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: 93E488253A2FCF67CC7235D31F05EC1002B911F1B93B145C485741DF6CF64A84
	at net.corda.node.services.statemachine.FlowStateMachineImpl.erroredEnd(FlowStateMachineImpl.kt:497) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:481) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:84) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
[INFO ] 2019-11-01T03:31:57,727Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:57,728Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:57,732Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@22fce277 {}
[INFO ] 2019-11-01T03:31:57,740Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:57,741Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:57,742Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:57,816Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:57,822Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:57,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:57,825Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:57,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:57,832Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:57,958Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:58,073Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:58,195Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:58,197Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:58,205Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:31:58,211Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:58,212Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:58,213Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:58,213Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:58,214Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:58,225Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4476E72D1F69CCA226E28D7F528C044B9C19845743F9F1F35E0C6B3FF781868C, not inserting the second time {}
[INFO ] 2019-11-01T03:31:58,230Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:58,237Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:58,240Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:58,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:58,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:58,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:58,247Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:58,248Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:58,271Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:58,279Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@12cdb9c6 {}
[INFO ] 2019-11-01T03:31:58,292Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:58,293Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:58,294Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:58,404Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:58,411Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:58,413Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:58,417Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:58,420Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:58,421Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:58,545Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:58,663Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:58,754Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:58,755Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:58,766Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:58,767Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:58,768Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:58,769Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:58,769Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:58,810Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 647D5095C977DC815CD8DE08E60986367F9395FC942990638948A0C896DA1452, not inserting the second time {}
[INFO ] 2019-11-01T03:31:58,814Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:58,816Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:58,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:58,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:58,824Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:58,829Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:58,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:58,833Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:58,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:58,835Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:58,835Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:58,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:58,840Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:58,841Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:58,851Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:58,857Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@11be03a9 {}
[INFO ] 2019-11-01T03:31:58,864Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:58,865Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:58,866Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:58,925Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:58,932Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:58,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:58,936Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:58,939Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:58,939Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,068Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:59,185Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:59,273Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:59,275Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:59,289Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:59,290Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:59,290Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:59,291Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:59,292Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:59,302Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 412AC5487C5A59C0DF3959C906C223903D022E641AAACB0051AC01D22D7525AB, not inserting the second time {}
[INFO ] 2019-11-01T03:31:59,306Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:59,308Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:59,314Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,316Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,320Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,321Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:59,322Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:59,361Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,364Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,373Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:59,373Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,375Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:59,375Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,377Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:59,378Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:31:59,394Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:31:59,410Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@a78f800 {}
[INFO ] 2019-11-01T03:31:59,417Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:31:59,418Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:59,419Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:59,509Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:31:59,517Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:31:59,518Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,522Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,524Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,525Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,650Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:31:59,783Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:31:59,867Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:31:59,869Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:31:59,880Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:31:59,882Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:31:59,882Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:59,883Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:31:59,884Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:31:59,894Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 286FFFEBC827F905190FD0C6FE0628AE4A39BA8C3EF9E96A8B317AA3C91083C6, not inserting the second time {}
[INFO ] 2019-11-01T03:31:59,899Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:59,903Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,914Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:31:59,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,918Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:59,937Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:31:59,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,947Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,955Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:31:59,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,961Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:31:59,967Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:59,972Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,972Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:31:59,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:31:59,976Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:31:59,977Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:32:00,021Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:32:00,028Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@437eecdd {}
[INFO ] 2019-11-01T03:32:00,036Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:32:00,037Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:32:00,038Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:32:00,177Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:32:00,184Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:32:00,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,191Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:32:00,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,194Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,313Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:32:00,417Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:32:00,508Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:32:00,510Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:32:00,525Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:32:00,526Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:32:00,530Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:32:00,530Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:32:00,531Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:32:00,545Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BF4BDCD41738FA4E1BA7BEAD4FB65CE7A4460A25DCFF141B393882DDA11AE461, not inserting the second time {}
[INFO ] 2019-11-01T03:32:00,550Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:32:00,552Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:32:00,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579117822) {}
[INFO ] 2019-11-01T03:32:00,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,558Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:32:00,572Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,573Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:32:00,579Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:32:00,584Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579118413) {}
[INFO ] 2019-11-01T03:32:00,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,587Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:32:00,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:32:00,594Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:32:00,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579118933) {}
[INFO ] 2019-11-01T03:32:00,603Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,605Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:32:00,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:32:00,614Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:32:00,620Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579119518) {}
[INFO ] 2019-11-01T03:32:00,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,622Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:32:00,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,633Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:32:00,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:32:00,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579120185) {}
[INFO ] 2019-11-01T03:32:00,652Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:32:00,653Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:32:00,654Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:32:00,655Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:32:00,655Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:32:00,656Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:32:00,658Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:32:00,659Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:32:00,769Z [Mock network] flow.[c3cd3442-c192-4111-8d8f-54597e35b838].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7644446413027768319). {}
[INFO ] 2019-11-01T03:32:00,833Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7644446413027768319). {invocation_id=ed79fad4-8b1b-4e4e-942e-852d6bc2a48f, invocation_timestamp=2019-11-01T03:32:00.833Z, session_id=ed79fad4-8b1b-4e4e-942e-852d6bc2a48f, session_timestamp=2019-11-01T03:32:00.833Z}
[INFO ] 2019-11-01T03:32:00,970Z [Mock network] flow.[c3cd3442-c192-4111-8d8f-54597e35b838].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7210014664019787690). {}
[INFO ] 2019-11-01T03:32:00,985Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7210014664019787690). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=48cc009f-5419-465c-b0eb-91d6547d4b0c, invocation_timestamp=2019-11-01T03:32:00.985Z, session_id=48cc009f-5419-465c-b0eb-91d6547d4b0c, session_timestamp=2019-11-01T03:32:00.985Z}
[INFO ] 2019-11-01T03:32:01,025Z [Mock network] flow.[c3cd3442-c192-4111-8d8f-54597e35b838].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6948353294675627440). {}
[INFO ] 2019-11-01T03:32:01,046Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6948353294675627440). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c552cc2f-c796-4067-bfb0-21a23e96cad6, invocation_timestamp=2019-11-01T03:32:01.045Z, session_id=c552cc2f-c796-4067-bfb0-21a23e96cad6, session_timestamp=2019-11-01T03:32:01.045Z}
[INFO ] 2019-11-01T03:32:01,203Z [Mock network] flow.[1228b007-c782-43b4-b26a-a8f5e45e0820].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1571473824577099955). {}
[INFO ] 2019-11-01T03:32:01,256Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1571473824577099955). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=7d592de6-9b5a-457c-a0a9-e62d20fd12c1, invocation_timestamp=2019-11-01T03:32:01.255Z, session_id=7d592de6-9b5a-457c-a0a9-e62d20fd12c1, session_timestamp=2019-11-01T03:32:01.255Z}
[INFO ] 2019-11-01T03:32:01,349Z [Mock network] flow.[58339096-a3c4-458d-a18b-92efe1a1329a].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-8292176294501770080). {}
[INFO ] 2019-11-01T03:32:01,399Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8292176294501770080). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=433a4246-a65f-4f22-8282-565099984dc5, invocation_timestamp=2019-11-01T03:32:01.397Z, session_id=433a4246-a65f-4f22-8282-565099984dc5, session_timestamp=2019-11-01T03:32:01.397Z}
[INFO ] 2019-11-01T03:32:01,411Z [Mock network] flow.[08809da6-bac7-46b8-bce1-5d85c06272e3].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:32:01,485Z [Mock network] flow.[08809da6-bac7-46b8-bce1-5d85c06272e3].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:32:01,557Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:32:01,584Z [Mock network] flow.[59dc1356-ef26-4e9f-8fb8-9aa1b6654abc].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7551987844769752063). {}
[INFO ] 2019-11-01T03:32:01,601Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7551987844769752063). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=52932ca1-84e5-4945-a24b-dd012ff46649, invocation_timestamp=2019-11-01T03:32:01.600Z, session_id=52932ca1-84e5-4945-a24b-dd012ff46649, session_timestamp=2019-11-01T03:32:01.600Z}
[INFO ] 2019-11-01T03:32:01,638Z [Mock network] flow.[2fef14ef-00e8-4847-95ca-c1ce372592a2].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:32:01,688Z [Mock network] flow.[2fef14ef-00e8-4847-95ca-c1ce372592a2].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:32:01,727Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[WARN ] 2019-11-01T03:32:01,757Z [Mock network] flow.[2fef14ef-00e8-4847-95ca-c1ce372592a2].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: 3CC2C94C09A27A783311C90623BFF5395E0943C456BCFD24EA6F49CB9343A7F6
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:95) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:64) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:155) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:90) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
	at com.dz0189.trade.AssetContractNew.verifyTrade(AssetContractNew.kt:135) ~[dz0189-contracts-new.jar:?]
	at com.dz0189.trade.AssetContractNew.verify(AssetContractNew.kt:35) ~[dz0189-contracts-new.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 19 more
[WARN ] 2019-11-01T03:32:01,769Z [Mock network] flow.[59dc1356-ef26-4e9f-8fb8-9aa1b6654abc].run - Flow ended due to receiving exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: 3CC2C94C09A27A783311C90623BFF5395E0943C456BCFD24EA6F49CB9343A7F6
	at net.corda.node.services.statemachine.FlowStateMachineImpl.erroredEnd(FlowStateMachineImpl.kt:497) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:481) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:84) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
[INFO ] 2019-11-01T03:33:46,287Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-b6b8daa9-55aa-4cc0-bb40-887fbdb4e83c.jar {}
[INFO ] 2019-11-01T03:33:46,331Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-b1c1bc6c-563d-4876-aee6-2ab9364682b4.jar {}
[INFO ] 2019-11-01T03:33:46,379Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-b6b8daa9-55aa-4cc0-bb40-887fbdb4e83c.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-b1c1bc6c-563d-4876-aee6-2ab9364682b4.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T03:33:46,417Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:33:46,421Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:33:46,436Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-b6b8daa9-55aa-4cc0-bb40-887fbdb4e83c.jar {}
[INFO ] 2019-11-01T03:33:46,455Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-b1c1bc6c-563d-4876-aee6-2ab9364682b4.jar {}
[INFO ] 2019-11-01T03:33:46,512Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T03:33:46,566Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T03:33:46,646Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T03:33:46,781Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5abada1d {}
[INFO ] 2019-11-01T03:33:47,593Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:33:47,655Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:47,660Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:50,117Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:50,730Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:33:50,733Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:50,745Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:50,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:50,854Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:51,152Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:33:51,281Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:33:51,380Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:33:51,388Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:33:51,485Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:33:51,621Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:33:51,626Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:51,629Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:51,631Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:51,634Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:33:51,686Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 07AC6CF8A74D541A7E1798D1EC6E8B3D5714EDD97CB3CDDAE65DF600B3640DDB, not inserting the second time {}
[INFO ] 2019-11-01T03:33:51,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:51,843Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:51,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:51,850Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:51,854Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:51,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:51,869Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:33:51,878Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:33:51,919Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:33:51,950Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4dc29373 {}
[INFO ] 2019-11-01T03:33:51,965Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:33:51,968Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:51,970Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:52,203Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:52,214Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:33:52,217Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:52,222Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:52,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:52,230Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:52,362Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:33:52,496Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:33:52,593Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:33:52,601Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:33:52,629Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:33:52,631Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:52,635Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:52,638Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:52,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:33:52,667Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1A6F8E336549A49F158C33D971C7C2CD7CA77566A4E0B663B16162144EFC8600, not inserting the second time {}
[INFO ] 2019-11-01T03:33:52,683Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:52,688Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:52,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:52,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:52,717Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:52,738Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:52,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:52,750Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:52,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:52,755Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:52,759Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:52,761Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:52,766Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:33:52,768Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:33:52,807Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:33:52,824Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@58d3e8ee {}
[INFO ] 2019-11-01T03:33:52,847Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:33:52,849Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:52,851Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:53,061Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:53,083Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:33:53,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,095Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:53,104Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,106Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,245Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:33:53,400Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:33:53,487Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:33:53,489Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:33:53,508Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:33:53,510Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:53,514Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:53,516Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:53,517Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:33:53,537Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 426D0139772C42F15459CF89E9D262972412CBAE7F2E08609C6CE91AD2871461, not inserting the second time {}
[INFO ] 2019-11-01T03:33:53,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:53,547Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:53,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:53,562Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,565Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:53,587Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:53,591Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:53,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:53,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,624Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:53,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:53,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:53,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:53,671Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:33:53,674Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:33:53,713Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:33:53,731Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@183d3e8 {}
[INFO ] 2019-11-01T03:33:53,746Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:33:53,747Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:53,748Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:53,840Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:53,850Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:33:53,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:53,855Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:53,861Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:53,862Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:53,994Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:33:54,115Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:33:54,207Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:33:54,209Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:33:54,223Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:33:54,224Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:54,226Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:54,227Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:54,228Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:33:54,241Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D91E301494FCDE00DE0039A45BF34101360A38543226F1FE53346B48FCB8E2F5, not inserting the second time {}
[INFO ] 2019-11-01T03:33:54,250Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:54,257Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:54,269Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:54,273Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,277Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:54,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:54,307Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:54,329Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:54,332Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,336Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:54,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,359Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:54,364Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:54,384Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:54,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,389Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:54,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:54,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,426Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,428Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:54,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:54,439Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:33:54,441Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:33:54,476Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:33:54,494Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@502ad20 {}
[INFO ] 2019-11-01T03:33:54,504Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:33:54,505Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:54,507Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:54,682Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:54,690Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:33:54,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:54,696Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:54,704Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:54,705Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:54,838Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:33:54,962Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:33:55,057Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:33:55,060Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:33:55,073Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:33:55,075Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:55,076Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:55,078Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:55,079Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:33:55,092Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DF97C03E86C4561DF74D3FB20AE9DBDA201C0DAE3636727F089946B9985B5D63, not inserting the second time {}
[INFO ] 2019-11-01T03:33:55,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:55,104Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:55,116Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579230733) {}
[INFO ] 2019-11-01T03:33:55,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,120Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:55,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:55,140Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:55,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579232217) {}
[INFO ] 2019-11-01T03:33:55,160Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,162Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:55,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,179Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:55,181Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:55,195Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579233086) {}
[INFO ] 2019-11-01T03:33:55,197Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,199Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:55,217Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,219Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:55,221Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:55,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579233852) {}
[INFO ] 2019-11-01T03:33:55,250Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,252Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:55,259Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,264Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:55,265Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,267Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:55,268Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579234692) {}
[INFO ] 2019-11-01T03:33:55,275Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:55,276Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:55,277Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:55,278Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:55,279Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:55,280Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:55,281Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:55,282Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:56,197Z [Mock network] flow.[b5e821ab-d125-42ce-afd3-18ae563b20c2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8389561817747846639). {}
[INFO ] 2019-11-01T03:33:56,414Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8389561817747846639). {invocation_id=8b5e5a73-9446-4b83-a3e1-1b65f25e4859, invocation_timestamp=2019-11-01T03:33:56.407Z, session_id=8b5e5a73-9446-4b83-a3e1-1b65f25e4859, session_timestamp=2019-11-01T03:33:56.407Z}
[INFO ] 2019-11-01T03:33:56,815Z [Mock network] flow.[b5e821ab-d125-42ce-afd3-18ae563b20c2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8815976129134097647). {}
[INFO ] 2019-11-01T03:33:56,849Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8815976129134097647). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=983337a8-fba7-4807-8f0a-fee88c9981aa, invocation_timestamp=2019-11-01T03:33:56.848Z, session_id=983337a8-fba7-4807-8f0a-fee88c9981aa, session_timestamp=2019-11-01T03:33:56.848Z}
[INFO ] 2019-11-01T03:33:56,985Z [Mock network] flow.[b5e821ab-d125-42ce-afd3-18ae563b20c2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3379828755715019332). {}
[INFO ] 2019-11-01T03:33:57,036Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3379828755715019332). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=e28e83d0-3d9f-42aa-bf1b-a831d80f29cd, invocation_timestamp=2019-11-01T03:33:57.035Z, session_id=e28e83d0-3d9f-42aa-bf1b-a831d80f29cd, session_timestamp=2019-11-01T03:33:57.035Z}
[INFO ] 2019-11-01T03:33:57,237Z [Mock network] flow.[8cedef03-fb43-434a-b499-5e44251d8014].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-917378894233978561). {}
[INFO ] 2019-11-01T03:33:57,295Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-917378894233978561). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=8555a629-e94b-4374-951a-f3d98739b06c, invocation_timestamp=2019-11-01T03:33:57.294Z, session_id=8555a629-e94b-4374-951a-f3d98739b06c, session_timestamp=2019-11-01T03:33:57.294Z}
[INFO ] 2019-11-01T03:33:57,537Z [Mock network] flow.[0aa62511-7b06-429f-a670-e92f0b4e7379].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-5268204332562618376). {}
[INFO ] 2019-11-01T03:33:57,608Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5268204332562618376). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=259a11d0-c970-4945-a9d7-487d9d73dce6, invocation_timestamp=2019-11-01T03:33:57.606Z, session_id=259a11d0-c970-4945-a9d7-487d9d73dce6, session_timestamp=2019-11-01T03:33:57.606Z}
[INFO ] 2019-11-01T03:33:57,636Z [Mock network] flow.[4cb19257-0052-4292-9238-ced42636814f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:33:57,765Z [Mock network] flow.[4cb19257-0052-4292-9238-ced42636814f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:33:57,915Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:33:57,987Z [Mock network] flow.[5fdd963c-5e8b-4a89-9d8b-37105b7ecc6f].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8746989403359190208). {}
[INFO ] 2019-11-01T03:33:58,035Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8746989403359190208). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=8060bd13-f0e0-4842-96eb-d1d790a37847, invocation_timestamp=2019-11-01T03:33:58.033Z, session_id=8060bd13-f0e0-4842-96eb-d1d790a37847, session_timestamp=2019-11-01T03:33:58.033Z}
[INFO ] 2019-11-01T03:33:58,071Z [Mock network] flow.[745af375-ec61-4942-a81c-476220670496].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:33:58,139Z [Mock network] flow.[745af375-ec61-4942-a81c-476220670496].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:33:58,202Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[WARN ] 2019-11-01T03:33:58,492Z [Mock network] flow.[745af375-ec61-4942-a81c-476220670496].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: E03673C4BECC5CFAE6056042A73DBD91F7A57B35655F0412F6DCFA382052DD0C
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:95) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:64) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:155) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:90) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
	at com.dz0189.trade.AssetContractNew.verifyTrade(AssetContractNew.kt:135) ~[dz0189-contracts-new.jar:?]
	at com.dz0189.trade.AssetContractNew.verify(AssetContractNew.kt:35) ~[dz0189-contracts-new.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 19 more
[WARN ] 2019-11-01T03:33:58,509Z [Mock network] flow.[5fdd963c-5e8b-4a89-9d8b-37105b7ecc6f].run - Flow ended due to receiving exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: E03673C4BECC5CFAE6056042A73DBD91F7A57B35655F0412F6DCFA382052DD0C
	at net.corda.node.services.statemachine.FlowStateMachineImpl.erroredEnd(FlowStateMachineImpl.kt:497) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:481) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:84) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
[INFO ] 2019-11-01T03:33:58,680Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:33:58,687Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:33:58,696Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@e011627 {}
[INFO ] 2019-11-01T03:33:58,718Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:33:58,721Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:58,722Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:58,874Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:58,882Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:33:58,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:33:58,888Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:58,896Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:33:58,897Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:33:59,046Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:33:59,159Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:33:59,246Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:33:59,248Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:33:59,257Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:33:59,262Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:33:59,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:59,264Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:59,265Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:59,266Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:33:59,282Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EDB41C16ABCDE2D42B75CB743FDBCDCCCFE0C60B8B82BC6EF578B7D6E2B7E194, not inserting the second time {}
[INFO ] 2019-11-01T03:33:59,302Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:33:59,310Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:59,320Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:33:59,321Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:33:59,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:59,325Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:33:59,328Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:33:59,333Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:33:59,353Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:33:59,371Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@67cd64ea {}
[INFO ] 2019-11-01T03:33:59,382Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:33:59,385Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:59,386Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:59,507Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:33:59,517Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:33:59,518Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:33:59,522Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:59,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:33:59,530Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:33:59,667Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:33:59,797Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:33:59,892Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:33:59,894Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:33:59,910Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:33:59,911Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:33:59,915Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:59,916Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:33:59,917Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:33:59,940Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6B6611611A8C5998ADFA731101F6720F650F6E60D465464DB3C8A2EBAA5731BA, not inserting the second time {}
[INFO ] 2019-11-01T03:33:59,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:33:59,952Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:59,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:33:59,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:33:59,971Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:33:59,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:33:59,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:33:59,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:33:59,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:34:00,000Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:34:00,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:00,002Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:34:00,004Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:00,005Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:00,044Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:34:00,059Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6b69a28f {}
[INFO ] 2019-11-01T03:34:00,071Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:00,072Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:00,073Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:00,227Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:00,234Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:00,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,244Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:00,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,251Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,436Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:00,602Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:00,686Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:00,691Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:00,708Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:00,710Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:00,711Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:00,712Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:00,714Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:00,734Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 977531C294696E05BFC63E75623CA3519ADCE4D0488C7FE0045909496F778EE8, not inserting the second time {}
[INFO ] 2019-11-01T03:34:00,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:34:00,758Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:00,765Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:34:00,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,767Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:00,773Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:34:00,776Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:00,782Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:34:00,783Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,784Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:00,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,795Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:00,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,798Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:00,799Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:00,801Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:00,802Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:00,815Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:34:00,823Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3a605ee0 {}
[INFO ] 2019-11-01T03:34:00,833Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:00,835Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:00,836Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:00,932Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:00,947Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:00,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:00,953Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:00,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:00,958Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,094Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:01,213Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:01,297Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:01,300Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:01,315Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:01,316Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:01,317Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:01,318Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:01,319Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:01,381Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 70A5E96E310338C23095FC297247121134B48ACFD1FD898B66054BA269982422, not inserting the second time {}
[INFO ] 2019-11-01T03:34:01,387Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:34:01,388Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:01,404Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:34:01,406Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,407Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:01,416Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:34:01,420Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:01,431Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:34:01,432Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,436Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:01,450Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,452Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:01,454Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:01,460Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:01,461Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,462Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:01,468Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:01,473Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,474Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:01,476Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:01,478Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:01,479Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:01,492Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:34:01,500Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2e987ae0 {}
[INFO ] 2019-11-01T03:34:01,517Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:01,518Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:01,519Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:01,589Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:01,595Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:01,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:01,603Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:01,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:01,608Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:01,731Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:01,872Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:01,964Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:01,965Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:01,989Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:01,991Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:01,992Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:01,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:01,994Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:02,008Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 705249C6495D5693D17EBE3E37184437A4804E81B65CEDF0A7F739FBF0AFAFC6, not inserting the second time {}
[INFO ] 2019-11-01T03:34:02,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:34:02,021Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:02,080Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579238883) {}
[INFO ] 2019-11-01T03:34:02,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,086Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:02,099Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,100Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:34:02,106Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:02,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579239518) {}
[INFO ] 2019-11-01T03:34:02,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,117Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:02,130Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:02,140Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:02,146Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579240239) {}
[INFO ] 2019-11-01T03:34:02,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,149Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:02,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:02,157Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:02,162Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579240949) {}
[INFO ] 2019-11-01T03:34:02,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,165Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:02,174Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:02,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:02,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579241599) {}
[INFO ] 2019-11-01T03:34:02,194Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:02,195Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:02,196Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:02,197Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:02,198Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:02,199Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:02,200Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:02,201Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:02,282Z [Mock network] flow.[4019f2d1-4587-496a-b678-b0de36912aaa].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6517554965034922564). {}
[INFO ] 2019-11-01T03:34:02,371Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6517554965034922564). {invocation_id=f306d9c7-f49e-4201-87f2-0dc38d543ec7, invocation_timestamp=2019-11-01T03:34:02.364Z, session_id=f306d9c7-f49e-4201-87f2-0dc38d543ec7, session_timestamp=2019-11-01T03:34:02.364Z}
[INFO ] 2019-11-01T03:34:02,540Z [Mock network] flow.[4019f2d1-4587-496a-b678-b0de36912aaa].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7861971535556499855). {}
[INFO ] 2019-11-01T03:34:02,563Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7861971535556499855). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=178f249e-ba7a-4d9b-b695-2af268f4264f, invocation_timestamp=2019-11-01T03:34:02.561Z, session_id=178f249e-ba7a-4d9b-b695-2af268f4264f, session_timestamp=2019-11-01T03:34:02.561Z}
[INFO ] 2019-11-01T03:34:02,661Z [Mock network] flow.[4019f2d1-4587-496a-b678-b0de36912aaa].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8662926073483219198). {}
[INFO ] 2019-11-01T03:34:02,686Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8662926073483219198). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=dcde3427-8068-4a9b-bb37-b7f4034ad041, invocation_timestamp=2019-11-01T03:34:02.685Z, session_id=dcde3427-8068-4a9b-bb37-b7f4034ad041, session_timestamp=2019-11-01T03:34:02.685Z}
[INFO ] 2019-11-01T03:34:02,809Z [Mock network] flow.[16255445-00c0-494b-acd1-fff2389503eb].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5139874198711903255). {}
[INFO ] 2019-11-01T03:34:02,851Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5139874198711903255). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1d6cd348-8e60-43e1-8e20-66831ced2f0d, invocation_timestamp=2019-11-01T03:34:02.849Z, session_id=1d6cd348-8e60-43e1-8e20-66831ced2f0d, session_timestamp=2019-11-01T03:34:02.849Z}
[INFO ] 2019-11-01T03:34:02,959Z [Mock network] flow.[f2da121d-ac4a-44df-aa18-d3edd71b87b2].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=2595970802861149285). {}
[INFO ] 2019-11-01T03:34:03,007Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2595970802861149285). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=d3f443db-c51c-4175-9d88-124b99f4fd14, invocation_timestamp=2019-11-01T03:34:03.005Z, session_id=d3f443db-c51c-4175-9d88-124b99f4fd14, session_timestamp=2019-11-01T03:34:03.005Z}
[INFO ] 2019-11-01T03:34:03,031Z [Mock network] flow.[80369662-9f2f-4431-acb3-294ac0e5ae39].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:34:03,122Z [Mock network] flow.[80369662-9f2f-4431-acb3-294ac0e5ae39].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:34:03,179Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:34:03,197Z [Mock network] flow.[198cc9f7-faf6-4a7d-bfc2-1b90669e5667].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8346061772779119865). {}
[INFO ] 2019-11-01T03:34:03,214Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8346061772779119865). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=d8cc6157-332c-481c-b1b6-40531a416e69, invocation_timestamp=2019-11-01T03:34:03.213Z, session_id=d8cc6157-332c-481c-b1b6-40531a416e69, session_timestamp=2019-11-01T03:34:03.213Z}
[INFO ] 2019-11-01T03:34:03,222Z [Mock network] flow.[2a13a081-be2c-4662-8683-3e76b3717562].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:34:03,264Z [Mock network] flow.[2a13a081-be2c-4662-8683-3e76b3717562].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:34:03,363Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[WARN ] 2019-11-01T03:34:03,402Z [Mock network] flow.[2a13a081-be2c-4662-8683-3e76b3717562].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: 648E299E4945C7DAA209B7F715837A2AAFA9101EB7FBC35DDDDD4BEA797AC941
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:95) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:64) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:155) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:90) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
	at com.dz0189.trade.AssetContractNew.verifyTrade(AssetContractNew.kt:135) ~[dz0189-contracts-new.jar:?]
	at com.dz0189.trade.AssetContractNew.verify(AssetContractNew.kt:35) ~[dz0189-contracts-new.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 19 more
[WARN ] 2019-11-01T03:34:03,412Z [Mock network] flow.[198cc9f7-faf6-4a7d-bfc2-1b90669e5667].run - Flow ended due to receiving exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: 648E299E4945C7DAA209B7F715837A2AAFA9101EB7FBC35DDDDD4BEA797AC941
	at net.corda.node.services.statemachine.FlowStateMachineImpl.erroredEnd(FlowStateMachineImpl.kt:497) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:481) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:84) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
[INFO ] 2019-11-01T03:34:03,516Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:03,517Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:03,524Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@27908886 {}
[INFO ] 2019-11-01T03:34:03,535Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:03,536Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:03,537Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:03,613Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:03,619Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:03,620Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:03,623Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:03,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:03,633Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:03,765Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:03,947Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:04,038Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:04,039Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:04,048Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:34:04,053Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:04,054Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:04,055Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:04,056Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:04,057Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:04,068Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E1AFE7CDE177CA8FFEC4C72E4A5EA0FABD2237AEEE1D64F8BB6F6386DE9D45E1, not inserting the second time {}
[INFO ] 2019-11-01T03:34:04,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:04,076Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:04,077Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:04,078Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:04,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:04,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:04,082Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:04,082Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:04,094Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:34:04,100Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@288719c2 {}
[INFO ] 2019-11-01T03:34:04,112Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:04,113Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:04,114Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:04,215Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:04,227Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:04,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:04,230Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:04,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:04,234Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:04,357Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:04,516Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:04,601Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:04,603Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:04,613Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:04,614Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:04,615Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:04,616Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:04,617Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:04,626Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FE125F2E8F6A5AD386801BC9976A905E6C0B83E47DA426CB754B778CC6D69F68, not inserting the second time {}
[INFO ] 2019-11-01T03:34:04,630Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:04,633Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:04,637Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:04,638Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:04,639Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:04,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:04,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:04,646Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:04,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:04,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:04,649Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:04,649Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:04,651Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:04,652Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:04,662Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:34:04,668Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@631900ba {}
[INFO ] 2019-11-01T03:34:04,676Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:04,677Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:04,678Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:04,758Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:04,768Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:04,769Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:04,773Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:04,776Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:04,776Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:04,907Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:05,065Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:05,157Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:05,159Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:05,169Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:05,170Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:05,171Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:05,172Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:05,173Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:05,183Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D9FF5291B66A175B25C71E5E8BF6A0CE7CE64932A372B101063456373D0BB7BB, not inserting the second time {}
[INFO ] 2019-11-01T03:34:05,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:05,188Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:05,199Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579243620) {}
[INFO ] 2019-11-01T03:34:05,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:05,202Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:05,206Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:05,207Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:05,208Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:05,213Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579244227) {}
[INFO ] 2019-11-01T03:34:05,214Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:05,215Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:05,220Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:05,221Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:05,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:05,225Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:05,225Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:05,226Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:05,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579244769) {}
[INFO ] 2019-11-01T03:34:05,318Z [Mock network] flow.[80d24eac-d83d-438e-a14b-54f8216a4050].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4115942004093002214). {}
[INFO ] 2019-11-01T03:34:05,388Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4115942004093002214). {invocation_id=324c05bf-dd7c-411c-8275-1393bb20043e, invocation_timestamp=2019-11-01T03:34:05.386Z, session_id=324c05bf-dd7c-411c-8275-1393bb20043e, session_timestamp=2019-11-01T03:34:05.386Z}
[INFO ] 2019-11-01T03:34:05,640Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:05,641Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:05,647Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@69a45bbf {}
[INFO ] 2019-11-01T03:34:05,655Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:05,656Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:05,656Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:05,764Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:05,777Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:05,778Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:05,785Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:05,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:05,791Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:05,929Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:06,114Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:06,204Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:06,205Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:06,213Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:34:06,217Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:06,218Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:06,219Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:06,220Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:06,220Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:06,230Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 31005AC259538351C3FD8C815B99914B1EC4263963DF067D6CC65A7D53BD12A8, not inserting the second time {}
[INFO ] 2019-11-01T03:34:06,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:06,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:06,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:06,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:06,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:06,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:06,247Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:06,248Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:06,259Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:34:06,264Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7db13aee {}
[INFO ] 2019-11-01T03:34:06,275Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:06,276Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:06,277Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:06,360Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:06,367Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:06,368Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:06,371Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:06,377Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:06,378Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:06,505Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:06,687Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:06,774Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:06,775Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:06,794Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:06,797Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:06,802Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:06,803Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:06,804Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:06,820Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CDCE02396E170386C2FF3EA066CD73FF2E7041B2208806F8273CEB19003BEFEB, not inserting the second time {}
[INFO ] 2019-11-01T03:34:06,833Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:06,836Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:06,842Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:06,843Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:06,844Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:06,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:06,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:06,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:06,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:06,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:06,853Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:06,854Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:06,856Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:06,856Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:06,871Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:34:06,887Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2c130c8d {}
[INFO ] 2019-11-01T03:34:06,895Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:06,895Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:06,896Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:06,997Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:07,003Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:07,004Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,007Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:07,009Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,010Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,132Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:07,283Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:07,372Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:07,374Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:07,385Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:07,385Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:07,387Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:07,388Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:07,389Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:07,404Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C41A8B057981E1336871C16F9FCCA485BB5EA337BF9897E172EBB332A225CD8B, not inserting the second time {}
[INFO ] 2019-11-01T03:34:07,408Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:07,409Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:07,414Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579245778) {}
[INFO ] 2019-11-01T03:34:07,414Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,418Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:07,426Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,427Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:07,428Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:07,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579246368) {}
[INFO ] 2019-11-01T03:34:07,436Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,438Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:07,445Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,448Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:07,449Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,450Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,451Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:07,452Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579247004) {}
[INFO ] 2019-11-01T03:34:07,539Z [Mock network] flow.[850f98dc-4336-49e1-8369-ce50001f26a7].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-305614441334985368). {}
[INFO ] 2019-11-01T03:34:07,602Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-305614441334985368). {invocation_id=79564c7d-eb2e-4274-953d-823ef82528fc, invocation_timestamp=2019-11-01T03:34:07.602Z, session_id=79564c7d-eb2e-4274-953d-823ef82528fc, session_timestamp=2019-11-01T03:34:07.602Z}
[INFO ] 2019-11-01T03:34:07,779Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:07,785Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:07,793Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@202a418 {}
[INFO ] 2019-11-01T03:34:07,804Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:07,805Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:07,806Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:07,942Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:07,949Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:07,950Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:07,958Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:07,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:07,966Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:08,086Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:08,202Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:08,292Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:08,293Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:08,301Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:34:08,305Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:08,305Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:08,306Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:08,307Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:08,308Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:08,320Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 00B49A4B84CDF0C4EEBB8970ABD7642E90591EFE518D240343D1369B1E7E7F9C, not inserting the second time {}
[INFO ] 2019-11-01T03:34:08,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:08,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:08,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:08,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:08,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:08,336Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:08,339Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:08,340Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:08,358Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:34:08,365Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7e230a34 {}
[INFO ] 2019-11-01T03:34:08,376Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:08,377Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:08,378Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:08,506Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:08,511Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:08,512Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:08,515Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:08,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:08,518Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:08,655Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:08,778Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:08,866Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:08,868Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:08,878Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:08,879Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:08,880Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:08,881Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:08,881Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:08,892Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6EC3CFE8FFD11E06E784EF3D5FDBECCE2516F3D70CFC5658E24ADC2243CD4E28, not inserting the second time {}
[INFO ] 2019-11-01T03:34:08,895Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:08,896Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:08,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:08,906Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:08,907Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:08,911Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:08,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:08,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:08,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:08,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:08,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:08,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:08,919Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:34:08,920Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:34:08,929Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:34:08,934Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@46474c1b {}
[INFO ] 2019-11-01T03:34:08,942Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:34:08,943Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:08,944Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:09,040Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:34:09,046Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:34:09,047Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,049Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:09,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,052Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,230Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:34:09,360Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:34:09,460Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:34:09,461Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:34:09,471Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:34:09,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:34:09,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:09,473Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:34:09,474Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:34:09,483Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 590E2897041E81CACA048B441CA09FFE37F2F96E7BF690E6630C630A8ADA3F32, not inserting the second time {}
[INFO ] 2019-11-01T03:34:09,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:09,487Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:09,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579247950) {}
[INFO ] 2019-11-01T03:34:09,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,495Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:09,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:09,501Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:09,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579248512) {}
[INFO ] 2019-11-01T03:34:09,506Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,507Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:34:09,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:09,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[INFO ] 2019-11-01T03:34:09,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:34:09,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579249047) {}
[WARN ] 2019-11-01T03:34:09,541Z [Mock network] flow.[8666a657-c56d-4636-92c2-e8ce37f5105b].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 3C791300A2AE64B65981A8B7A32EB4271D63DD149B6B1A3CD51D391B198E2D09
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T03:34:09,598Z [Mock network] flow.[ff47bf7b-e323-4386-8180-6f5f006443ef].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8632506276357030608). {}
[INFO ] 2019-11-01T03:34:09,651Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8632506276357030608). {invocation_id=9c49498f-1f35-4fc6-a929-712850e80e3e, invocation_timestamp=2019-11-01T03:34:09.650Z, session_id=9c49498f-1f35-4fc6-a929-712850e80e3e, session_timestamp=2019-11-01T03:34:09.650Z}
[INFO ] 2019-11-01T03:35:34,442Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-bd2f19f3-2b42-4939-b699-70ae6fad1772.jar {}
[INFO ] 2019-11-01T03:35:34,481Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-d83fdfc2-0156-4dd2-975b-af0ff5b1599c.jar {}
[INFO ] 2019-11-01T03:35:34,528Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-bd2f19f3-2b42-4939-b699-70ae6fad1772.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-d83fdfc2-0156-4dd2-975b-af0ff5b1599c.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T03:35:34,575Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:34,586Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:34,611Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-bd2f19f3-2b42-4939-b699-70ae6fad1772.jar {}
[INFO ] 2019-11-01T03:35:34,636Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-d83fdfc2-0156-4dd2-975b-af0ff5b1599c.jar {}
[INFO ] 2019-11-01T03:35:34,682Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T03:35:34,736Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T03:35:34,788Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T03:35:34,963Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3e2c6937 {}
[INFO ] 2019-11-01T03:35:35,770Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:35,825Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:35,834Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:38,479Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:39,134Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:39,137Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:39,150Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:39,262Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:39,265Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:39,558Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:39,711Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:39,811Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:39,821Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:39,940Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:35:40,101Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:40,106Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:40,109Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:40,111Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:40,114Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:40,169Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DE278FBF308906CBFB37A951BA14FF074CFDD3915EE49D2D258714DDCD461EF4, not inserting the second time {}
[INFO ] 2019-11-01T03:35:40,257Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:40,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:40,285Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:40,287Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:40,288Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:40,290Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:40,295Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:40,297Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:40,317Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:40,330Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@be34cbc {}
[INFO ] 2019-11-01T03:35:40,347Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:40,350Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:40,352Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:40,552Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:40,574Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:40,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:40,593Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:40,608Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:40,611Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:40,785Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:40,933Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:41,033Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:41,036Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:41,063Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:41,073Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:41,074Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:41,076Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:41,078Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:41,100Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 78D414CF733E49D3C5F6EEC032BCEE7ABF3DC018F6181BD6677FD49E166FD1F4, not inserting the second time {}
[INFO ] 2019-11-01T03:35:41,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:41,115Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:41,126Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:41,128Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:41,131Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:41,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:41,145Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:41,151Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:41,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:41,154Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:41,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:41,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:41,160Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:41,161Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:41,180Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:41,192Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@650fc2d2 {}
[INFO ] 2019-11-01T03:35:41,206Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:41,208Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:41,210Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:41,356Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:41,378Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:41,380Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:41,389Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:41,402Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:41,404Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:41,570Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:41,706Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:41,843Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:41,846Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:41,866Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:41,869Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:41,871Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:41,872Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:41,874Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:41,906Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 00368E26E5EA41FFEFF62180189CC0841F0D4A2913CC2D3B6973B5DA5C4460D3, not inserting the second time {}
[INFO ] 2019-11-01T03:35:41,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:41,934Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:41,955Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:41,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:41,959Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:41,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:41,970Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:41,973Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:41,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:41,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:41,999Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:42,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:42,011Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:42,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:42,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:42,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:42,021Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:42,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:42,025Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:42,027Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:42,045Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:42,055Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@317056c {}
[INFO ] 2019-11-01T03:35:42,069Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:42,071Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:42,072Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:42,262Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:42,281Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:42,288Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,297Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:42,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,311Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,457Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:42,591Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:42,696Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:42,699Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:42,733Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:42,735Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:42,737Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:42,738Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:42,739Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:42,753Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C8958755865326216ECCB74848D3B2AF397F5773F0D44300649E750B6C7A1AE2, not inserting the second time {}
[INFO ] 2019-11-01T03:35:42,762Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:42,768Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:42,785Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:42,787Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,790Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:42,799Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:42,804Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:42,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:42,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,817Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:42,826Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:42,830Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:42,840Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:42,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,844Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:42,853Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,855Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:42,862Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,863Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:42,866Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:42,869Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:42,871Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:42,894Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:42,904Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6742fad1 {}
[INFO ] 2019-11-01T03:35:42,919Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:42,921Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:42,923Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:43,059Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:43,072Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:43,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,078Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:43,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,085Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,246Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:43,361Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:43,453Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:43,456Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:43,470Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:43,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:43,474Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:43,475Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:43,479Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:43,492Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0D516C79D4430A23D78CE5A7132D7BFC9D06E47EBC1CFEBBADAABEA66E5BC4F4, not inserting the second time {}
[INFO ] 2019-11-01T03:35:43,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:43,507Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:43,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579339137) {}
[INFO ] 2019-11-01T03:35:43,521Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,525Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:43,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:43,541Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:43,550Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579340580) {}
[INFO ] 2019-11-01T03:35:43,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,554Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:43,572Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,573Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:43,576Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:43,584Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579341380) {}
[INFO ] 2019-11-01T03:35:43,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,588Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:43,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:43,601Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:43,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579342282) {}
[INFO ] 2019-11-01T03:35:43,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,614Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:43,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:43,630Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,633Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:43,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579343073) {}
[INFO ] 2019-11-01T03:35:43,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:43,644Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:43,645Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:43,646Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:43,647Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:43,649Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:43,650Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:43,652Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:44,614Z [Mock network] flow.[7f383a91-b15d-47bc-b426-cc552b040d19].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3718824696323255455). {}
[INFO ] 2019-11-01T03:35:44,834Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3718824696323255455). {invocation_id=3ed58469-3ee5-4361-8f64-242afdd63255, invocation_timestamp=2019-11-01T03:35:44.826Z, session_id=3ed58469-3ee5-4361-8f64-242afdd63255, session_timestamp=2019-11-01T03:35:44.826Z}
[INFO ] 2019-11-01T03:35:45,208Z [Mock network] flow.[7f383a91-b15d-47bc-b426-cc552b040d19].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6271503812742606639). {}
[INFO ] 2019-11-01T03:35:45,253Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6271503812742606639). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=d8e0d528-c905-4c36-987c-68cfbd65b251, invocation_timestamp=2019-11-01T03:35:45.251Z, session_id=d8e0d528-c905-4c36-987c-68cfbd65b251, session_timestamp=2019-11-01T03:35:45.251Z}
[INFO ] 2019-11-01T03:35:45,380Z [Mock network] flow.[7f383a91-b15d-47bc-b426-cc552b040d19].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5812894222602771897). {}
[INFO ] 2019-11-01T03:35:45,413Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5812894222602771897). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b947b821-cbd5-418e-b646-da6eb641dca2, invocation_timestamp=2019-11-01T03:35:45.412Z, session_id=b947b821-cbd5-418e-b646-da6eb641dca2, session_timestamp=2019-11-01T03:35:45.412Z}
[INFO ] 2019-11-01T03:35:45,628Z [Mock network] flow.[392a4143-698c-4a13-b7d7-295bdd8e3cac].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4694803150305292365). {}
[INFO ] 2019-11-01T03:35:45,689Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4694803150305292365). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=697b2b03-9fad-4d3d-a6f7-4b25c340d6b0, invocation_timestamp=2019-11-01T03:35:45.688Z, session_id=697b2b03-9fad-4d3d-a6f7-4b25c340d6b0, session_timestamp=2019-11-01T03:35:45.688Z}
[INFO ] 2019-11-01T03:35:45,920Z [Mock network] flow.[68aa0432-b6cb-470f-a285-8405f2efeffa].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-2213778566669115085). {}
[INFO ] 2019-11-01T03:35:45,992Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2213778566669115085). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=5f1795c8-ed73-4561-bd40-f87f65707183, invocation_timestamp=2019-11-01T03:35:45.990Z, session_id=5f1795c8-ed73-4561-bd40-f87f65707183, session_timestamp=2019-11-01T03:35:45.990Z}
[INFO ] 2019-11-01T03:35:46,024Z [Mock network] flow.[fc192c17-486f-485b-9b31-7cc2443b3803].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:35:46,195Z [Mock network] flow.[fc192c17-486f-485b-9b31-7cc2443b3803].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:35:46,324Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:35:46,401Z [Mock network] flow.[09a36220-c5e2-42d8-b97d-047a8ec28358].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6601583492330377269). {}
[INFO ] 2019-11-01T03:35:46,446Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6601583492330377269). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=494bc977-6d59-4db9-92a5-1602a9aacf59, invocation_timestamp=2019-11-01T03:35:46.445Z, session_id=494bc977-6d59-4db9-92a5-1602a9aacf59, session_timestamp=2019-11-01T03:35:46.445Z}
[INFO ] 2019-11-01T03:35:46,481Z [Mock network] flow.[8557a7b3-594c-4207-8fac-7bfbe1d6fdf7].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:35:46,550Z [Mock network] flow.[8557a7b3-594c-4207-8fac-7bfbe1d6fdf7].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:35:46,615Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[WARN ] 2019-11-01T03:35:46,815Z [Mock network] flow.[8557a7b3-594c-4207-8fac-7bfbe1d6fdf7].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: EAC0B31D9998B904F8A6820A05B2A98FEF39FFF75DCD8E3C01FC47A9EEE2778C
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:95) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:64) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:155) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:90) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
	at com.dz0189.trade.AssetContractNew.verifyTrade(AssetContractNew.kt:135) ~[dz0189-contracts-new.jar:?]
	at com.dz0189.trade.AssetContractNew.verify(AssetContractNew.kt:35) ~[dz0189-contracts-new.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 19 more
[WARN ] 2019-11-01T03:35:46,829Z [Mock network] flow.[09a36220-c5e2-42d8-b97d-047a8ec28358].run - Flow ended due to receiving exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: EAC0B31D9998B904F8A6820A05B2A98FEF39FFF75DCD8E3C01FC47A9EEE2778C
	at net.corda.node.services.statemachine.FlowStateMachineImpl.erroredEnd(FlowStateMachineImpl.kt:497) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:481) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:84) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
[INFO ] 2019-11-01T03:35:47,017Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:47,019Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:47,030Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4f1a299a {}
[INFO ] 2019-11-01T03:35:47,068Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:47,070Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:47,071Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:47,188Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:47,197Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:47,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:47,202Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:47,212Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:47,217Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:47,356Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:47,480Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:47,569Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:47,571Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:47,581Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:35:47,586Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:47,587Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:47,588Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:47,589Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:47,590Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:47,602Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key ECB7C10891B740432AC94605771C15670E5A8D1E0091E6B3393653A2E234C358, not inserting the second time {}
[INFO ] 2019-11-01T03:35:47,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:47,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:47,619Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:47,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:47,622Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:47,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:47,632Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:47,635Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:47,662Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:47,678Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1ed1cc9a {}
[INFO ] 2019-11-01T03:35:47,697Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:47,704Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:47,707Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:47,871Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:47,880Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:47,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:47,888Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:47,897Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:47,899Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:48,071Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:48,194Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:48,279Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:48,281Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:48,293Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:48,295Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:48,296Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:48,297Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:48,299Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:48,310Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7D310FEC75F9A68061056E59A4422B8871058310CD47D4731756F3EC14E408DF, not inserting the second time {}
[INFO ] 2019-11-01T03:35:48,315Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:48,320Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:48,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:48,345Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:48,347Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:48,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:48,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:48,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:48,361Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:48,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:48,363Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:48,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:48,367Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:48,368Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:48,382Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:48,393Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@9ade2e {}
[INFO ] 2019-11-01T03:35:48,404Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:48,406Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:48,407Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:48,495Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:48,502Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:48,504Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:48,507Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:48,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:48,512Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:48,647Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:48,777Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:48,928Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:48,934Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:48,954Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:48,955Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:48,956Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:48,957Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:48,958Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:48,974Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 985E54BD8AD34B2C8CEB31D831F10E530ECED826F66E4DD7D12700FE231058B7, not inserting the second time {}
[INFO ] 2019-11-01T03:35:48,985Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:48,996Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:49,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579347198) {}
[INFO ] 2019-11-01T03:35:49,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:49,010Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:49,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:49,026Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:49,028Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:49,043Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579347883) {}
[INFO ] 2019-11-01T03:35:49,044Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:49,046Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:49,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:49,056Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:49,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:49,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:49,063Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:49,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:49,065Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579348504) {}
[INFO ] 2019-11-01T03:35:49,215Z [Mock network] flow.[8c14500f-e293-440e-920a-190b91ac7148].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3222279156729254143). {}
[INFO ] 2019-11-01T03:35:49,315Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3222279156729254143). {invocation_id=09c1f7d1-e284-4a3e-9e30-be8ca3e4554e, invocation_timestamp=2019-11-01T03:35:49.313Z, session_id=09c1f7d1-e284-4a3e-9e30-be8ca3e4554e, session_timestamp=2019-11-01T03:35:49.313Z}
[INFO ] 2019-11-01T03:35:49,536Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:49,537Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:49,550Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7f50546f {}
[INFO ] 2019-11-01T03:35:49,560Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:49,561Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:49,562Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:49,690Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:49,696Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:49,697Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:49,701Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:49,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:49,708Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:49,901Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:50,022Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:50,116Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:50,118Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:50,133Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:35:50,138Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:50,139Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:50,140Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:50,141Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:50,142Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:50,162Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 554DB28CC5E8FC3B45F4905287D72683123D69BE3FAB35C2492A54CB24270823, not inserting the second time {}
[INFO ] 2019-11-01T03:35:50,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:50,174Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:50,181Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:50,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:50,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:50,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:50,189Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:50,190Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:50,218Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:50,235Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4b76e5a9 {}
[INFO ] 2019-11-01T03:35:50,249Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:50,253Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:50,254Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:50,363Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:50,370Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:50,371Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:50,375Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:50,378Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:50,379Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:50,525Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:50,712Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:50,798Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:50,800Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:50,817Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:50,819Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:50,820Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:50,821Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:50,822Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:50,833Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EC89482C3AA7FE7FEB9D587DBFF286343CD52F5A5C7C34259DF8C1FC27252917, not inserting the second time {}
[INFO ] 2019-11-01T03:35:50,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:50,840Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:50,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:50,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:50,851Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:50,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:50,858Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:50,862Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:50,863Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:50,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:50,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:50,866Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:50,869Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:50,870Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:50,883Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:50,890Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5ac3661c {}
[INFO ] 2019-11-01T03:35:50,903Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:50,905Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:50,916Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:51,012Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:51,018Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:51,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,022Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:51,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,026Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,166Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:51,293Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:51,441Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:51,443Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:51,454Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:51,456Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:51,457Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:51,458Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:51,459Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:51,470Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C6E76CBEA34EBBEA02F61D9C734FD5C851F7305DE7F6700C412DCE9F397BF0BC, not inserting the second time {}
[INFO ] 2019-11-01T03:35:51,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:51,481Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:51,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579349697) {}
[INFO ] 2019-11-01T03:35:51,491Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,493Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:51,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,502Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:51,504Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:51,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579350371) {}
[INFO ] 2019-11-01T03:35:51,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,515Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:51,527Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,528Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,536Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:51,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:51,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579351019) {}
[INFO ] 2019-11-01T03:35:51,672Z [Mock network] flow.[3ab42310-1386-4876-890c-e9d46eafe82b].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7903339493070260869). {}
[INFO ] 2019-11-01T03:35:51,750Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7903339493070260869). {invocation_id=59931356-d757-46c7-9788-bbde0d8dc1de, invocation_timestamp=2019-11-01T03:35:51.745Z, session_id=59931356-d757-46c7-9788-bbde0d8dc1de, session_timestamp=2019-11-01T03:35:51.745Z}
[INFO ] 2019-11-01T03:35:52,018Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:52,019Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:52,025Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7cf12e69 {}
[INFO ] 2019-11-01T03:35:52,037Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:52,038Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:52,039Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:52,183Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:52,191Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:52,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:52,209Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:52,215Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:52,217Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:52,349Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:52,472Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:52,564Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:52,565Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:52,574Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:35:52,578Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:52,579Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:52,659Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:52,660Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:52,661Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:52,674Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 21E9C1BF7ACAE02A5D0B7192B8008BD24A22D90BD565B425A0E26CCB242D0A25, not inserting the second time {}
[INFO ] 2019-11-01T03:35:52,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:52,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:52,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:52,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:52,686Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:52,687Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:52,690Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:52,691Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:52,717Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:52,731Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4a6da18e {}
[INFO ] 2019-11-01T03:35:52,747Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:52,754Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:52,755Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:52,887Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:52,896Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:52,897Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:52,904Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:52,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:52,909Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:53,053Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:53,183Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:53,330Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:53,331Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:53,343Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:53,344Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:53,345Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:53,346Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:53,347Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:53,357Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 683E39D72284F64EC8B4A2C5BF57D90D5CDD52E28F15F57B8D637788D899CF78, not inserting the second time {}
[INFO ] 2019-11-01T03:35:53,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:53,364Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:53,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:53,371Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:53,373Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:53,378Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:53,379Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:53,382Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:53,383Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:53,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:53,395Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:53,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:53,398Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:35:53,399Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:35:53,410Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:35:53,417Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6fc03d15 {}
[INFO ] 2019-11-01T03:35:53,424Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:35:53,425Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:53,426Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:53,487Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:35:53,493Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:35:53,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,497Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:53,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,500Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,627Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:35:53,734Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:35:53,874Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:35:53,876Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:35:53,887Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:35:53,888Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:35:53,889Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:53,890Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:35:53,890Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:35:53,901Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B2FBCD2AFFCD5B251C832F25D33D0AB9AD6307F3BF8EF428CBC151000C5961EF, not inserting the second time {}
[INFO ] 2019-11-01T03:35:53,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:53,907Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:53,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579352192) {}
[INFO ] 2019-11-01T03:35:53,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,918Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:53,926Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:53,933Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:53,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579352897) {}
[INFO ] 2019-11-01T03:35:53,942Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,944Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:35:53,951Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,961Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:53,962Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[INFO ] 2019-11-01T03:35:53,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:35:53,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579353494) {}
[WARN ] 2019-11-01T03:35:54,026Z [Mock network] flow.[8fa5ced3-8541-4ef6-ae34-522efc933b7d].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 6B8A5E6E2EC5C558E5CB8929D4A9E30B4B06EBF9FD7F50D2CD6C904D6558F064
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T03:35:54,087Z [Mock network] flow.[56e4ca32-0480-440e-bf16-43711694a733].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3096132939693547563). {}
[INFO ] 2019-11-01T03:35:54,139Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3096132939693547563). {invocation_id=596e6f97-43ac-446b-a1d9-175a79f497ad, invocation_timestamp=2019-11-01T03:35:54.138Z, session_id=596e6f97-43ac-446b-a1d9-175a79f497ad, session_timestamp=2019-11-01T03:35:54.138Z}
[INFO ] 2019-11-01T03:45:06,499Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-e140125e-514d-4895-91e5-d7414cac8bca.jar {}
[INFO ] 2019-11-01T03:45:06,520Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-126fa90b-6050-4362-a3c7-3b694a02fc66.jar {}
[INFO ] 2019-11-01T03:45:06,563Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e140125e-514d-4895-91e5-d7414cac8bca.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-126fa90b-6050-4362-a3c7-3b694a02fc66.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T03:45:06,601Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:06,605Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:06,621Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e140125e-514d-4895-91e5-d7414cac8bca.jar {}
[INFO ] 2019-11-01T03:45:06,646Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-126fa90b-6050-4362-a3c7-3b694a02fc66.jar {}
[INFO ] 2019-11-01T03:45:06,702Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T03:45:06,771Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T03:45:06,836Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T03:45:07,020Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4f378817 {}
[INFO ] 2019-11-01T03:45:07,849Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:07,908Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:07,913Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:10,465Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:11,083Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:11,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:11,099Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:11,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:11,239Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:11,557Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:11,706Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:11,809Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:11,816Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:11,916Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:45:12,064Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:12,069Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:12,072Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:12,074Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:12,077Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:12,131Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2C506DA283E8BDCCD600B9E563D7AF09BB592D6BABC743832E25E5A94AAB25B0, not inserting the second time {}
[INFO ] 2019-11-01T03:45:12,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:12,275Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:12,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:12,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:12,285Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:12,290Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:12,298Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:12,303Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:12,348Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:12,377Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4b46f12d {}
[INFO ] 2019-11-01T03:45:12,400Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:12,405Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:12,409Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:12,640Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:12,651Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:12,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:12,660Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:12,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:12,668Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:12,824Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:12,963Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:13,055Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:13,058Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:13,079Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:13,081Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:13,083Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:13,084Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:13,085Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:13,108Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E64A3731121D8E2C7C20CE9D6957A67EFB02614D611BA4B4E02B8BA9EEC0E570, not inserting the second time {}
[INFO ] 2019-11-01T03:45:13,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:13,128Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:13,140Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:13,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:13,145Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:13,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:13,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:13,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:13,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:13,166Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:13,167Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:13,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:13,172Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:13,173Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:13,193Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:13,203Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@68640061 {}
[INFO ] 2019-11-01T03:45:13,215Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:13,217Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:13,218Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:13,366Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:13,382Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:13,383Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,388Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:13,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,396Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,533Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:13,654Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:13,774Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:13,776Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:13,792Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:13,794Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:13,796Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:13,797Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:13,798Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:13,820Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B7DC35386AA745FE55A62496318D8F4A00BD59F969BA3DADAA03872F41FC8F1A, not inserting the second time {}
[INFO ] 2019-11-01T03:45:13,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:13,851Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:13,862Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:13,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,867Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:13,879Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:13,883Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:13,901Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:13,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,927Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:13,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,950Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:13,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:13,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:13,969Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:13,974Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:14,009Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:14,030Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2bd2cfae {}
[INFO ] 2019-11-01T03:45:14,041Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:14,043Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:14,048Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:14,170Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:14,179Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:14,181Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,186Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:14,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,194Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,332Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:14,457Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:14,557Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:14,560Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:14,593Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:14,594Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:14,598Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:14,599Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:14,600Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:14,628Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AB0F556544E69D72048822D182855986BB028F3E09DBF8322AC4478C66F8D44A, not inserting the second time {}
[INFO ] 2019-11-01T03:45:14,637Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:14,640Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:14,661Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:14,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,667Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:14,686Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:14,695Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:14,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:14,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,727Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:14,747Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,748Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:14,753Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:14,773Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:14,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,779Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:14,798Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,812Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:14,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:14,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:14,822Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:14,825Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:14,857Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:14,877Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5836edc4 {}
[INFO ] 2019-11-01T03:45:14,896Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:14,898Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:14,903Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:15,060Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:15,068Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:15,070Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,074Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:15,078Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,079Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,221Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:15,370Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:15,456Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:15,458Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:15,476Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:15,479Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:15,480Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:15,485Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:15,490Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:15,508Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 02330E484F27F3419CA4DD51D046F64ADCA1DC1A32F5A4252123E12CBE6F169D, not inserting the second time {}
[INFO ] 2019-11-01T03:45:15,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:15,529Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:15,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579911086) {}
[INFO ] 2019-11-01T03:45:15,549Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,556Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:15,574Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,576Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:15,582Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:15,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579912654) {}
[INFO ] 2019-11-01T03:45:15,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,605Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:15,619Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,627Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:15,630Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:15,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579913383) {}
[INFO ] 2019-11-01T03:45:15,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,655Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:15,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,674Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:15,677Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:15,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579914181) {}
[INFO ] 2019-11-01T03:45:15,686Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,690Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:15,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:15,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,718Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:15,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579915070) {}
[INFO ] 2019-11-01T03:45:15,736Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:15,737Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:15,739Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:15,740Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:15,742Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:15,744Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:15,746Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:15,752Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:16,760Z [Mock network] flow.[969ee392-d89a-4e89-b9e4-7ce631621a91].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7656054284430187999). {}
[INFO ] 2019-11-01T03:45:16,990Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7656054284430187999). {invocation_id=4935e383-1f36-42d2-8390-61352db097ca, invocation_timestamp=2019-11-01T03:45:16.983Z, session_id=4935e383-1f36-42d2-8390-61352db097ca, session_timestamp=2019-11-01T03:45:16.983Z}
[INFO ] 2019-11-01T03:45:17,363Z [Mock network] flow.[969ee392-d89a-4e89-b9e4-7ce631621a91].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6514468583684158518). {}
[INFO ] 2019-11-01T03:45:17,403Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6514468583684158518). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=cda6bd88-a23d-43e6-9050-4214828c795d, invocation_timestamp=2019-11-01T03:45:17.401Z, session_id=cda6bd88-a23d-43e6-9050-4214828c795d, session_timestamp=2019-11-01T03:45:17.401Z}
[INFO ] 2019-11-01T03:45:17,541Z [Mock network] flow.[969ee392-d89a-4e89-b9e4-7ce631621a91].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6149151721904515477). {}
[INFO ] 2019-11-01T03:45:17,596Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6149151721904515477). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5bd0947d-fc6d-440a-b48f-8f1d36a9d3e8, invocation_timestamp=2019-11-01T03:45:17.595Z, session_id=5bd0947d-fc6d-440a-b48f-8f1d36a9d3e8, session_timestamp=2019-11-01T03:45:17.595Z}
[INFO ] 2019-11-01T03:45:17,737Z [Mock network] flow.[0fe30375-755a-4659-9d29-f77c0072f58d].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2442446347912827764). {}
[INFO ] 2019-11-01T03:45:17,774Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2442446347912827764). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=2fdfe576-043e-43f5-8f5d-3798868f651a, invocation_timestamp=2019-11-01T03:45:17.773Z, session_id=2fdfe576-043e-43f5-8f5d-3798868f651a, session_timestamp=2019-11-01T03:45:17.773Z}
[INFO ] 2019-11-01T03:45:17,985Z [Mock network] flow.[09a45af6-d6f7-4b9a-99dc-6e7ec8d01166].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-2086586313612684424). {}
[INFO ] 2019-11-01T03:45:18,060Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2086586313612684424). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=9c0197e3-a1b8-4c3d-8031-52c8f56c7ab0, invocation_timestamp=2019-11-01T03:45:18.058Z, session_id=9c0197e3-a1b8-4c3d-8031-52c8f56c7ab0, session_timestamp=2019-11-01T03:45:18.058Z}
[INFO ] 2019-11-01T03:45:18,078Z [Mock network] flow.[6d87b127-dd12-48c7-9d20-323aaaf14259].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:45:18,213Z [Mock network] flow.[6d87b127-dd12-48c7-9d20-323aaaf14259].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:45:18,345Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:45:18,424Z [Mock network] flow.[0d711ef1-814d-4a74-b742-335edb91c46f].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5089553637287803893). {}
[INFO ] 2019-11-01T03:45:18,474Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5089553637287803893). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=06fcddc1-9816-49e3-b9db-ef9a9a3e2cfd, invocation_timestamp=2019-11-01T03:45:18.472Z, session_id=06fcddc1-9816-49e3-b9db-ef9a9a3e2cfd, session_timestamp=2019-11-01T03:45:18.472Z}
[INFO ] 2019-11-01T03:45:18,504Z [Mock network] flow.[5abc84cf-a2f5-4e37-8bc5-de85b33f97b6].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:45:18,579Z [Mock network] flow.[5abc84cf-a2f5-4e37-8bc5-de85b33f97b6].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:45:18,649Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[WARN ] 2019-11-01T03:45:18,879Z [Mock network] flow.[5abc84cf-a2f5-4e37-8bc5-de85b33f97b6].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: CD9F5249283BA6CDD91E9B3B1F3F0568CEDE79269C42BE9C7642E26396420B3C
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:95) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:64) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:155) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:90) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
	at com.dz0189.trade.AssetContractNew.verifyTrade(AssetContractNew.kt:135) ~[dz0189-contracts-new.jar:?]
	at com.dz0189.trade.AssetContractNew.verify(AssetContractNew.kt:35) ~[dz0189-contracts-new.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 19 more
[WARN ] 2019-11-01T03:45:18,900Z [Mock network] flow.[0d711ef1-814d-4a74-b742-335edb91c46f].run - Flow ended due to receiving exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: There must be output Prides paid to the recipient., contract: com.dz0189.trade.AssetContractNew, transaction: CD9F5249283BA6CDD91E9B3B1F3F0568CEDE79269C42BE9C7642E26396420B3C
	at net.corda.node.services.statemachine.FlowStateMachineImpl.erroredEnd(FlowStateMachineImpl.kt:497) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:481) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:84) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: net.corda.core.CordaRuntimeException: java.lang.IllegalArgumentException: Failed requirement: There must be output Prides paid to the recipient.
[INFO ] 2019-11-01T03:45:19,051Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:19,053Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:19,063Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5fe28135 {}
[INFO ] 2019-11-01T03:45:19,079Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:19,084Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:19,088Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:19,212Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:19,220Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:19,221Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:19,225Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:19,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:19,233Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:19,379Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:19,502Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:19,598Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:19,600Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:19,609Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:45:19,614Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:19,615Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:19,616Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:19,617Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:19,618Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:19,630Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CA6D0CF6D249690CE1B807BD38F94B20D878DC2E84E99A3F64474204FFC3B383, not inserting the second time {}
[INFO ] 2019-11-01T03:45:19,637Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:19,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:19,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:19,649Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:19,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:19,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:19,654Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:19,655Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:19,669Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:19,676Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7a6d47ae {}
[INFO ] 2019-11-01T03:45:19,685Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:19,686Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:19,687Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:19,815Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:19,827Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:19,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:19,843Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:19,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:19,852Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:19,981Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:20,129Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:20,221Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:20,223Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:20,235Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:20,236Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:20,238Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:20,239Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:20,240Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:20,251Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C5E71D9530C8317246208A2BE8C9ED065780AA4A2F97CCB23EB6AACBB6E85276, not inserting the second time {}
[INFO ] 2019-11-01T03:45:20,256Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:20,262Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:20,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:20,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:20,279Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:20,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:20,292Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:20,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:20,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:20,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:20,303Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:20,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:20,306Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:20,307Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:20,331Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:20,339Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@169dd32 {}
[INFO ] 2019-11-01T03:45:20,349Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:20,353Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:20,354Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:20,462Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:20,481Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:20,482Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,485Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:20,491Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,493Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,633Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:20,752Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:20,845Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:20,847Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:20,865Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:20,867Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:20,868Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:20,868Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:20,869Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:20,885Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0B285EAEA7D1D9956D49C688604E0174896BEC2E35095AB4D1F721BCDC116B7E, not inserting the second time {}
[INFO ] 2019-11-01T03:45:20,892Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:20,894Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:20,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579919221) {}
[INFO ] 2019-11-01T03:45:20,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,914Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:20,926Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,929Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:20,930Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:20,943Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579919836) {}
[INFO ] 2019-11-01T03:45:20,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,946Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:20,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:20,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:20,967Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:20,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579920482) {}
[INFO ] 2019-11-01T03:45:21,132Z [Mock network] flow.[8f419424-ea94-4349-babb-a76ceb19b3ef].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3666660662776599969). {}
[INFO ] 2019-11-01T03:45:21,234Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3666660662776599969). {invocation_id=8ac33d91-2e6f-49ef-95b6-fa353a0b4203, invocation_timestamp=2019-11-01T03:45:21.230Z, session_id=8ac33d91-2e6f-49ef-95b6-fa353a0b4203, session_timestamp=2019-11-01T03:45:21.230Z}
[INFO ] 2019-11-01T03:45:21,455Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:21,456Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:21,463Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5f7ef251 {}
[INFO ] 2019-11-01T03:45:21,476Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:21,477Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:21,483Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:21,635Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:21,647Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:21,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:21,652Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:21,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:21,661Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:21,836Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:21,957Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:22,045Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:22,047Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:22,061Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:45:22,065Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:22,066Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:22,067Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:22,068Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:22,069Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:22,081Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 13E11D26ED6A07625D5A920CC1C45D3446F595590F79B4ACF2E0778D368DDB5A, not inserting the second time {}
[INFO ] 2019-11-01T03:45:22,088Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:22,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:22,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:22,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:22,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:22,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:22,106Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:22,107Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:22,136Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:22,148Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3b8fdf09 {}
[INFO ] 2019-11-01T03:45:22,160Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:22,161Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:22,162Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:22,294Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:22,303Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:22,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:22,307Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:22,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:22,310Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:22,453Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:22,584Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:22,724Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:22,725Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:22,745Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:22,746Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:22,748Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:22,749Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:22,750Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:22,763Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 68129FF885D49BCC4EEBEE4BFBBBED48B9CB2CC1AC2556D26EA4477167AE22ED, not inserting the second time {}
[INFO ] 2019-11-01T03:45:22,768Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:22,770Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:22,777Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:22,778Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:22,779Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:22,784Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:22,785Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:22,789Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:22,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:22,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:22,792Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:22,793Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:22,795Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:22,796Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:22,807Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:22,814Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@246498ec {}
[INFO ] 2019-11-01T03:45:22,821Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:22,822Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:22,823Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:22,893Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:22,905Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:22,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:22,912Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:22,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:22,922Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:23,057Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:23,172Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:23,346Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:23,348Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:23,359Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:23,361Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:23,362Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:23,363Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:23,364Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:23,374Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A02668D4982BFB3D2D202F860DE183FAD92F57C6C6E347295C485AA4687297F8, not inserting the second time {}
[INFO ] 2019-11-01T03:45:23,379Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:23,382Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:23,393Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579921648) {}
[INFO ] 2019-11-01T03:45:23,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:23,396Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:23,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:23,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:23,412Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:23,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579922304) {}
[INFO ] 2019-11-01T03:45:23,425Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:23,427Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:23,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:23,436Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:23,445Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:23,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:23,447Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:23,448Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:23,449Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579922909) {}
[INFO ] 2019-11-01T03:45:23,525Z [Mock network] flow.[61082bdf-80ee-493e-8702-f420f123f42d].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1780211423182242942). {}
[INFO ] 2019-11-01T03:45:23,583Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1780211423182242942). {invocation_id=f55acf8a-569d-47ea-9f3e-d71df2c371d9, invocation_timestamp=2019-11-01T03:45:23.581Z, session_id=f55acf8a-569d-47ea-9f3e-d71df2c371d9, session_timestamp=2019-11-01T03:45:23.581Z}
[INFO ] 2019-11-01T03:45:23,794Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:23,798Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:23,804Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5107506a {}
[INFO ] 2019-11-01T03:45:23,816Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:23,817Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:23,818Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:23,946Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:23,958Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:23,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:23,962Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:23,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:23,969Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:24,098Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:24,215Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:24,300Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:24,302Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:24,310Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:45:24,313Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:24,314Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:24,315Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:24,316Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:24,316Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:24,327Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 433828E629B8320D98824948F43070F6F2B087CBBB06D72BCA3A576F9FAAB4A2, not inserting the second time {}
[INFO ] 2019-11-01T03:45:24,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:24,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:24,339Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:24,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:24,341Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:24,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:24,344Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:24,345Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:24,360Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:24,372Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@281ae20e {}
[INFO ] 2019-11-01T03:45:24,388Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:24,389Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:24,390Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:24,553Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:24,559Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:24,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:24,567Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:24,573Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:24,574Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:24,716Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:24,837Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:24,935Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:24,936Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:24,948Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:24,949Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:24,949Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:24,950Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:24,951Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:24,961Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A5B1898619806A2E1B9E38AE182D8D59426455E8F40861E938B6A9CC21ABDAB8, not inserting the second time {}
[INFO ] 2019-11-01T03:45:24,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:24,967Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:24,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:24,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:24,977Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:24,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:24,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:24,985Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:24,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:24,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:24,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:24,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:24,997Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:45:25,003Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:45:25,019Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:45:25,035Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7e7c2cc6 {}
[INFO ] 2019-11-01T03:45:25,056Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:45:25,057Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:25,058Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:25,188Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:45:25,194Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:45:25,195Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,197Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:25,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,201Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,321Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:45:25,437Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:45:25,520Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:45:25,523Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:45:25,547Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:45:25,548Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:45:25,549Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:25,550Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:45:25,551Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:45:25,564Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E07C46DF5534717E3AE352FFAD953E2E0853CA73D7817374C437AD24AA0CB009, not inserting the second time {}
[INFO ] 2019-11-01T03:45:25,568Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:25,570Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:25,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579923959) {}
[INFO ] 2019-11-01T03:45:25,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,582Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:25,588Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:25,590Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:25,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579924560) {}
[INFO ] 2019-11-01T03:45:25,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,599Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:45:25,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,606Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,614Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:25,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[INFO ] 2019-11-01T03:45:25,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:45:25,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579925194) {}
[WARN ] 2019-11-01T03:45:25,714Z [Mock network] flow.[b5e325dd-5901-40db-84ee-c0e5ab6a6d64].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: B5E254502D6BD9A8247253A455D87C48AF0E2E1C8BE42D1CEC89651BF9E5EE4C
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T03:45:25,785Z [Mock network] flow.[b68069e3-d718-4920-86ee-90c188a03240].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3010274335157518537). {}
[INFO ] 2019-11-01T03:45:25,848Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3010274335157518537). {invocation_id=0d81bae7-3f42-490e-8407-ec8bf642afd9, invocation_timestamp=2019-11-01T03:45:25.847Z, session_id=0d81bae7-3f42-490e-8407-ec8bf642afd9, session_timestamp=2019-11-01T03:45:25.847Z}
[INFO ] 2019-11-01T03:46:30,195Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-c594fdc8-0805-4c53-b300-b16bfdaca992.jar {}
[INFO ] 2019-11-01T03:46:30,216Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-262f97bf-ed5d-456b-96f8-f4791a04783f.jar {}
[INFO ] 2019-11-01T03:46:30,259Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-c594fdc8-0805-4c53-b300-b16bfdaca992.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-262f97bf-ed5d-456b-96f8-f4791a04783f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T03:46:30,298Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:30,302Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:30,322Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-c594fdc8-0805-4c53-b300-b16bfdaca992.jar {}
[INFO ] 2019-11-01T03:46:30,353Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-262f97bf-ed5d-456b-96f8-f4791a04783f.jar {}
[INFO ] 2019-11-01T03:46:30,398Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T03:46:30,461Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T03:46:30,548Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T03:46:30,700Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2955bec3 {}
[INFO ] 2019-11-01T03:46:31,538Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:31,597Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:31,601Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:34,089Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:34,717Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:34,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:34,732Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:34,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:34,841Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:35,135Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:35,283Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:35,384Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:35,392Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:35,502Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:46:35,667Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:35,671Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:35,674Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:35,680Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:35,686Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:35,756Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CED5F3812E182D9A59494A2F92FE1E471232FBD12CA2189E5F23368DC4F5E985, not inserting the second time {}
[INFO ] 2019-11-01T03:46:35,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:35,898Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:35,902Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:35,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:35,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:35,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:35,925Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:35,932Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:35,954Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:35,967Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2cfd9206 {}
[INFO ] 2019-11-01T03:46:35,982Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:35,984Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:35,986Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:36,221Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:36,239Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:36,246Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:36,252Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:36,259Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:36,261Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:36,439Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:36,563Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:36,653Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:36,656Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:36,673Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:36,676Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:36,678Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:36,679Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:36,684Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:36,709Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DC07F2131AA1BCB4927FD7D1306C974339A81416E34E6F9AD205DAC76584DFB3, not inserting the second time {}
[INFO ] 2019-11-01T03:46:36,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:36,729Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:36,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:36,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:36,760Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:36,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:36,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:36,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:36,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:36,803Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:36,805Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:36,806Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:36,809Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:36,810Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:36,831Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:36,842Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@33834558 {}
[INFO ] 2019-11-01T03:46:36,854Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:36,856Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:36,857Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:36,967Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:36,977Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:36,978Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:36,982Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:36,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:36,989Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:37,125Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:37,257Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:37,347Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:37,351Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:37,367Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:37,369Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:37,371Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:37,372Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:37,375Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:37,395Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 645618D7D6B158E8FDC4CCA9D09B14327E3CD2721217DA742C5B167111F33120, not inserting the second time {}
[INFO ] 2019-11-01T03:46:37,406Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:37,409Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:37,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:37,431Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:37,433Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:37,452Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:37,454Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:37,456Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:37,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:37,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:37,478Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:37,488Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:37,490Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:37,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:37,496Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:37,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:37,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:37,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:37,502Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:37,504Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:37,538Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:37,559Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@794a9d45 {}
[INFO ] 2019-11-01T03:46:37,575Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:37,577Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:37,578Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:37,794Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:37,802Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:37,803Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:37,807Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:37,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:37,814Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:37,946Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:38,068Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:38,160Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:38,162Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:38,177Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:38,179Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:38,180Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:38,181Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:38,183Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:38,196Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 525603048E91AC66EB6C0E9F1BA96CBDA615F4B62BF9AA509CE0EE278D15A727, not inserting the second time {}
[INFO ] 2019-11-01T03:46:38,205Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:38,208Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:38,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:38,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,230Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:38,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,252Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:38,254Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:38,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:38,278Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,285Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:38,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,302Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:38,304Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:38,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:38,315Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,317Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:38,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,347Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:38,349Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,350Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:38,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:38,355Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:38,356Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:38,386Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:38,401Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@56c483be {}
[INFO ] 2019-11-01T03:46:38,429Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:38,431Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:38,432Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:38,521Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:38,529Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:38,531Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:38,534Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:38,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:38,540Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:38,675Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:38,793Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:38,886Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:38,888Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:38,917Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:38,919Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:38,920Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:38,925Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:38,926Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:38,943Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 017A338B4EEA9C2BCBF1BF186FE118D1F308E59D7F680D8C9931C6C9F1A47E1E, not inserting the second time {}
[INFO ] 2019-11-01T03:46:38,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:38,951Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:38,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572579994720) {}
[INFO ] 2019-11-01T03:46:38,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:38,978Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:38,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:38,997Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:38,999Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:39,009Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572579996246) {}
[INFO ] 2019-11-01T03:46:39,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,015Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:39,032Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:39,039Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:39,049Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572579996978) {}
[INFO ] 2019-11-01T03:46:39,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,055Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:39,070Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:39,075Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:39,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572579997803) {}
[INFO ] 2019-11-01T03:46:39,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,101Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:39,113Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:39,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:39,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572579998531) {}
[INFO ] 2019-11-01T03:46:39,178Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:39,180Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:39,181Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:39,187Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:39,188Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:39,189Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:39,191Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:39,192Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:40,111Z [Mock network] flow.[0f060c62-a6fe-4196-88fd-a8a02f566a92].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3552884764301736386). {}
[INFO ] 2019-11-01T03:46:40,325Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3552884764301736386). {invocation_id=8da97751-213b-4325-b8c1-c837cc250d52, invocation_timestamp=2019-11-01T03:46:40.317Z, session_id=8da97751-213b-4325-b8c1-c837cc250d52, session_timestamp=2019-11-01T03:46:40.317Z}
[INFO ] 2019-11-01T03:46:40,690Z [Mock network] flow.[0f060c62-a6fe-4196-88fd-a8a02f566a92].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7920803007038782048). {}
[INFO ] 2019-11-01T03:46:40,717Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7920803007038782048). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=276c83ec-bd27-4b0a-a943-65adb828b9d7, invocation_timestamp=2019-11-01T03:46:40.716Z, session_id=276c83ec-bd27-4b0a-a943-65adb828b9d7, session_timestamp=2019-11-01T03:46:40.716Z}
[INFO ] 2019-11-01T03:46:40,849Z [Mock network] flow.[0f060c62-a6fe-4196-88fd-a8a02f566a92].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4956536242610037189). {}
[INFO ] 2019-11-01T03:46:40,939Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4956536242610037189). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b72f039b-10e4-40de-b8fc-7003d2663030, invocation_timestamp=2019-11-01T03:46:40.938Z, session_id=b72f039b-10e4-40de-b8fc-7003d2663030, session_timestamp=2019-11-01T03:46:40.938Z}
[INFO ] 2019-11-01T03:46:41,113Z [Mock network] flow.[cd72f58a-e86e-47d8-923b-09ef936c3d66].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5463968984685054602). {}
[INFO ] 2019-11-01T03:46:41,143Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5463968984685054602). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1c69b304-50a9-4166-a5c4-3ebc9c162505, invocation_timestamp=2019-11-01T03:46:41.142Z, session_id=1c69b304-50a9-4166-a5c4-3ebc9c162505, session_timestamp=2019-11-01T03:46:41.142Z}
[INFO ] 2019-11-01T03:46:41,297Z [Mock network] flow.[531677e5-271d-4c6a-861d-cc1e2e818865].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-4865578681556098168). {}
[INFO ] 2019-11-01T03:46:41,373Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4865578681556098168). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=33ee46f7-a3f7-449f-a55f-a620ff9de981, invocation_timestamp=2019-11-01T03:46:41.371Z, session_id=33ee46f7-a3f7-449f-a55f-a620ff9de981, session_timestamp=2019-11-01T03:46:41.371Z}
[INFO ] 2019-11-01T03:46:41,395Z [Mock network] flow.[6e681451-969f-48b9-9c51-123ed3652751].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:41,507Z [Mock network] flow.[6e681451-969f-48b9-9c51-123ed3652751].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:41,671Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:46:41,796Z [Mock network] flow.[98ac631d-0b25-4092-83f9-d1ade47dc9ed].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8778217188151169595). {}
[INFO ] 2019-11-01T03:46:41,846Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8778217188151169595). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=35d6862f-6882-4e5e-9a9e-43f23d42880d, invocation_timestamp=2019-11-01T03:46:41.845Z, session_id=35d6862f-6882-4e5e-9a9e-43f23d42880d, session_timestamp=2019-11-01T03:46:41.845Z}
[INFO ] 2019-11-01T03:46:41,876Z [Mock network] flow.[af3ef228-021c-4964-ac7d-10c4379c21d6].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:41,955Z [Mock network] flow.[af3ef228-021c-4964-ac7d-10c4379c21d6].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:42,026Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:46:42,146Z [Mock network] flow.[98ac631d-0b25-4092-83f9-d1ade47dc9ed].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:42,204Z [Mock network] flow.[98ac631d-0b25-4092-83f9-d1ade47dc9ed].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:42,206Z [Mock network] flow.[98ac631d-0b25-4092-83f9-d1ade47dc9ed].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:42,272Z [Mock network] flow.[98ac631d-0b25-4092-83f9-d1ade47dc9ed].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:42,466Z [Mock network] flow.[af3ef228-021c-4964-ac7d-10c4379c21d6].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1212596390601338636). {}
[INFO ] 2019-11-01T03:46:42,498Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1212596390601338636). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=b0d557da-e934-4dc4-8596-aecbfabe97aa, invocation_timestamp=2019-11-01T03:46:42.497Z, session_id=b0d557da-e934-4dc4-8596-aecbfabe97aa, session_timestamp=2019-11-01T03:46:42.497Z}
[INFO ] 2019-11-01T03:46:42,515Z [Mock network] flow.[029f0ea0-4e02-42f9-bb5e-211dde8f898c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:42,564Z [Mock network] flow.[029f0ea0-4e02-42f9-bb5e-211dde8f898c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:42,566Z [Mock network] flow.[029f0ea0-4e02-42f9-bb5e-211dde8f898c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:42,589Z [Mock network] flow.[029f0ea0-4e02-42f9-bb5e-211dde8f898c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:46:42,856Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:42,858Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:42,871Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@e3e3fd7 {}
[INFO ] 2019-11-01T03:46:42,891Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:42,894Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:42,895Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:43,099Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:43,108Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:43,109Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:43,113Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:43,125Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:43,133Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:43,285Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:43,404Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:43,493Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:43,497Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:43,506Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:46:43,512Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:43,513Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:43,514Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:43,515Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:43,517Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:43,528Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7DBC310C98591483995D5EB848716CCB1FD6284E1B0FE30BE3CA80BAA1D389D1, not inserting the second time {}
[INFO ] 2019-11-01T03:46:43,536Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:43,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:43,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:43,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:43,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:43,550Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:43,553Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:43,554Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:43,568Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:43,575Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@57142632 {}
[INFO ] 2019-11-01T03:46:43,585Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:43,586Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:43,588Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:43,721Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:43,733Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:43,735Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:43,738Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:43,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:43,744Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:43,873Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:44,066Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:44,165Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:44,166Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:44,178Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:44,180Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:44,181Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:44,182Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:44,183Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:44,194Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4A8D7CD8997C758584E376BBB25BE27E5FC44F3D26DD8B97C853C83F214FD7DA, not inserting the second time {}
[INFO ] 2019-11-01T03:46:44,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:44,201Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:44,207Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:44,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:44,215Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:44,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:44,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:44,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:44,230Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:44,231Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:44,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:44,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:44,236Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:44,237Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:44,268Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:44,279Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5a92e9c9 {}
[INFO ] 2019-11-01T03:46:44,301Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:44,306Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:44,308Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:44,415Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:44,433Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:44,434Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,437Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:44,448Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,449Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,577Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:44,688Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:44,773Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:44,775Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:44,786Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:44,788Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:44,789Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:44,789Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:44,790Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:44,801Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4606E061B2CCBF6DB0642462F68AB96A16256CEF8899380DC303C31A4C6CE0FD, not inserting the second time {}
[INFO ] 2019-11-01T03:46:44,806Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:44,808Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:44,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580003109) {}
[INFO ] 2019-11-01T03:46:44,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,817Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:44,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:44,825Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:44,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580003735) {}
[INFO ] 2019-11-01T03:46:44,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,833Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:44,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:44,914Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:44,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:44,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580004434) {}
[INFO ] 2019-11-01T03:46:45,062Z [Mock network] flow.[4e26e9f2-9758-4f09-97a9-d6ca837380e1].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3537839754998592424). {}
[INFO ] 2019-11-01T03:46:45,156Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3537839754998592424). {invocation_id=2ec0b2b3-d104-4be6-b7b7-6b0db71abbad, invocation_timestamp=2019-11-01T03:46:45.155Z, session_id=2ec0b2b3-d104-4be6-b7b7-6b0db71abbad, session_timestamp=2019-11-01T03:46:45.155Z}
[INFO ] 2019-11-01T03:46:45,409Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:45,411Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:45,415Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1c922e4a {}
[INFO ] 2019-11-01T03:46:45,424Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:45,425Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:45,426Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:45,508Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:45,514Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:45,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:45,518Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:45,526Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:45,527Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:45,709Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:45,822Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:45,907Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:45,908Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:45,917Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:46:45,921Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:45,922Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:45,923Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:45,924Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:45,925Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:45,935Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A65D7955219273BC92529671E1B34A63DCC1240C1BCDC468C8A14E61532A1FBF, not inserting the second time {}
[INFO ] 2019-11-01T03:46:45,943Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:45,950Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:45,951Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:45,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:45,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:45,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:45,959Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:45,960Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:45,983Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:45,998Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@674beab2 {}
[INFO ] 2019-11-01T03:46:46,009Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:46,011Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:46,012Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:46,099Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:46,110Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:46,111Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:46,119Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:46,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:46,123Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:46,259Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:46,428Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:46,521Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:46,523Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:46,543Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:46,544Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:46,545Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:46,546Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:46,547Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:46,560Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 35824066CD5C059D122CF8AEC2AC422043BFF20D841C4E383CF5A680F68E29B8, not inserting the second time {}
[INFO ] 2019-11-01T03:46:46,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:46,566Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:46,577Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:46,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:46,580Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:46,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:46,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:46,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:46,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:46,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:46,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:46,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:46,594Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:46,595Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:46,606Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:46,612Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@47e9da70 {}
[INFO ] 2019-11-01T03:46:46,620Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:46,621Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:46,622Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:46,687Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:46,693Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:46,694Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:46,697Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:46,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:46,700Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:46,835Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:46,962Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:47,113Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:47,115Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:47,125Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:47,126Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:47,127Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:47,128Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:47,129Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:47,139Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1CF110152B7CEDC66080FF6424086835AD4E06D122D9EE6B2ED00C44311EC617, not inserting the second time {}
[INFO ] 2019-11-01T03:46:47,144Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:47,145Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:47,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580005515) {}
[INFO ] 2019-11-01T03:46:47,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:47,158Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:47,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:47,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:47,165Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:47,172Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580006111) {}
[INFO ] 2019-11-01T03:46:47,173Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:47,175Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:47,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:47,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:47,190Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:47,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:47,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:47,195Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:47,195Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580006694) {}
[INFO ] 2019-11-01T03:46:47,272Z [Mock network] flow.[8ea25ca6-751d-44a0-a60e-aef02d6e7fd0].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7169228317052006777). {}
[INFO ] 2019-11-01T03:46:47,335Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7169228317052006777). {invocation_id=54c6b30e-c2fb-481e-b590-38d76e4c0516, invocation_timestamp=2019-11-01T03:46:47.334Z, session_id=54c6b30e-c2fb-481e-b590-38d76e4c0516, session_timestamp=2019-11-01T03:46:47.334Z}
[INFO ] 2019-11-01T03:46:47,561Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:47,563Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:47,573Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@18bc4455 {}
[INFO ] 2019-11-01T03:46:47,588Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:47,589Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:47,590Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:47,724Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:47,740Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:47,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:47,744Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:47,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:47,750Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:47,871Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:48,006Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:48,085Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:48,087Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:48,095Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:46:48,099Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:48,100Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:48,100Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:48,101Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:48,102Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:48,159Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C93A310217A25B1DB4259D6274C4130FE26C77B0C8E9F0CBB6624FCBBBB28CAE, not inserting the second time {}
[INFO ] 2019-11-01T03:46:48,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:48,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:48,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:48,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:48,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:48,172Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:48,174Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:48,177Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:48,188Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:48,194Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@196b3cf3 {}
[INFO ] 2019-11-01T03:46:48,207Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:48,208Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:48,209Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:48,315Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:48,321Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:48,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:48,325Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:48,327Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:48,328Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:48,449Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:48,563Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:48,652Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:48,653Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:48,665Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:48,667Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:48,667Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:48,668Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:48,669Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:48,725Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E05B797E2A9AFDCEEB75FC5FA1D11F8ADBBA3FA8C2F49C509C6E51233E1BA26B, not inserting the second time {}
[INFO ] 2019-11-01T03:46:48,734Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:48,737Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:48,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:48,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:48,751Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:48,760Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:48,761Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:48,764Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:48,764Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:48,765Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:48,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:48,767Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:48,777Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:46:48,777Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:46:48,798Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:46:48,810Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@37d75cd {}
[INFO ] 2019-11-01T03:46:48,819Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:46:48,820Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:48,821Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:48,922Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:46:48,929Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:46:48,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:48,933Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:48,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:48,937Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:49,069Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-11-01T03:46:49,198Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-11-01T03:46:49,288Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:46:49,290Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:46:49,301Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:46:49,345Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:46:49,345Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:49,346Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:46:49,350Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:46:49,363Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 67BB4621D3F595E396EE65E79DE030644C5B66D003B8A6B09B19C3C05CB71C12, not inserting the second time {}
[INFO ] 2019-11-01T03:46:49,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:49,375Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:49,384Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580007741) {}
[INFO ] 2019-11-01T03:46:49,384Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:49,386Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:49,390Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:49,395Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:49,397Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:49,403Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580008322) {}
[INFO ] 2019-11-01T03:46:49,404Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:49,406Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:46:49,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:49,416Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:49,421Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:49,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:49,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[INFO ] 2019-11-01T03:46:49,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:46:49,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580008930) {}
[WARN ] 2019-11-01T03:46:49,470Z [Mock network] flow.[be1969e8-efbe-4825-a2be-fb944e4002fd].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: DFD0D73DF401673AB0F456AADBD76008082A4CAB7542CD4FC3312625296CE839
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T03:46:49,532Z [Mock network] flow.[78983814-df5f-43cc-9c40-62c318f236f9].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2426132281915813552). {}
[INFO ] 2019-11-01T03:46:49,596Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2426132281915813552). {invocation_id=60729605-5fae-4a37-b917-fe860859d4bf, invocation_timestamp=2019-11-01T03:46:49.596Z, session_id=60729605-5fae-4a37-b917-fe860859d4bf, session_timestamp=2019-11-01T03:46:49.596Z}
[INFO ] 2019-11-01T03:53:07,532Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: /home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-3f2f460c-dfb6-49f4-98da-1e8890a86247.jar {}
[INFO ] 2019-11-01T03:53:07,573Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-f2380b1f-3f95-48ca-a7ca-9d6eb847209c.jar {}
[INFO ] 2019-11-01T03:53:07,620Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-3f2f460c-dfb6-49f4-98da-1e8890a86247.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-f2380b1f-3f95-48ca-a7ca-9d6eb847209c.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T03:53:07,663Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:07,668Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:07,686Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-3f2f460c-dfb6-49f4-98da-1e8890a86247.jar {}
[INFO ] 2019-11-01T03:53:07,714Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-f2380b1f-3f95-48ca-a7ca-9d6eb847209c.jar {}
[INFO ] 2019-11-01T03:53:07,757Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T03:53:07,825Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T03:53:07,890Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T03:53:08,075Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@8058573 {}
[INFO ] 2019-11-01T03:53:08,870Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:08,945Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:08,950Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:11,467Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:12,100Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:12,103Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:12,115Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:12,225Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:12,228Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:12,536Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:12,707Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:12,810Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:12,817Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:12,921Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:53:13,063Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:13,068Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:13,071Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:13,073Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:13,075Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:13,129Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2D7D4FF74AB890F6FFF52CD77908620D7E25C3CE917740237F81242E46D7EEAF, not inserting the second time {}
[INFO ] 2019-11-01T03:53:13,217Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:13,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:13,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:13,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:13,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:13,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:13,268Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:13,270Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:13,319Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:13,348Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1f4142c3 {}
[INFO ] 2019-11-01T03:53:13,381Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:13,392Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:13,397Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:13,561Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:13,584Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:13,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:13,605Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:13,622Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:13,624Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:13,792Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:13,930Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:14,026Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:14,029Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:14,058Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:14,061Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:14,063Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:14,065Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:14,066Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:14,081Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0E391513EAFF8787253FD830D7F1D8BAF280EDD2D8821F74549DBFEDA63065BD, not inserting the second time {}
[INFO ] 2019-11-01T03:53:14,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:14,098Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:14,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:14,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:14,124Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:14,140Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:14,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:14,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:14,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:14,151Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:14,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:14,154Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:14,157Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:14,159Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:14,179Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:14,190Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1be19288 {}
[INFO ] 2019-11-01T03:53:14,202Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:14,204Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:14,206Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:14,377Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:14,402Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:14,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,414Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:14,430Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,434Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,575Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:14,704Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:14,793Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:14,796Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:14,812Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:14,815Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:14,816Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:14,818Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:14,819Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:14,834Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2F73109DC5965819780847EA5F93115705B8F98FAF9C1B07F130E1CAB0BC963F, not inserting the second time {}
[INFO ] 2019-11-01T03:53:14,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:14,850Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:14,862Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580392103) {}
[INFO ] 2019-11-01T03:53:14,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,866Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:14,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:14,886Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:14,898Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580393592) {}
[INFO ] 2019-11-01T03:53:14,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,912Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:14,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,926Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,932Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:14,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:14,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:14,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580394407) {}
[INFO ] 2019-11-01T03:53:15,988Z [Mock network] flow.[aa634724-24c5-4972-a3ba-3fbd7ba64fff].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2429271669461690805). {}
[INFO ] 2019-11-01T03:53:16,184Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2429271669461690805). {invocation_id=01b7c93c-3837-4822-bc43-3d11ae9dc0db, invocation_timestamp=2019-11-01T03:53:16.175Z, session_id=01b7c93c-3837-4822-bc43-3d11ae9dc0db, session_timestamp=2019-11-01T03:53:16.175Z}
[INFO ] 2019-11-01T03:53:16,630Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:16,632Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:16,643Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6bafa2fd {}
[INFO ] 2019-11-01T03:53:16,674Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:16,679Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:16,681Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:16,929Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:16,943Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:16,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:16,955Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:16,967Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:16,972Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:17,123Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:17,273Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:17,367Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:17,369Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:17,384Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:53:17,392Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:17,394Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:17,399Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:17,401Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:17,402Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:17,426Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 32FD10703BCB4FF9935BE07D43E743499D9A501830B73F4421975F15D51EB61E, not inserting the second time {}
[INFO ] 2019-11-01T03:53:17,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:17,441Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:17,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:17,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:17,445Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:17,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:17,449Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:17,450Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:17,466Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:17,475Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@a6fa8c4 {}
[INFO ] 2019-11-01T03:53:17,486Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:17,488Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:17,489Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:17,588Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:17,600Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:17,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:17,606Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:17,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:17,613Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:17,769Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:17,886Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:17,971Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:17,973Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:17,997Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:17,999Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:18,001Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:18,002Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:18,004Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:18,024Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4CEF496BCD66D476E819763FCA0281AEA2DE0D769E9DCE17082A1FF59E4C7439, not inserting the second time {}
[INFO ] 2019-11-01T03:53:18,032Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:18,039Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:18,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:18,066Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:18,069Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:18,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:18,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:18,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:18,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:18,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:18,096Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:18,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:18,101Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:18,103Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:18,127Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:18,139Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6cc6e13f {}
[INFO ] 2019-11-01T03:53:18,159Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:18,161Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:18,162Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:18,319Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:18,327Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:18,328Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,332Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:18,336Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,338Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,518Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:18,631Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:18,723Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:18,725Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:18,746Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:18,748Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:18,749Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:18,750Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:18,751Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:18,766Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A101D2026F15C51C586B099F9D3BE38635F64431E74BC653FA4567494957B125, not inserting the second time {}
[INFO ] 2019-11-01T03:53:18,773Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:18,778Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:18,787Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580396945) {}
[INFO ] 2019-11-01T03:53:18,788Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,791Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:18,799Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:18,803Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:18,812Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580397601) {}
[INFO ] 2019-11-01T03:53:18,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,815Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:18,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:18,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,837Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,839Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:18,840Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580398328) {}
[INFO ] 2019-11-01T03:53:18,952Z [Mock network] flow.[f07021c9-f68a-43f1-b13b-9c976542d3ba].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4247100836789662863). {}
[INFO ] 2019-11-01T03:53:19,042Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4247100836789662863). {invocation_id=1cc0d4ee-a92d-4586-b23e-1467a2bec65c, invocation_timestamp=2019-11-01T03:53:19.040Z, session_id=1cc0d4ee-a92d-4586-b23e-1467a2bec65c, session_timestamp=2019-11-01T03:53:19.040Z}
[INFO ] 2019-11-01T03:53:19,295Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:19,296Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:19,309Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@a2c6687 {}
[INFO ] 2019-11-01T03:53:19,326Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:19,327Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:19,328Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:19,476Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:19,485Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:19,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:19,491Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:19,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:19,501Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:19,700Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:19,831Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:19,934Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:19,935Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:19,952Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:53:19,957Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:19,958Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:19,960Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:19,961Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:19,963Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:19,983Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EA9B8CDF7A9C5C40BFD9B9D5E85F365A397266CEE9898160809FBF92D9C9C49C, not inserting the second time {}
[INFO ] 2019-11-01T03:53:19,996Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:20,005Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:20,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:20,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:20,009Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:20,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:20,023Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:20,025Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:20,052Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:20,067Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@39cbfc42 {}
[INFO ] 2019-11-01T03:53:20,091Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:20,093Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:20,094Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:20,227Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:20,238Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:20,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:20,244Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:20,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:20,250Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:20,386Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:20,504Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:20,597Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:20,599Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:20,613Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:20,614Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:20,615Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:20,616Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:20,617Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:20,629Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BCD668053260580E6906846704AEC5384EB40471C9705203002C48E330DCE751, not inserting the second time {}
[INFO ] 2019-11-01T03:53:20,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:20,636Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:20,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:20,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:20,671Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:20,687Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:20,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:20,700Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:20,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:20,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:20,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:20,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:20,715Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:20,718Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:20,737Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:20,805Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@73ee73b2 {}
[INFO ] 2019-11-01T03:53:20,823Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:20,825Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:20,826Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:20,967Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:20,980Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:20,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:20,985Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:20,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:20,990Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:21,127Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:21,251Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:21,335Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:21,337Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:21,350Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:21,351Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:21,353Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:21,354Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:21,355Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:21,366Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3E19CF144A5536211FA1DC15FD13DD71014E23CD3AF64ECADFA8D41AB5FDE06D, not inserting the second time {}
[INFO ] 2019-11-01T03:53:21,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:21,377Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:21,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580399486) {}
[INFO ] 2019-11-01T03:53:21,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:21,388Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:21,395Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:21,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:21,398Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:21,405Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580400239) {}
[INFO ] 2019-11-01T03:53:21,406Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:21,408Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:21,414Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:21,416Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:21,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:21,420Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:21,421Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[INFO ] 2019-11-01T03:53:21,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:21,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580400981) {}
[WARN ] 2019-11-01T03:53:21,497Z [Mock network] flow.[6a3d8354-b7a3-4da1-986c-32ce78e0ffe8].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 8E9D82A19953E0364758186BC81C5805087EB10A72AC11A555796E27EAB984A9
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T03:53:21,620Z [Mock network] flow.[55be1ca1-884b-4d79-8b63-4b7c177fb7fa].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6825233455002616806). {}
[INFO ] 2019-11-01T03:53:21,703Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6825233455002616806). {invocation_id=10dc0da5-ae91-4fac-b6fd-a71442879526, invocation_timestamp=2019-11-01T03:53:21.702Z, session_id=10dc0da5-ae91-4fac-b6fd-a71442879526, session_timestamp=2019-11-01T03:53:21.702Z}
[INFO ] 2019-11-01T03:53:22,017Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:22,021Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:22,036Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c734738 {}
[INFO ] 2019-11-01T03:53:22,053Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:22,054Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:22,056Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:22,197Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:22,206Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:22,207Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:22,212Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:22,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:22,225Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:22,358Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:22,495Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:22,588Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:22,590Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:22,599Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T03:53:22,603Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:22,605Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:22,606Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:22,607Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:22,608Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:22,620Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 216B8ED5F2CA4DA44F845A60CBDA8185F087CA76CF606FFA5672ACB00D7F31AF, not inserting the second time {}
[INFO ] 2019-11-01T03:53:22,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:22,630Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:22,636Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:22,637Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:22,637Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:22,638Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:22,643Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:22,644Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:22,656Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:22,663Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@40cd6975 {}
[INFO ] 2019-11-01T03:53:22,669Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:22,671Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:22,671Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:22,832Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:22,847Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:22,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:22,856Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:22,861Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:22,862Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:23,000Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:23,134Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:23,222Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:23,223Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:23,236Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:23,237Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:23,238Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:23,238Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:23,239Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:23,256Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8F64F762B04F246CB780E619840A830B9A1C53DAF6F815162EDD2C66ECBBBF27, not inserting the second time {}
[INFO ] 2019-11-01T03:53:23,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:23,265Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:23,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:23,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:23,282Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:23,290Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:23,293Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:23,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:23,302Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:23,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:23,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:23,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:23,316Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:23,318Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:23,339Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:23,353Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6bf8f80 {}
[INFO ] 2019-11-01T03:53:23,366Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:23,368Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:23,369Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:23,465Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:23,477Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:23,478Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:23,481Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:23,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:23,489Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:23,676Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:23,808Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:23,904Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:23,906Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:23,923Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:23,925Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:23,927Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:23,928Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:23,929Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:23,945Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F23753EFAE5C8BF8A49920CBF2E9501DFB62BA9CFB19FF266FAEDD16423C662C, not inserting the second time {}
[INFO ] 2019-11-01T03:53:23,955Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:23,959Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:23,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:23,972Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:23,974Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:23,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:23,985Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:23,988Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:23,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:24,000Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:24,002Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:24,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:24,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:24,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:24,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:24,023Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:24,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:24,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:24,028Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:24,029Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:24,041Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:24,048Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@61d9fab1 {}
[INFO ] 2019-11-01T03:53:24,055Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:24,056Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:24,057Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:24,134Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:24,141Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:24,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,145Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:24,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,151Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,288Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:24,468Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:24,564Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:24,566Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:24,580Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:24,588Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:24,589Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:24,590Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:24,591Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:24,616Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 52A4035E9CFD961E9DDC16ED67FA2748AA713536BA52C4C1D3C7F1513D2B11A7, not inserting the second time {}
[INFO ] 2019-11-01T03:53:24,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:24,629Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:24,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:24,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,645Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:24,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:24,663Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:24,673Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:24,675Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,677Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:24,689Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:24,694Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:24,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:24,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,710Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:24,722Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:24,730Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,731Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,732Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:24,733Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:24,740Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T03:53:24,742Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T03:53:24,761Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T03:53:24,772Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@60aaa249 {}
[INFO ] 2019-11-01T03:53:24,782Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T03:53:24,784Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:24,785Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:24,887Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T03:53:24,898Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T03:53:24,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:24,904Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:24,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:24,909Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,062Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T03:53:25,242Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T03:53:25,336Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T03:53:25,337Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T03:53:25,349Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T03:53:25,351Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:25,352Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:25,353Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:25,354Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T03:53:25,364Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E28ED357C4BE8D41F5ADEC1EE74C21F34971236A02F86FCD3A808991721FDBB2, not inserting the second time {}
[INFO ] 2019-11-01T03:53:25,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:25,371Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:25,379Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580402207) {}
[INFO ] 2019-11-01T03:53:25,380Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,382Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:25,388Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,389Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:25,390Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:25,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580402851) {}
[INFO ] 2019-11-01T03:53:25,397Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,399Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:25,405Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,406Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:25,410Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:25,425Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580403478) {}
[INFO ] 2019-11-01T03:53:25,426Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,428Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:25,434Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,436Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:25,444Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:25,460Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580404142) {}
[INFO ] 2019-11-01T03:53:25,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,465Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T03:53:25,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:25,480Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,481Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,482Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T03:53:25,491Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580404900) {}
[INFO ] 2019-11-01T03:53:25,498Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:25,506Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:25,508Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:25,509Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:25,514Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:25,516Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:25,517Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T03:53:25,519Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T03:53:25,652Z [Mock network] flow.[1c6adc5c-5cdc-4ae9-9e11-48d3cb5485a2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3600407926492128152). {}
[INFO ] 2019-11-01T03:53:25,719Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3600407926492128152). {invocation_id=89017395-aa0e-4df4-b9c3-48a7497e7d6d, invocation_timestamp=2019-11-01T03:53:25.717Z, session_id=89017395-aa0e-4df4-b9c3-48a7497e7d6d, session_timestamp=2019-11-01T03:53:25.717Z}
[INFO ] 2019-11-01T03:53:26,018Z [Mock network] flow.[1c6adc5c-5cdc-4ae9-9e11-48d3cb5485a2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-244098035979599877). {}
[INFO ] 2019-11-01T03:53:26,046Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-244098035979599877). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b6bad435-d53e-45a0-8cab-2ba9788044fe, invocation_timestamp=2019-11-01T03:53:26.044Z, session_id=b6bad435-d53e-45a0-8cab-2ba9788044fe, session_timestamp=2019-11-01T03:53:26.044Z}
[INFO ] 2019-11-01T03:53:26,124Z [Mock network] flow.[1c6adc5c-5cdc-4ae9-9e11-48d3cb5485a2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8534884453890253191). {}
[INFO ] 2019-11-01T03:53:26,147Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8534884453890253191). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c8505ab0-0115-4a19-b979-0b03df72ee72, invocation_timestamp=2019-11-01T03:53:26.147Z, session_id=c8505ab0-0115-4a19-b979-0b03df72ee72, session_timestamp=2019-11-01T03:53:26.147Z}
[INFO ] 2019-11-01T03:53:26,330Z [Mock network] flow.[2c6c3abf-1d8c-433a-bc5a-3e14af1d4e4a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1751633064476940626). {}
[INFO ] 2019-11-01T03:53:26,363Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1751633064476940626). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=de8cb6e7-848b-438c-bd6e-589438e06f9b, invocation_timestamp=2019-11-01T03:53:26.362Z, session_id=de8cb6e7-848b-438c-bd6e-589438e06f9b, session_timestamp=2019-11-01T03:53:26.362Z}
[INFO ] 2019-11-01T03:53:26,495Z [Mock network] flow.[4e62f24c-cb3f-462e-a510-1b42c8e24bf4].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=3209334198681780112). {}
[INFO ] 2019-11-01T03:53:26,538Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3209334198681780112). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=71b4e5da-5351-4932-b2f8-dae1d1f8d14c, invocation_timestamp=2019-11-01T03:53:26.536Z, session_id=71b4e5da-5351-4932-b2f8-dae1d1f8d14c, session_timestamp=2019-11-01T03:53:26.536Z}
[INFO ] 2019-11-01T03:53:26,553Z [Mock network] flow.[6f547665-d8ac-481c-a7f7-4ae5349a6886].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:26,624Z [Mock network] flow.[6f547665-d8ac-481c-a7f7-4ae5349a6886].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:26,790Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:53:26,846Z [Mock network] flow.[02a0820b-c024-4ea5-bd46-ac37bb5e815d].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2348248046816238591). {}
[INFO ] 2019-11-01T03:53:26,886Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2348248046816238591). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=42f54582-7ac3-431f-aa13-cbc4d799bffc, invocation_timestamp=2019-11-01T03:53:26.885Z, session_id=42f54582-7ac3-431f-aa13-cbc4d799bffc, session_timestamp=2019-11-01T03:53:26.885Z}
[INFO ] 2019-11-01T03:53:26,900Z [Mock network] flow.[3e8c02d3-2e41-4457-b1f6-b93d8d6fda65].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:26,945Z [Mock network] flow.[3e8c02d3-2e41-4457-b1f6-b93d8d6fda65].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:26,993Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T03:53:27,130Z [Mock network] flow.[02a0820b-c024-4ea5-bd46-ac37bb5e815d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:27,167Z [Mock network] flow.[02a0820b-c024-4ea5-bd46-ac37bb5e815d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:27,169Z [Mock network] flow.[02a0820b-c024-4ea5-bd46-ac37bb5e815d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:27,199Z [Mock network] flow.[02a0820b-c024-4ea5-bd46-ac37bb5e815d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:27,345Z [Mock network] flow.[3e8c02d3-2e41-4457-b1f6-b93d8d6fda65].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4569158688522253472). {}
[INFO ] 2019-11-01T03:53:27,373Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4569158688522253472). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=f24ca756-0aa3-47a7-b57d-673b5c388aa7, invocation_timestamp=2019-11-01T03:53:27.372Z, session_id=f24ca756-0aa3-47a7-b57d-673b5c388aa7, session_timestamp=2019-11-01T03:53:27.372Z}
[INFO ] 2019-11-01T03:53:27,388Z [Mock network] flow.[09d91f55-2308-4394-8b12-b5ceb2d8c40e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:27,466Z [Mock network] flow.[09d91f55-2308-4394-8b12-b5ceb2d8c40e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:27,471Z [Mock network] flow.[09d91f55-2308-4394-8b12-b5ceb2d8c40e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T03:53:27,513Z [Mock network] flow.[09d91f55-2308-4394-8b12-b5ceb2d8c40e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:00:29,768Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-e22d5dbc-655f-4c60-81be-1e5693607aa7.jar {}
[INFO ] 2019-11-01T04:00:29,795Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-305c7e9a-08d7-4d15-8e92-a7aa40b25d93.jar {}
[INFO ] 2019-11-01T04:00:29,839Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e22d5dbc-655f-4c60-81be-1e5693607aa7.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-305c7e9a-08d7-4d15-8e92-a7aa40b25d93.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T04:00:29,880Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:29,884Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:29,901Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e22d5dbc-655f-4c60-81be-1e5693607aa7.jar {}
[INFO ] 2019-11-01T04:00:29,925Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-305c7e9a-08d7-4d15-8e92-a7aa40b25d93.jar {}
[INFO ] 2019-11-01T04:00:29,968Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T04:00:30,030Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T04:00:30,113Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T04:00:30,282Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5d3111c2 {}
[INFO ] 2019-11-01T04:00:31,192Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:31,261Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:31,268Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:33,802Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:34,687Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:34,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:34,702Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:34,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:34,840Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:35,195Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:35,389Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:35,513Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:35,527Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:35,639Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:00:35,810Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:35,814Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:35,821Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:35,825Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:35,831Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:35,893Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8B27F411D39296DFD734224C01ACDBDDFC3648D724B893FFB7793F6C678D7A8C, not inserting the second time {}
[INFO ] 2019-11-01T04:00:36,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:36,027Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:36,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:36,033Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:36,041Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:36,046Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:36,055Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:36,057Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:36,088Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:36,106Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@49a4b885 {}
[INFO ] 2019-11-01T04:00:36,123Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:36,126Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:36,127Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:36,329Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:36,341Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:36,344Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:36,351Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:36,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:36,367Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:36,595Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:36,745Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:36,848Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:36,852Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:36,875Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:36,880Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:36,882Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:36,884Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:36,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:36,905Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9FC9F90A62D4A7B8206F5988D1AC94563071429AB24D2B20BA8BC7690143CE53, not inserting the second time {}
[INFO ] 2019-11-01T04:00:36,934Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:36,946Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:36,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:36,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:36,967Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:36,980Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:36,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:36,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:36,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:36,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:36,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:36,997Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:37,000Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:37,003Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:37,038Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:37,050Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@128dd5ac {}
[INFO ] 2019-11-01T04:00:37,069Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:37,077Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:37,080Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:37,252Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:37,264Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:37,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,272Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:37,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,284Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,451Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:37,646Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:37,753Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:37,759Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:37,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:37,810Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:37,812Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:37,814Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:37,815Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:37,830Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6BEE344B390DFA13F7A124F8C6001FD25636DDFACA3415A47ECEAE389697F196, not inserting the second time {}
[INFO ] 2019-11-01T04:00:37,847Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:37,852Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:37,866Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:37,868Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,871Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:37,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,888Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:37,892Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:37,907Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:37,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,925Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:37,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:37,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,977Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:37,978Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:37,983Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:37,985Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:38,020Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:38,036Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@747dd026 {}
[INFO ] 2019-11-01T04:00:38,056Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:38,058Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:38,061Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:38,261Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:38,272Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:38,275Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,280Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:38,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,302Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,453Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:38,587Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:38,721Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:38,724Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:38,743Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:38,745Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:38,746Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:38,748Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:38,750Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:38,765Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6A86A0DB69000F01B23B911CE2C01AB04197BE048FA2E403570371D456E53085, not inserting the second time {}
[INFO ] 2019-11-01T04:00:38,782Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:38,796Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:38,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:38,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,821Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:38,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:38,857Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:38,876Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:38,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,891Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:38,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:38,924Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:38,934Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:38,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,941Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:38,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,961Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:38,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:38,970Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:38,982Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:38,984Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:39,014Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:39,025Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1645ba67 {}
[INFO ] 2019-11-01T04:00:39,042Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:39,045Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:39,050Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:39,232Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:39,254Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:39,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,271Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:39,284Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,292Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,466Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:39,615Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:39,719Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:39,721Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:39,744Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:39,746Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:39,748Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:39,749Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:39,751Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:39,805Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 10A773075F5548EEF88C25D509FA795B960DCE0D8EE3CCD5BAB7158F38770519, not inserting the second time {}
[INFO ] 2019-11-01T04:00:39,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:39,818Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:39,835Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580834689) {}
[INFO ] 2019-11-01T04:00:39,837Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,839Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:39,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:39,854Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:39,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580836344) {}
[INFO ] 2019-11-01T04:00:39,870Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,876Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:39,897Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,899Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:39,902Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:39,920Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580837266) {}
[INFO ] 2019-11-01T04:00:39,922Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,927Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:39,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:39,951Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:39,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580838274) {}
[INFO ] 2019-11-01T04:00:39,962Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,964Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:39,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,980Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:39,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:39,985Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580839260) {}
[INFO ] 2019-11-01T04:00:39,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:39,995Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:39,996Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:39,998Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:39,999Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:40,000Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:40,002Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:40,004Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:41,098Z [Mock network] flow.[655a4e08-2e57-4ae0-a4fe-bfd07efae7c2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6505450054171535151). {}
[INFO ] 2019-11-01T04:00:41,331Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6505450054171535151). {invocation_id=570a95f4-ca6c-4b4a-97e0-fbd8d9c7a368, invocation_timestamp=2019-11-01T04:00:41.324Z, session_id=570a95f4-ca6c-4b4a-97e0-fbd8d9c7a368, session_timestamp=2019-11-01T04:00:41.324Z}
[INFO ] 2019-11-01T04:00:41,695Z [Mock network] flow.[655a4e08-2e57-4ae0-a4fe-bfd07efae7c2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5018874568165469878). {}
[INFO ] 2019-11-01T04:00:41,726Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5018874568165469878). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b25cb165-55ab-4f47-b316-3a1dccd590c6, invocation_timestamp=2019-11-01T04:00:41.725Z, session_id=b25cb165-55ab-4f47-b316-3a1dccd590c6, session_timestamp=2019-11-01T04:00:41.725Z}
[INFO ] 2019-11-01T04:00:41,861Z [Mock network] flow.[655a4e08-2e57-4ae0-a4fe-bfd07efae7c2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3979915206368471735). {}
[INFO ] 2019-11-01T04:00:41,896Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3979915206368471735). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b065a29b-32c7-4676-88cc-95949890746c, invocation_timestamp=2019-11-01T04:00:41.895Z, session_id=b065a29b-32c7-4676-88cc-95949890746c, session_timestamp=2019-11-01T04:00:41.895Z}
[INFO ] 2019-11-01T04:00:42,129Z [Mock network] flow.[cddd7fa4-7c86-4aaf-8c65-2bfb4002d43a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3882261014018948240). {}
[INFO ] 2019-11-01T04:00:42,195Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3882261014018948240). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=4aa30e7f-fb0c-4430-b02b-9afd2411ec30, invocation_timestamp=2019-11-01T04:00:42.193Z, session_id=4aa30e7f-fb0c-4430-b02b-9afd2411ec30, session_timestamp=2019-11-01T04:00:42.193Z}
[INFO ] 2019-11-01T04:00:42,456Z [Mock network] flow.[c3c95ce1-312a-48a8-879f-e9b668b68995].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=178224684279751036). {}
[INFO ] 2019-11-01T04:00:42,534Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=178224684279751036). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=cba88092-93ee-4a24-a36f-3af170bff768, invocation_timestamp=2019-11-01T04:00:42.532Z, session_id=cba88092-93ee-4a24-a36f-3af170bff768, session_timestamp=2019-11-01T04:00:42.532Z}
[INFO ] 2019-11-01T04:00:42,570Z [Mock network] flow.[80ecc3ef-d68b-42a7-b439-1f2c3a968def].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:00:42,670Z [Mock network] flow.[80ecc3ef-d68b-42a7-b439-1f2c3a968def].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:00:42,766Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:00:42,872Z [Mock network] flow.[d93e663c-b2d6-4afc-9451-f3261c991fc9].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1683587358491218594). {}
[INFO ] 2019-11-01T04:00:42,910Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1683587358491218594). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=9e64bb09-0bb9-4f8c-aad3-f8cece99613d, invocation_timestamp=2019-11-01T04:00:42.909Z, session_id=9e64bb09-0bb9-4f8c-aad3-f8cece99613d, session_timestamp=2019-11-01T04:00:42.909Z}
[INFO ] 2019-11-01T04:00:42,926Z [Mock network] flow.[db574d7b-0ff4-490c-a2a6-de4cf44470b5].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:00:42,991Z [Mock network] flow.[db574d7b-0ff4-490c-a2a6-de4cf44470b5].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:00:43,038Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[WARN ] 2019-11-01T04:00:43,081Z [Mock network] flow.[d93e663c-b2d6-4afc-9451-f3261c991fc9].run - Terminated by unexpected exception {}
net.corda.core.flows.UnexpectedFlowEndException: Counterparty flow on O=Mock Company 1, L=London, C=GB has completed without sending data
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:488) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:84) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:34) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
[INFO ] 2019-11-01T04:00:43,238Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:43,240Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:43,248Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4d0bc502 {}
[INFO ] 2019-11-01T04:00:43,266Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:43,268Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:43,269Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:43,393Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:43,402Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:43,404Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:43,408Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:43,416Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:43,418Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:43,570Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:43,707Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:43,802Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:43,803Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:43,853Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:00:43,864Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:43,866Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:43,867Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:43,877Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:43,878Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:43,898Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E260DD780AC86D62DDCAEC3A0C60576A89A03D211BD9E082E23E7F91820F6F52, not inserting the second time {}
[INFO ] 2019-11-01T04:00:43,925Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:43,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:43,943Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:43,950Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:43,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:43,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:43,973Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:43,975Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:43,993Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:44,001Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@9a44eda {}
[INFO ] 2019-11-01T04:00:44,041Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:44,043Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:44,045Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:44,139Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:44,147Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:44,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:44,155Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:44,160Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:44,162Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:44,326Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:44,459Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:44,558Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:44,559Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:44,573Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:44,574Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:44,576Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:44,577Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:44,577Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:44,599Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4826F00A104A1DC2D71071232C23A776C78CE9CBCDF1F5D6CBAFF0AD86180F66, not inserting the second time {}
[INFO ] 2019-11-01T04:00:44,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:44,610Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:44,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:44,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:44,631Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:44,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:44,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:44,655Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:44,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:44,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:44,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:44,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:44,663Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:44,665Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:44,681Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:44,690Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@109ca000 {}
[INFO ] 2019-11-01T04:00:44,702Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:44,703Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:44,705Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:44,828Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:44,844Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:44,855Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:44,861Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:44,871Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:44,873Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:45,005Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:45,183Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:45,275Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:45,277Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:45,291Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:45,293Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:45,294Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:45,295Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:45,296Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:45,307Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 382904F6EBDC8A8F82B20D62F3E03BEC5654EE4CEE0D4B59F2DAE0EC2BF440C5, not inserting the second time {}
[INFO ] 2019-11-01T04:00:45,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:45,341Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:45,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580843404) {}
[INFO ] 2019-11-01T04:00:45,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:45,358Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:45,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:45,366Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:45,367Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:45,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580844150) {}
[INFO ] 2019-11-01T04:00:45,375Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:45,377Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:45,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:45,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:45,390Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:45,392Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:45,393Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:45,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:45,395Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580844847) {}
[INFO ] 2019-11-01T04:00:45,492Z [Mock network] flow.[da89e406-b31d-4a1f-a188-c90633806fdc].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4946844076297734670). {}
[INFO ] 2019-11-01T04:00:45,593Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4946844076297734670). {invocation_id=d1c6fbbb-55f2-47dc-947c-dc9e6b7ad726, invocation_timestamp=2019-11-01T04:00:45.591Z, session_id=d1c6fbbb-55f2-47dc-947c-dc9e6b7ad726, session_timestamp=2019-11-01T04:00:45.591Z}
[INFO ] 2019-11-01T04:00:45,822Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:45,824Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:45,830Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@26e6ae56 {}
[INFO ] 2019-11-01T04:00:45,845Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:45,847Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:45,849Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:45,979Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:45,993Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:45,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:45,999Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:46,006Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:46,010Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:46,253Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:46,383Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:46,476Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:46,477Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:46,488Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:00:46,496Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:46,498Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:46,499Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:46,500Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:46,501Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:46,514Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A3751179FF86BE0EC75DBEC26C4A8D3ABCD5C8B0EC3B050BEC09FA0450260B6F, not inserting the second time {}
[INFO ] 2019-11-01T04:00:46,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:46,531Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:46,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:46,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:46,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:46,544Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:46,551Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:46,552Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:46,569Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:46,577Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@101c779f {}
[INFO ] 2019-11-01T04:00:46,589Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:46,591Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:46,591Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:46,670Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:46,677Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:46,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:46,692Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:46,695Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:46,696Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:46,835Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:46,954Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:47,094Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:47,096Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:47,110Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:47,111Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:47,112Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:47,113Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:47,114Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:47,126Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 43562F2DD8387F7E3D3F359032FF23CCD2667A83D35E9C60D4BB78D484D5DA54, not inserting the second time {}
[INFO ] 2019-11-01T04:00:47,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:47,144Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:47,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:47,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:47,155Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:47,161Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:47,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:47,167Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:47,168Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:47,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:47,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:47,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:47,173Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:47,174Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:47,187Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:47,195Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6d70a0b1 {}
[INFO ] 2019-11-01T04:00:47,214Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:47,215Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:47,216Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:47,285Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:47,292Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:47,293Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,297Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:47,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,301Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,445Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:47,577Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:47,669Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:47,670Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:47,683Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:47,684Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:47,685Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:47,686Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:47,687Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:47,697Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 23EC1441D2BB306825FE161FD347BBB961A7F02A28767E34C2E552875CBF3C0C, not inserting the second time {}
[INFO ] 2019-11-01T04:00:47,702Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:47,704Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:47,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580845995) {}
[INFO ] 2019-11-01T04:00:47,722Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,725Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:47,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,740Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:47,743Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:47,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580846678) {}
[INFO ] 2019-11-01T04:00:47,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,754Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:47,761Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,762Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,765Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:47,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,767Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,768Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:47,769Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580847293) {}
[INFO ] 2019-11-01T04:00:47,895Z [Mock network] flow.[551b2e1a-f0a9-425e-9456-dc2ff7e9c27b].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8836675244265693262). {}
[INFO ] 2019-11-01T04:00:47,953Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8836675244265693262). {invocation_id=aa9388e4-6c99-4cb9-b762-43639e6891ba, invocation_timestamp=2019-11-01T04:00:47.952Z, session_id=aa9388e4-6c99-4cb9-b762-43639e6891ba, session_timestamp=2019-11-01T04:00:47.952Z}
[INFO ] 2019-11-01T04:00:48,159Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:48,160Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:48,166Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@30c2660d {}
[INFO ] 2019-11-01T04:00:48,186Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:48,188Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:48,189Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:48,290Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:48,311Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:48,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:48,317Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:48,325Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:48,326Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:48,507Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:48,652Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:48,746Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:48,749Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:48,759Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:00:48,765Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:48,766Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:48,768Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:48,769Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:48,770Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:48,785Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FD822FBC406A55E39E5DDA24B30C7860BBD4ED7D5128643F4F168849CB33959A, not inserting the second time {}
[INFO ] 2019-11-01T04:00:48,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:48,794Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:48,804Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:48,805Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:48,805Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:48,806Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:48,810Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:48,811Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:48,832Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:48,840Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@cef41d3 {}
[INFO ] 2019-11-01T04:00:48,849Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:48,851Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:48,853Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:48,996Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:49,005Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:49,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:49,012Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:49,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:49,016Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:49,188Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:49,369Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:49,460Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:49,462Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:49,482Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:49,483Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:49,484Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:49,485Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:49,486Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:49,498Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0D7B7AA327DAB5B6E5A3273373D15254AB9E8613CD176B9FA3EDBA7441C802E7, not inserting the second time {}
[INFO ] 2019-11-01T04:00:49,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:49,523Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:49,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:49,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:49,546Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:49,563Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:49,568Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:49,577Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:49,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:49,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:49,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:49,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:49,590Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:00:49,594Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:00:49,609Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:00:49,617Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2fbc9548 {}
[INFO ] 2019-11-01T04:00:49,631Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:00:49,633Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:49,634Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:49,733Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:00:49,741Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:00:49,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:49,746Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:49,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:49,762Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:49,899Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:00:50,018Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:00:50,149Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:00:50,151Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:00:50,162Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:00:50,163Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:00:50,164Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:50,165Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:00:50,166Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:00:50,176Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B95627DE75963AA82413A8B2EF9F1FAE6A2401BA1E34B3B8B6674E9E27230FE6, not inserting the second time {}
[INFO ] 2019-11-01T04:00:50,180Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:50,183Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:50,197Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580848312) {}
[INFO ] 2019-11-01T04:00:50,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:50,200Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:50,207Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:50,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:50,210Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:50,220Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580849007) {}
[INFO ] 2019-11-01T04:00:50,221Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:50,223Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:00:50,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:50,230Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:50,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:50,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:50,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[INFO ] 2019-11-01T04:00:50,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:00:50,240Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580849743) {}
[WARN ] 2019-11-01T04:00:50,284Z [Mock network] flow.[6e40b956-0e2f-4cf6-b6af-1d22af515a5a].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 9519307C0A7F1E1A739D01B0EF99EDA902F921E1E3ADDF2E145F1A31F39FBE12
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T04:00:50,360Z [Mock network] flow.[5a9a997d-2919-4f6b-8e88-dba737795b2f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5085694624415671036). {}
[INFO ] 2019-11-01T04:00:50,402Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5085694624415671036). {invocation_id=ea7ed484-3fe1-4655-b043-e28e8f5dbe70, invocation_timestamp=2019-11-01T04:00:50.401Z, session_id=ea7ed484-3fe1-4655-b043-e28e8f5dbe70, session_timestamp=2019-11-01T04:00:50.401Z}
[INFO ] 2019-11-01T04:01:35,322Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-ddd5bba1-a001-4470-b44f-a6bbce78c286.jar {}
[INFO ] 2019-11-01T04:01:35,345Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-c8724086-7cba-4fbf-b0fd-074d3a669fae.jar {}
[INFO ] 2019-11-01T04:01:35,390Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-ddd5bba1-a001-4470-b44f-a6bbce78c286.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-c8724086-7cba-4fbf-b0fd-074d3a669fae.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T04:01:35,436Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:35,440Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:35,456Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-ddd5bba1-a001-4470-b44f-a6bbce78c286.jar {}
[INFO ] 2019-11-01T04:01:35,495Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-c8724086-7cba-4fbf-b0fd-074d3a669fae.jar {}
[INFO ] 2019-11-01T04:01:35,543Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T04:01:35,607Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T04:01:35,693Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T04:01:35,869Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@455a597 {}
[INFO ] 2019-11-01T04:01:36,818Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:36,880Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:36,886Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:39,491Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:40,150Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:40,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:40,165Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:40,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:40,305Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:40,682Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:40,865Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:40,985Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:40,999Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:41,129Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:01:41,300Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:41,306Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:41,312Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:41,315Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:41,320Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:41,391Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 705AE0D564335D796E87A453C65B69525D2C3CF2FF06E3B60D257776FB029916, not inserting the second time {}
[INFO ] 2019-11-01T04:01:41,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:41,532Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:41,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:41,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:41,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:41,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:41,551Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:41,554Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:41,605Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:41,635Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3ad9ac6 {}
[INFO ] 2019-11-01T04:01:41,669Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:41,678Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:41,680Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:41,840Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:41,851Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:41,854Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:41,861Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:41,868Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:41,872Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:42,047Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:42,178Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:42,274Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:42,278Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:42,301Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:42,305Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:42,307Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:42,310Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:42,312Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:42,327Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3140010FB7D238EC6D4981340E35ACBAAABB5B06B81771020832ADCECEB0493E, not inserting the second time {}
[INFO ] 2019-11-01T04:01:42,345Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:42,350Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:42,365Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:42,367Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:42,370Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:42,381Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:42,383Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:42,389Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:42,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:42,393Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:42,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:42,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:42,399Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:42,401Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:42,425Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:42,443Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@171e35f0 {}
[INFO ] 2019-11-01T04:01:42,472Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:42,474Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:42,476Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:42,612Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:42,622Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:42,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:42,629Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:42,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:42,646Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:42,841Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:42,984Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:43,097Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:43,099Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:43,133Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:43,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:43,137Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:43,140Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:43,144Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:43,166Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 30BDD4FC7D2D17A7E56E7E0C1CD5A9E40D70E0CDB2D7FE2EFCCBA8315817AFB3, not inserting the second time {}
[INFO ] 2019-11-01T04:01:43,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:43,178Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:43,206Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:43,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:43,216Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:43,238Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:43,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:43,246Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:43,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:43,276Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:43,280Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:43,292Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:43,294Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:43,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:43,302Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:43,303Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:43,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:43,306Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:43,309Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:43,311Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:43,340Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:43,356Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@75eb020e {}
[INFO ] 2019-11-01T04:01:43,371Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:43,374Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:43,376Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:43,529Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:43,549Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:43,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:43,562Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:43,576Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:43,578Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:43,736Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:43,864Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:43,967Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:43,969Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:43,985Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:43,987Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:43,988Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:43,991Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:43,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:44,006Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A9D61641CED7A4DFEC9B5F8D8157F4E53746B5D4BE4D9D2E3F976066D55523E8, not inserting the second time {}
[INFO ] 2019-11-01T04:01:44,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:44,021Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:44,040Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:44,045Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,049Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:44,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:44,085Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:44,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:44,109Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,113Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:44,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:44,144Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:44,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:44,172Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,176Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:44,202Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,206Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,218Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:44,220Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,221Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:44,225Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:44,232Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:44,235Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:44,276Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:44,294Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2b8d6104 {}
[INFO ] 2019-11-01T04:01:44,318Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:44,327Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:44,329Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:44,588Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:44,603Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:44,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:44,617Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:44,625Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:44,627Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:44,766Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:44,906Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:45,010Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:45,013Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:45,035Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:45,037Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:45,038Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:45,044Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:45,046Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:45,069Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 906CA2AFB53D95D50C7010BE227BA67C76D33FB2C684A63049194DE3A62FD65B, not inserting the second time {}
[INFO ] 2019-11-01T04:01:45,076Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:45,084Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:45,104Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580900152) {}
[INFO ] 2019-11-01T04:01:45,105Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,108Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:45,117Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:45,121Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:45,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580901854) {}
[INFO ] 2019-11-01T04:01:45,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,139Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:45,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:45,153Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:45,162Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572580902624) {}
[INFO ] 2019-11-01T04:01:45,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,166Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:45,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,177Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:45,179Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:45,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572580903554) {}
[INFO ] 2019-11-01T04:01:45,189Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,191Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:45,199Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,201Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,206Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:45,207Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:45,210Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580904605) {}
[INFO ] 2019-11-01T04:01:45,218Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:45,219Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:45,220Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:45,221Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:45,222Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:45,223Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:45,224Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:45,226Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:46,405Z [Mock network] flow.[32996769-e588-42a1-a43a-1c2bdd98b055].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4084075047549965939). {}
[INFO ] 2019-11-01T04:01:46,674Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4084075047549965939). {invocation_id=95982e47-7b1d-4619-a036-cd694d0b650f, invocation_timestamp=2019-11-01T04:01:46.665Z, session_id=95982e47-7b1d-4619-a036-cd694d0b650f, session_timestamp=2019-11-01T04:01:46.665Z}
[INFO ] 2019-11-01T04:01:47,072Z [Mock network] flow.[32996769-e588-42a1-a43a-1c2bdd98b055].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5402452231621123488). {}
[INFO ] 2019-11-01T04:01:47,102Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5402452231621123488). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=996d91fe-bc37-4fbc-9081-cbf30a82e39b, invocation_timestamp=2019-11-01T04:01:47.101Z, session_id=996d91fe-bc37-4fbc-9081-cbf30a82e39b, session_timestamp=2019-11-01T04:01:47.101Z}
[INFO ] 2019-11-01T04:01:47,243Z [Mock network] flow.[32996769-e588-42a1-a43a-1c2bdd98b055].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4700164325477552026). {}
[INFO ] 2019-11-01T04:01:47,293Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4700164325477552026). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=efc4cb0b-e14f-4e2a-a655-068d95621c1f, invocation_timestamp=2019-11-01T04:01:47.292Z, session_id=efc4cb0b-e14f-4e2a-a655-068d95621c1f, session_timestamp=2019-11-01T04:01:47.292Z}
[INFO ] 2019-11-01T04:01:47,506Z [Mock network] flow.[98a0e274-5152-4558-876f-fce916af5dd6].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3720586208476567276). {}
[INFO ] 2019-11-01T04:01:47,553Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3720586208476567276). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=88d7c353-3e8f-4676-ba8c-2af0caee3dfe, invocation_timestamp=2019-11-01T04:01:47.552Z, session_id=88d7c353-3e8f-4676-ba8c-2af0caee3dfe, session_timestamp=2019-11-01T04:01:47.552Z}
[INFO ] 2019-11-01T04:01:47,774Z [Mock network] flow.[557e0823-96dc-4f39-8c02-6f9fdc76c3d2].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=7213013982632056016). {}
[INFO ] 2019-11-01T04:01:47,855Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7213013982632056016). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=c7ce360c-5587-4bf0-9c32-e56ed42a4585, invocation_timestamp=2019-11-01T04:01:47.853Z, session_id=c7ce360c-5587-4bf0-9c32-e56ed42a4585, session_timestamp=2019-11-01T04:01:47.853Z}
[INFO ] 2019-11-01T04:01:47,883Z [Mock network] flow.[0a61c6ba-ee0f-4e50-8f0f-ca9602903471].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,018Z [Mock network] flow.[0a61c6ba-ee0f-4e50-8f0f-ca9602903471].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,183Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:01:48,263Z [Mock network] flow.[0ee9b455-13a9-4492-bd23-7c3fb79564c4].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8391132445708220092). {}
[INFO ] 2019-11-01T04:01:48,322Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8391132445708220092). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=d6563fb8-a856-4af5-96f6-9b62b2fac0ec, invocation_timestamp=2019-11-01T04:01:48.320Z, session_id=d6563fb8-a856-4af5-96f6-9b62b2fac0ec, session_timestamp=2019-11-01T04:01:48.320Z}
[INFO ] 2019-11-01T04:01:48,352Z [Mock network] flow.[30a1420a-bcc6-4d1b-9539-a37d36fa0544].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,434Z [Mock network] flow.[30a1420a-bcc6-4d1b-9539-a37d36fa0544].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,561Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:01:48,676Z [Mock network] flow.[0ee9b455-13a9-4492-bd23-7c3fb79564c4].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,714Z [Mock network] flow.[0ee9b455-13a9-4492-bd23-7c3fb79564c4].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,717Z [Mock network] flow.[0ee9b455-13a9-4492-bd23-7c3fb79564c4].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,757Z [Mock network] flow.[0ee9b455-13a9-4492-bd23-7c3fb79564c4].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,864Z [Mock network] flow.[30a1420a-bcc6-4d1b-9539-a37d36fa0544].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5654739949086623102). {}
[INFO ] 2019-11-01T04:01:48,893Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5654739949086623102). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=24f3aeb7-2523-4316-8d37-f127213b073b, invocation_timestamp=2019-11-01T04:01:48.892Z, session_id=24f3aeb7-2523-4316-8d37-f127213b073b, session_timestamp=2019-11-01T04:01:48.892Z}
[INFO ] 2019-11-01T04:01:48,906Z [Mock network] flow.[99d15ee4-7a2b-42d1-b3de-bc350556e018].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,972Z [Mock network] flow.[99d15ee4-7a2b-42d1-b3de-bc350556e018].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:48,974Z [Mock network] flow.[99d15ee4-7a2b-42d1-b3de-bc350556e018].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:49,050Z [Mock network] flow.[99d15ee4-7a2b-42d1-b3de-bc350556e018].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:01:49,367Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:49,368Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:49,380Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@66d3d2e0 {}
[INFO ] 2019-11-01T04:01:49,395Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:49,397Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:49,398Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:49,645Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:49,654Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:49,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:49,661Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:49,675Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:49,677Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:49,847Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:50,038Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:50,137Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:50,140Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:50,154Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:01:50,160Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:50,161Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:50,162Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:50,164Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:50,166Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:50,180Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 94859ABCDD6347444E4256450490C995B1F898B3EB4C4D677AD0C575A048BD1F, not inserting the second time {}
[INFO ] 2019-11-01T04:01:50,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:50,196Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:50,197Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:50,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:50,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:50,201Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:50,204Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:50,205Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:50,226Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:50,237Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@217ebc1e {}
[INFO ] 2019-11-01T04:01:50,248Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:50,250Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:50,252Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:50,388Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:50,397Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:50,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:50,403Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:50,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:50,408Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:50,542Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:50,686Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:50,784Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:50,786Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:50,802Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:50,805Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:50,807Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:50,807Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:50,809Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:50,827Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 99AA3A31857D96F26041101011FB9C67997C0EBDC19AA46C922AB4F3E9D06F1C, not inserting the second time {}
[INFO ] 2019-11-01T04:01:50,832Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:50,834Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:50,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:50,854Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:50,945Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:50,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:50,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:50,962Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:50,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:50,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:50,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:50,967Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:50,970Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:50,971Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:51,001Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:51,011Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@24e8f643 {}
[INFO ] 2019-11-01T04:01:51,032Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:51,033Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:51,034Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:51,177Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:51,191Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:51,195Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,203Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:51,207Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,208Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,355Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:51,503Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:51,609Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:51,611Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:51,628Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:51,629Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:51,630Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:51,631Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:51,632Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:51,645Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 19412B9892296E5988DAD38D3A8F756C837A7BF33FD93A40240FFB8468CF597A, not inserting the second time {}
[INFO ] 2019-11-01T04:01:51,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:51,655Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:51,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580909656) {}
[INFO ] 2019-11-01T04:01:51,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,672Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:51,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:51,685Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:51,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580910399) {}
[INFO ] 2019-11-01T04:01:51,694Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,696Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:51,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,714Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:51,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:51,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580911195) {}
[INFO ] 2019-11-01T04:01:51,933Z [Mock network] flow.[9c63add8-fe28-4fbe-9957-0bc8b08f8a1f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6364792134883416690). {}
[INFO ] 2019-11-01T04:01:52,025Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6364792134883416690). {invocation_id=f90ac801-52c4-40fc-8f5b-edbfc01aabed, invocation_timestamp=2019-11-01T04:01:52.020Z, session_id=f90ac801-52c4-40fc-8f5b-edbfc01aabed, session_timestamp=2019-11-01T04:01:52.020Z}
[INFO ] 2019-11-01T04:01:52,220Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:52,221Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:52,226Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7e907074 {}
[INFO ] 2019-11-01T04:01:52,235Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:52,236Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:52,237Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:52,319Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:52,326Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:52,327Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:52,330Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:52,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:52,339Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:52,482Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:52,652Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:52,741Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:52,743Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:52,753Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:01:52,758Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:52,759Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:52,760Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:52,761Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:52,761Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:52,782Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9D8DB7751266FEAD110964CAB948304BD1AF358D99FFC26243825FFA49530B81, not inserting the second time {}
[INFO ] 2019-11-01T04:01:52,787Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:52,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:52,792Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:52,793Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:52,793Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:52,794Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:52,804Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:52,805Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:52,837Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:52,852Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6b6521ce {}
[INFO ] 2019-11-01T04:01:52,863Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:52,865Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:52,865Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:52,998Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:53,004Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:53,005Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:53,015Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:53,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:53,020Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:53,150Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:53,395Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:53,488Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:53,489Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:53,501Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:53,503Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:53,505Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:53,507Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:53,508Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:53,519Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DC087200AFC97524A1E5B27AF96A231CB15B62FA65874F29248D151FCE02067F, not inserting the second time {}
[INFO ] 2019-11-01T04:01:53,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:53,525Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:53,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:53,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:53,545Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:53,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:53,555Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:53,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:53,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:53,562Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:53,562Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:53,568Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:53,576Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:53,582Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:53,601Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:53,619Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@64a9016f {}
[INFO ] 2019-11-01T04:01:53,625Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:53,626Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:53,628Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:53,747Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:53,754Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:53,755Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:53,758Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:53,761Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:53,763Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:53,909Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:54,110Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:54,211Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:54,212Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:54,228Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:54,229Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:54,230Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:54,231Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:54,232Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:54,248Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 46A8E06D34D8BA48DA4D5BA97CC6B6F6E27FE69C909D4877D9FA1882EBEFACFE, not inserting the second time {}
[INFO ] 2019-11-01T04:01:54,253Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:54,263Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:54,272Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580912327) {}
[INFO ] 2019-11-01T04:01:54,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:54,279Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:54,287Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:54,289Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:54,290Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:54,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580913005) {}
[INFO ] 2019-11-01T04:01:54,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:54,302Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:54,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:54,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:54,323Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:54,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:54,325Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:54,327Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:54,327Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580913755) {}
[INFO ] 2019-11-01T04:01:54,413Z [Mock network] flow.[95e1e69b-3002-4318-be73-921a22bac43a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=311892660167943333). {}
[INFO ] 2019-11-01T04:01:54,467Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=311892660167943333). {invocation_id=48d10ebc-59c2-458a-9789-47a93e2bfea8, invocation_timestamp=2019-11-01T04:01:54.466Z, session_id=48d10ebc-59c2-458a-9789-47a93e2bfea8, session_timestamp=2019-11-01T04:01:54.466Z}
[INFO ] 2019-11-01T04:01:54,685Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:54,686Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:54,696Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1ff5b177 {}
[INFO ] 2019-11-01T04:01:54,710Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:54,712Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:54,713Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:54,840Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:54,856Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:54,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:54,860Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:54,872Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:54,873Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:55,006Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:55,141Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:55,296Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:55,299Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:55,320Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:01:55,325Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:55,326Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:55,328Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:55,329Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:55,331Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:55,343Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A9435900634A577618F28A9B70E42F029F56CFB90743D9FCB75A13BEF8C65E86, not inserting the second time {}
[INFO ] 2019-11-01T04:01:55,347Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:55,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:55,358Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:55,358Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:55,359Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:55,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:55,364Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:55,365Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:55,384Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:55,395Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@b23d8d3 {}
[INFO ] 2019-11-01T04:01:55,407Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:55,408Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:55,409Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:55,541Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:55,548Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:55,549Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:55,557Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:55,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:55,560Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:55,695Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:55,831Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:55,988Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:55,989Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:56,014Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:56,015Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:56,016Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:56,017Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:56,018Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:56,030Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E2919A39410E3CEA9E6DCFEC1BE9E566C4D8B303E99EBE32227C5AEBE95FCA8F, not inserting the second time {}
[INFO ] 2019-11-01T04:01:56,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:56,043Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:56,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:56,052Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:56,054Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:56,063Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:56,067Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:56,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:56,075Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:56,077Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:56,078Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:56,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:56,085Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:01:56,087Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:01:56,108Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:01:56,117Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3e0d9ce1 {}
[INFO ] 2019-11-01T04:01:56,123Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:01:56,125Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:56,125Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:56,215Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:01:56,226Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:01:56,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,230Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:56,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,235Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,375Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:01:56,566Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:01:56,669Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:01:56,671Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:01:56,688Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:01:56,690Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:01:56,691Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:56,692Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:01:56,693Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:01:56,704Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EC1943D0AA6E97CAB6C2F500FBF73F1812076A65D2CADCF839334E6379FF1EDA, not inserting the second time {}
[INFO ] 2019-11-01T04:01:56,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:56,716Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:56,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572580914857) {}
[INFO ] 2019-11-01T04:01:56,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,729Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:56,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,740Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:56,742Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:56,748Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572580915549) {}
[INFO ] 2019-11-01T04:01:56,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,751Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:01:56,760Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,761Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:56,767Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,768Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[INFO ] 2019-11-01T04:01:56,769Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:01:56,770Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572580916227) {}
[WARN ] 2019-11-01T04:01:56,830Z [Mock network] flow.[a8027a38-13cb-44cf-b2b7-ec26f854fbe4].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 2B0D55A196577BB61D4E3B6D17B70AB3FED3770E1B860BACAB1097879B116446
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T04:01:56,912Z [Mock network] flow.[3fe1b400-8bf5-455d-aebc-162da2f22176].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4195757310938350793). {}
[INFO ] 2019-11-01T04:01:57,002Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4195757310938350793). {invocation_id=ca1efc34-5084-45e4-bb48-bcaecad856ab, invocation_timestamp=2019-11-01T04:01:57.002Z, session_id=ca1efc34-5084-45e4-bb48-bcaecad856ab, session_timestamp=2019-11-01T04:01:57.002Z}
[INFO ] 2019-11-01T04:19:58,229Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-f60f6dc6-53fa-4ca5-a6ff-c63d67036278.jar {}
[INFO ] 2019-11-01T04:19:58,263Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-1b3664b5-52c5-4255-af2d-9c55438e89f4.jar {}
[INFO ] 2019-11-01T04:19:58,314Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-f60f6dc6-53fa-4ca5-a6ff-c63d67036278.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-1b3664b5-52c5-4255-af2d-9c55438e89f4.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T04:19:58,363Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:19:58,371Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:19:58,387Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-f60f6dc6-53fa-4ca5-a6ff-c63d67036278.jar {}
[INFO ] 2019-11-01T04:19:58,405Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-1b3664b5-52c5-4255-af2d-9c55438e89f4.jar {}
[INFO ] 2019-11-01T04:19:58,448Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T04:19:58,499Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T04:19:58,553Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T04:19:58,725Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5abada1d {}
[INFO ] 2019-11-01T04:19:59,517Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:19:59,582Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:19:59,588Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:02,144Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:02,801Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:02,810Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:02,834Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:02,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:02,983Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:03,275Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:03,441Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:03,553Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:03,561Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:03,660Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:20:03,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:03,805Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:03,807Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:03,810Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:03,813Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:03,866Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DA8A16C431DC9E0D18FF8364D1DAEB9ABFDF11A7B521C83C2C46564CA0E50B0F, not inserting the second time {}
[INFO ] 2019-11-01T04:20:03,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:03,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:03,985Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:03,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:03,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:03,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:03,997Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:03,999Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:04,022Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:04,036Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4dc29373 {}
[INFO ] 2019-11-01T04:20:04,055Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:04,058Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:04,067Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:04,282Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:04,306Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:04,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:04,324Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:04,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:04,341Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:04,516Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:04,664Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:04,761Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:04,763Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:04,791Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:04,795Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:04,797Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:04,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:04,801Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:04,828Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6E998448ADFE79382B40860AE48C3A0A4A253097A227BF13FB04FF7EE968D2F5, not inserting the second time {}
[INFO ] 2019-11-01T04:20:04,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:04,849Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:04,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:04,863Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:04,865Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:04,876Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:04,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:04,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:04,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:04,888Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:04,890Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:04,891Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:04,895Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:04,897Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:04,919Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:04,931Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@58d3e8ee {}
[INFO ] 2019-11-01T04:20:04,943Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:04,945Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:04,947Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:05,128Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:05,137Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:05,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,144Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:05,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,151Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,296Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:05,434Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:05,539Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:05,542Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:05,560Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:05,562Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:05,566Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:05,568Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:05,570Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:05,596Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 49EAE5AE34A6091525ACFF48DD2E3A82C548F3080FC054E959B444F758820290, not inserting the second time {}
[INFO ] 2019-11-01T04:20:05,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:05,616Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:05,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:05,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,645Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:05,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,673Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:05,683Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:05,703Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:05,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,732Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:05,757Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,760Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,771Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:05,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,774Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:05,776Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:05,780Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:05,781Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:05,798Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:05,809Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@183d3e8 {}
[INFO ] 2019-11-01T04:20:05,822Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:05,824Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:05,825Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:06,040Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:06,060Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:06,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,073Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:06,084Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,088Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,249Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:06,394Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:06,496Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:06,499Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:06,524Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:06,528Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:06,530Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:06,532Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:06,535Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:06,560Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9A42A00991F6612116FC01149BC606BC4DE6F60245BB83079200BC20258CA0AB, not inserting the second time {}
[INFO ] 2019-11-01T04:20:06,568Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:06,573Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:06,587Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:06,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,597Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:06,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,620Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:06,625Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:06,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:06,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,651Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:06,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,672Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:06,674Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:06,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:06,697Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,702Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:06,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,737Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:06,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:06,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:06,748Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:06,750Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:06,791Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:06,808Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@502ad20 {}
[INFO ] 2019-11-01T04:20:06,832Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:06,835Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:06,837Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:07,014Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:07,028Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:07,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,038Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:07,045Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,048Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,192Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:07,328Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:07,482Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:07,484Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:07,498Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:07,500Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:07,502Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:07,503Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:07,505Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:07,517Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F7508B166B20A1C1C582261979A4DF903A25AEF3924E565637ED18FE305D7BEB, not inserting the second time {}
[INFO ] 2019-11-01T04:20:07,524Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:07,532Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:07,551Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582002810) {}
[INFO ] 2019-11-01T04:20:07,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,558Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:07,575Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,577Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:07,581Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:07,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582004311) {}
[INFO ] 2019-11-01T04:20:07,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,602Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:07,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:07,621Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:07,633Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582005139) {}
[INFO ] 2019-11-01T04:20:07,635Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,638Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:07,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:07,658Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:07,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582006064) {}
[INFO ] 2019-11-01T04:20:07,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,687Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:07,702Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,718Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:07,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,722Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:07,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582007030) {}
[INFO ] 2019-11-01T04:20:07,732Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:07,733Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:07,734Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:07,735Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:07,736Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:07,737Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:07,739Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:07,740Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:08,646Z [Mock network] flow.[e0852e4c-2d07-4da0-a573-87dcab943764].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1014125718351977645). {}
[INFO ] 2019-11-01T04:20:08,883Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1014125718351977645). {invocation_id=40dcfc55-e745-4503-9357-a743f2557571, invocation_timestamp=2019-11-01T04:20:08.863Z, session_id=40dcfc55-e745-4503-9357-a743f2557571, session_timestamp=2019-11-01T04:20:08.863Z}
[INFO ] 2019-11-01T04:20:09,303Z [Mock network] flow.[e0852e4c-2d07-4da0-a573-87dcab943764].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3345585363524319814). {}
[INFO ] 2019-11-01T04:20:09,343Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3345585363524319814). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f239a772-1130-42e4-a709-dfb4da05cd8b, invocation_timestamp=2019-11-01T04:20:09.340Z, session_id=f239a772-1130-42e4-a709-dfb4da05cd8b, session_timestamp=2019-11-01T04:20:09.340Z}
[INFO ] 2019-11-01T04:20:09,487Z [Mock network] flow.[e0852e4c-2d07-4da0-a573-87dcab943764].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1047365798944157957). {}
[INFO ] 2019-11-01T04:20:09,537Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1047365798944157957). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b5e9b033-2769-4de5-b96d-a9ce1cfaeaeb, invocation_timestamp=2019-11-01T04:20:09.536Z, session_id=b5e9b033-2769-4de5-b96d-a9ce1cfaeaeb, session_timestamp=2019-11-01T04:20:09.536Z}
[INFO ] 2019-11-01T04:20:09,745Z [Mock network] flow.[9a140484-b8b8-457b-a089-9aa182f3ad86].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4642124061711929012). {}
[INFO ] 2019-11-01T04:20:09,801Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4642124061711929012). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b24de1b9-fdee-4e61-8e8e-a349ebcbb9e9, invocation_timestamp=2019-11-01T04:20:09.800Z, session_id=b24de1b9-fdee-4e61-8e8e-a349ebcbb9e9, session_timestamp=2019-11-01T04:20:09.800Z}
[INFO ] 2019-11-01T04:20:10,034Z [Mock network] flow.[f68ff8d1-39d4-420a-a1d5-ef1e18b8bd4d].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=4004636215584842248). {}
[INFO ] 2019-11-01T04:20:10,105Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4004636215584842248). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=ea25d658-2458-4eb3-a5b8-d665e9900d20, invocation_timestamp=2019-11-01T04:20:10.104Z, session_id=ea25d658-2458-4eb3-a5b8-d665e9900d20, session_timestamp=2019-11-01T04:20:10.104Z}
[INFO ] 2019-11-01T04:20:10,130Z [Mock network] flow.[d607d597-bf7d-4521-b01b-774d6230f8a5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:10,270Z [Mock network] flow.[d607d597-bf7d-4521-b01b-774d6230f8a5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:10,356Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:20:10,423Z [Mock network] flow.[609f1fbe-c43b-436b-8645-a76b53a9a403].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2163158832365393309). {}
[INFO ] 2019-11-01T04:20:10,471Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2163158832365393309). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=e6b4ab45-9452-4c02-b42e-1ae6d51377ec, invocation_timestamp=2019-11-01T04:20:10.470Z, session_id=e6b4ab45-9452-4c02-b42e-1ae6d51377ec, session_timestamp=2019-11-01T04:20:10.470Z}
[INFO ] 2019-11-01T04:20:10,499Z [Mock network] flow.[17e2ee94-ec28-4bea-87b0-50f91a64dd13].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:10,569Z [Mock network] flow.[17e2ee94-ec28-4bea-87b0-50f91a64dd13].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:10,613Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:20:10,726Z [Mock network] flow.[609f1fbe-c43b-436b-8645-a76b53a9a403].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:10,756Z [Mock network] flow.[609f1fbe-c43b-436b-8645-a76b53a9a403].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:10,759Z [Mock network] flow.[609f1fbe-c43b-436b-8645-a76b53a9a403].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:10,876Z [Mock network] flow.[609f1fbe-c43b-436b-8645-a76b53a9a403].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:11,031Z [Mock network] flow.[17e2ee94-ec28-4bea-87b0-50f91a64dd13].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1626688421089062730). {}
[INFO ] 2019-11-01T04:20:11,062Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1626688421089062730). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=d56774d7-685d-4a44-a997-96f16c5a015c, invocation_timestamp=2019-11-01T04:20:11.061Z, session_id=d56774d7-685d-4a44-a997-96f16c5a015c, session_timestamp=2019-11-01T04:20:11.061Z}
[INFO ] 2019-11-01T04:20:11,077Z [Mock network] flow.[16beeb8f-a373-4eb3-a859-51d04fd341e5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:11,153Z [Mock network] flow.[16beeb8f-a373-4eb3-a859-51d04fd341e5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:11,157Z [Mock network] flow.[16beeb8f-a373-4eb3-a859-51d04fd341e5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:11,189Z [Mock network] flow.[16beeb8f-a373-4eb3-a859-51d04fd341e5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:20:11,436Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:11,438Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:11,447Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2295375f {}
[INFO ] 2019-11-01T04:20:11,463Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:11,465Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:11,466Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:11,622Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:11,633Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:11,635Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:11,639Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:11,649Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:11,651Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:11,814Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:11,994Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:12,087Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:12,089Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:12,098Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:20:12,102Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:12,103Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:12,104Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:12,105Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:12,106Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:12,116Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 05AD0C23794009C94019A64B2055C92B6A9A2E064B8A8710466F5F3890861B78, not inserting the second time {}
[INFO ] 2019-11-01T04:20:12,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:12,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:12,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:12,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:12,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:12,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:12,144Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:12,145Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:12,170Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:12,190Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1d4b25ad {}
[INFO ] 2019-11-01T04:20:12,199Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:12,201Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:12,202Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:12,329Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:12,338Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:12,339Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:12,343Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:12,348Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:12,349Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:12,481Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:12,619Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:12,721Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:12,722Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:12,734Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:12,739Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:12,740Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:12,741Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:12,742Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:12,754Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 71D6A2B4BCACD09A998F43DE424D64226247C5C3CF987AD736CA6B52A36E3788, not inserting the second time {}
[INFO ] 2019-11-01T04:20:12,760Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:12,761Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:12,777Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:12,788Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:12,790Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:12,803Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:12,804Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:12,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:12,808Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:12,808Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:12,809Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:12,810Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:12,815Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:12,816Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:12,895Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:12,910Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@27abc6ea {}
[INFO ] 2019-11-01T04:20:12,929Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:12,931Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:12,932Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:13,052Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:13,067Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:13,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,080Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:13,084Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,085Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,220Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:13,362Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:13,463Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:13,465Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:13,479Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:13,480Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:13,481Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:13,482Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:13,484Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:13,495Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E7A9D29F163515EE285C3E2A76AF8DCECA37C51A93B5483D1C55DFB3438DD346, not inserting the second time {}
[INFO ] 2019-11-01T04:20:13,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:13,502Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:13,519Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582011635) {}
[INFO ] 2019-11-01T04:20:13,520Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,522Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:13,534Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:13,537Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:13,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582012339) {}
[INFO ] 2019-11-01T04:20:13,548Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,550Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:13,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:13,568Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,568Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,569Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:13,571Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582013073) {}
[INFO ] 2019-11-01T04:20:13,783Z [Mock network] flow.[919335fe-de05-492e-aba0-67996bc809e6].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4383323572583362283). {}
[INFO ] 2019-11-01T04:20:13,885Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4383323572583362283). {invocation_id=ea8372bc-fba6-4cd5-926e-881d9fe141b3, invocation_timestamp=2019-11-01T04:20:13.883Z, session_id=ea8372bc-fba6-4cd5-926e-881d9fe141b3, session_timestamp=2019-11-01T04:20:13.883Z}
[INFO ] 2019-11-01T04:20:14,072Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:14,074Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:14,079Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@73909664 {}
[INFO ] 2019-11-01T04:20:14,092Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:14,097Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:14,102Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:14,220Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:14,231Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:14,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:14,236Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:14,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:14,245Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:14,435Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:14,566Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:14,658Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:14,659Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:14,668Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:20:14,673Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:14,674Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:14,675Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:14,676Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:14,677Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:14,688Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 99AD09F683EDC1134A6D502C08B4F937A8FA821BF19D661A9E7B462660E7B60C, not inserting the second time {}
[INFO ] 2019-11-01T04:20:14,695Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:14,698Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:14,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:14,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:14,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:14,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:14,715Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:14,716Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:14,728Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:14,736Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7ec6d2b5 {}
[INFO ] 2019-11-01T04:20:14,743Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:14,744Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:14,745Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:14,849Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:14,855Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:14,856Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:14,866Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:14,869Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:14,870Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:15,093Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:15,244Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:15,334Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:15,336Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:15,347Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:15,348Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:15,349Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:15,350Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:15,350Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:15,362Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0E2D07B55A9D66778A591768F9D26E99337E5CCA0620F568D518971C4B344AC7, not inserting the second time {}
[INFO ] 2019-11-01T04:20:15,366Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:15,368Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:15,377Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:15,378Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:15,379Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:15,388Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:15,389Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:15,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:15,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:15,395Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:15,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:15,403Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:15,408Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:15,409Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:15,434Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:15,446Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@767f231a {}
[INFO ] 2019-11-01T04:20:15,453Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:15,454Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:15,456Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:15,541Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:15,547Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:15,548Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:15,552Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:15,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:15,555Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:15,747Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:15,891Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:15,989Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:15,990Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:16,006Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:16,007Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:16,008Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:16,009Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:16,010Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:16,024Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 70D435BC08DD0C11E7E432782616F4D413198445450BA8FD0B3508571359AE4F, not inserting the second time {}
[INFO ] 2019-11-01T04:20:16,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:16,030Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:16,044Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582014232) {}
[INFO ] 2019-11-01T04:20:16,045Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:16,046Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:16,056Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:16,057Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:16,059Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:16,071Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582014856) {}
[INFO ] 2019-11-01T04:20:16,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:16,075Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:16,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:16,088Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:16,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:16,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:16,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:16,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:16,096Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582015548) {}
[INFO ] 2019-11-01T04:20:16,188Z [Mock network] flow.[a286ce03-a47e-4e4f-94d2-acece56f36ff].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5035029465281470062). {}
[INFO ] 2019-11-01T04:20:16,359Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5035029465281470062). {invocation_id=559ff960-bb6a-47f9-a985-b2f2540195af, invocation_timestamp=2019-11-01T04:20:16.357Z, session_id=559ff960-bb6a-47f9-a985-b2f2540195af, session_timestamp=2019-11-01T04:20:16.357Z}
[INFO ] 2019-11-01T04:20:16,518Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:16,519Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:16,524Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2ac51be7 {}
[INFO ] 2019-11-01T04:20:16,538Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:16,539Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:16,540Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:16,670Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:16,684Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:16,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:16,695Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:16,701Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:16,706Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:16,859Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:17,021Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:17,106Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:17,107Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:17,116Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:20:17,120Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:17,121Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:17,123Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:17,124Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:17,126Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:17,138Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 344510F64E3783E1303AC8DBDDB4C3F3E2A65AE81974BA434999772F70E2D301, not inserting the second time {}
[INFO ] 2019-11-01T04:20:17,145Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:17,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:17,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:17,151Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:17,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:17,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:17,155Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:17,156Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:17,174Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:17,187Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@74834129 {}
[INFO ] 2019-11-01T04:20:17,201Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:17,203Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:17,206Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:17,324Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:17,333Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:17,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:17,340Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:17,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:17,343Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:17,529Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:17,658Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:17,752Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:17,753Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:17,765Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:17,766Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:17,767Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:17,768Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:17,768Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:17,778Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0A9374B1B445E3D9EF32D4F2659D502E73A06714D7EB87620A78B0133BF9A180, not inserting the second time {}
[INFO ] 2019-11-01T04:20:17,783Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:17,784Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:17,793Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:17,794Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:17,796Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:17,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:17,803Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:17,814Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:17,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:17,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:17,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:17,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:17,826Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:20:17,827Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:20:17,839Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:20:17,845Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2a62cd93 {}
[INFO ] 2019-11-01T04:20:17,852Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:20:17,853Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:17,853Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:17,910Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:20:17,915Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:20:17,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:17,919Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:17,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:17,922Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:18,101Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:20:18,230Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:20:18,320Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:20:18,321Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:20:18,335Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:20:18,336Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:20:18,337Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:18,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:20:18,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:20:18,348Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 42D5BF408349F480CAC9F709B70E00911086818F10FC9C53AE7884586BEE41B0, not inserting the second time {}
[INFO ] 2019-11-01T04:20:18,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:18,353Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:18,365Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582016691) {}
[INFO ] 2019-11-01T04:20:18,366Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:18,368Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:18,373Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:18,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:18,375Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:18,380Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582017335) {}
[INFO ] 2019-11-01T04:20:18,380Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:18,382Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:20:18,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:18,387Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:18,390Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:18,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:18,392Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[INFO ] 2019-11-01T04:20:18,392Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:20:18,393Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582017916) {}
[WARN ] 2019-11-01T04:20:18,449Z [Mock network] flow.[0110ccf2-30e4-440a-a3c7-797bc4756fd1].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 4790438950E976FA852454A6F2EA0AB0C4E35E0205819117E24A25C3AB23C342
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T04:20:18,538Z [Mock network] flow.[0ecc92b1-286e-44d0-9b3e-840422f41115].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4209606164830628920). {}
[INFO ] 2019-11-01T04:20:18,638Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4209606164830628920). {invocation_id=ffcb9ae6-ed28-4603-bc4b-c17573f1d4f9, invocation_timestamp=2019-11-01T04:20:18.637Z, session_id=ffcb9ae6-ed28-4603-bc4b-c17573f1d4f9, session_timestamp=2019-11-01T04:20:18.637Z}
[INFO ] 2019-11-01T04:22:47,002Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-50da458c-3024-4f96-a132-d252a8052e6c.jar {}
[INFO ] 2019-11-01T04:22:47,038Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-ffc04a83-85bf-4034-ad0f-c5e1c9bd16ff.jar {}
[INFO ] 2019-11-01T04:22:47,088Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-50da458c-3024-4f96-a132-d252a8052e6c.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-ffc04a83-85bf-4034-ad0f-c5e1c9bd16ff.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T04:22:47,127Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:22:47,131Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:22:47,146Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-50da458c-3024-4f96-a132-d252a8052e6c.jar {}
[INFO ] 2019-11-01T04:22:47,162Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-ffc04a83-85bf-4034-ad0f-c5e1c9bd16ff.jar {}
[INFO ] 2019-11-01T04:22:47,216Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T04:22:47,287Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T04:22:47,411Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T04:22:47,553Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6e3aaa79 {}
[INFO ] 2019-11-01T04:22:48,339Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:22:48,407Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:48,411Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:50,853Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:51,477Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:22:51,480Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:51,492Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:51,604Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:51,607Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:51,911Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:22:52,051Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:22:52,155Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:22:52,162Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:22:52,264Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:22:52,406Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:22:52,411Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:22:52,414Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:52,416Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:52,419Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:22:52,472Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0429DF99B8F7ADC7BDEB4C3F6423B7A76C5F94549511DCC2E560E4D6F32F87A2, not inserting the second time {}
[INFO ] 2019-11-01T04:22:52,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:52,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:52,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:52,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:52,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:52,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:52,645Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:22:52,650Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:22:52,696Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:22:52,727Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6406804b {}
[INFO ] 2019-11-01T04:22:52,747Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:22:52,749Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:52,754Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:52,904Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:52,925Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:22:52,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:52,947Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:52,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:52,966Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:53,133Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:22:53,274Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:22:53,367Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:22:53,375Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:22:53,401Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:22:53,405Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:22:53,407Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:53,408Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:53,410Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:22:53,425Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7CCE40D96EB896EF5AB5C8D9AB6999C18034CBF7D66AC8643B39DF82B5AA8C6B, not inserting the second time {}
[INFO ] 2019-11-01T04:22:53,436Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:53,446Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:53,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:53,464Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:53,467Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:53,478Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:53,481Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:53,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:53,489Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:53,490Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:53,492Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:53,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:53,497Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:22:53,499Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:22:53,518Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:22:53,528Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6ccee747 {}
[INFO ] 2019-11-01T04:22:53,550Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:22:53,552Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:53,554Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:53,716Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:53,730Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:22:53,734Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:53,738Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:53,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:53,745Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:53,887Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:22:54,035Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:22:54,138Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:22:54,140Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:22:54,155Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:22:54,157Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:22:54,158Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:54,160Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:54,161Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:22:54,183Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 70C269338FE2CEDF609CA1740CAFC1FAD92740654FE846FD90C212DC93F7DC07, not inserting the second time {}
[INFO ] 2019-11-01T04:22:54,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:54,197Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:54,207Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582171480) {}
[INFO ] 2019-11-01T04:22:54,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:54,212Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:54,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:54,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:54,226Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:54,236Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582172935) {}
[INFO ] 2019-11-01T04:22:54,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:54,247Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:54,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:54,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:54,265Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:54,267Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:54,268Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:54,270Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:54,271Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582173734) {}
[INFO ] 2019-11-01T04:22:55,267Z [Mock network] flow.[34da350a-6ce8-494f-86e8-8b8c3533c6fa].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7923052644209801403). {}
[INFO ] 2019-11-01T04:22:55,495Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7923052644209801403). {invocation_id=c7cad0f2-16d8-4c6a-97bf-4c61832e2840, invocation_timestamp=2019-11-01T04:22:55.487Z, session_id=c7cad0f2-16d8-4c6a-97bf-4c61832e2840, session_timestamp=2019-11-01T04:22:55.487Z}
[INFO ] 2019-11-01T04:22:55,960Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:22:55,962Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:22:55,972Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@584e912 {}
[INFO ] 2019-11-01T04:22:55,997Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:22:56,004Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:56,006Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:56,197Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:56,209Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:22:56,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:56,215Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:56,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:56,229Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:56,382Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:22:56,503Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:22:56,611Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:22:56,613Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:22:56,635Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:22:56,644Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:22:56,650Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:22:56,652Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:56,653Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:56,655Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:22:56,680Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5DE484F287EC1DBA44CC41669787D99163CB583F3A3D38B848594F8BDBC5BAB7, not inserting the second time {}
[INFO ] 2019-11-01T04:22:56,689Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:56,700Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:56,702Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:56,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:56,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:56,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:56,718Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:22:56,719Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:22:56,735Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:22:56,744Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3a2dc9e0 {}
[INFO ] 2019-11-01T04:22:56,758Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:22:56,760Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:56,761Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:56,881Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:56,898Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:22:56,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:56,905Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:56,911Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:56,920Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:57,063Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:22:57,182Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:22:57,310Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:22:57,312Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:22:57,325Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:22:57,327Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:22:57,328Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:57,329Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:57,330Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:22:57,343Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D079AA559BBECF46A9B12A3F03FF54C20133D8692FFAE7090A80643372B6556F, not inserting the second time {}
[INFO ] 2019-11-01T04:22:57,348Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:57,350Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:57,377Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:57,379Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:57,381Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:57,395Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:57,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:57,405Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:57,406Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:57,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:57,408Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:57,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:57,414Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:22:57,415Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:22:57,436Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:22:57,444Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6aa610cb {}
[INFO ] 2019-11-01T04:22:57,459Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:22:57,462Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:57,464Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:57,591Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:57,600Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:22:57,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:57,605Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:57,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:57,617Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:57,755Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:22:57,875Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:22:57,964Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:22:57,966Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:22:57,979Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:22:57,981Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:22:57,982Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:57,983Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:57,984Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:22:57,996Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9E9C51BECABFCF569628A6E63593787576763001894ADB4B02EEF93E5BFFC3ED, not inserting the second time {}
[INFO ] 2019-11-01T04:22:58,002Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:58,012Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:58,021Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582176210) {}
[INFO ] 2019-11-01T04:22:58,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:58,025Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:58,033Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:58,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:58,037Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:58,044Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582176900) {}
[INFO ] 2019-11-01T04:22:58,045Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:58,047Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:58,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:58,055Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:58,059Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:58,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:58,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:58,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:58,063Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582177601) {}
[INFO ] 2019-11-01T04:22:58,186Z [Mock network] flow.[ceb6745a-aad8-4f14-8e82-5bb0b5ddce4b].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2827044374683247299). {}
[INFO ] 2019-11-01T04:22:58,287Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2827044374683247299). {invocation_id=cf920f65-d87b-4f6f-9ced-58a599b44c48, invocation_timestamp=2019-11-01T04:22:58.286Z, session_id=cf920f65-d87b-4f6f-9ced-58a599b44c48, session_timestamp=2019-11-01T04:22:58.286Z}
[INFO ] 2019-11-01T04:22:58,559Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:22:58,560Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:22:58,571Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@62630e5c {}
[INFO ] 2019-11-01T04:22:58,589Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:22:58,592Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:58,594Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:58,727Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:58,734Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:22:58,735Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:22:58,741Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:58,755Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:22:58,756Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:22:58,902Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:22:59,034Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:22:59,128Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:22:59,130Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:22:59,140Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:22:59,145Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:22:59,146Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:22:59,147Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:59,149Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:59,150Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:22:59,162Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 600F73F7224D204E97DB5B7F2299AA5B96D501A8820183C39E9FEAE2A6195BFC, not inserting the second time {}
[INFO ] 2019-11-01T04:22:59,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:22:59,173Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:59,180Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:22:59,181Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:22:59,182Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:59,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:22:59,186Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:22:59,187Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:22:59,213Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:22:59,228Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5dff1d2a {}
[INFO ] 2019-11-01T04:22:59,248Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:22:59,250Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:59,253Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:59,340Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:59,349Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:22:59,350Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:22:59,353Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:59,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:22:59,358Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:22:59,524Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:22:59,650Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:22:59,754Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:22:59,756Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:22:59,768Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:22:59,770Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:22:59,771Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:59,772Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:22:59,773Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:22:59,786Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B9AB3DF740B203EE03DD9BB6336ECCD42E0E26FC0762EFF3B56AC1D6C19B3DDA, not inserting the second time {}
[INFO ] 2019-11-01T04:22:59,794Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:22:59,800Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:59,820Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:22:59,821Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:22:59,823Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:22:59,839Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:22:59,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:22:59,847Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:59,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:22:59,850Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:22:59,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:22:59,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:22:59,855Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:22:59,856Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:22:59,885Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:22:59,894Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3734cc6a {}
[INFO ] 2019-11-01T04:22:59,907Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:22:59,915Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:59,916Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:22:59,993Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:00,000Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:00,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,005Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:00,009Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,010Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,147Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:00,261Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:00,391Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:00,392Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:00,404Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:00,405Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:00,406Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:00,407Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:00,409Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:00,422Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9A20F32F6A6E3714074ADDEE87829E8A956C8C3988241D508DC2C346F5BD14A1, not inserting the second time {}
[INFO ] 2019-11-01T04:23:00,428Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:23:00,430Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:00,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582178735) {}
[INFO ] 2019-11-01T04:23:00,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,450Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:00,460Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,461Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:23:00,463Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:00,470Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582179350) {}
[INFO ] 2019-11-01T04:23:00,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,485Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:00,491Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,496Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:00,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,512Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[INFO ] 2019-11-01T04:23:00,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:00,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582180001) {}
[WARN ] 2019-11-01T04:23:00,564Z [Mock network] flow.[57f39ff2-55ad-4cca-9e73-c1d000f5fc9d].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 8F01AFF2C858446A98739138FC211F9C0B0D7C2E8B2C889696DC7193C73DE46E
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T04:23:00,690Z [Mock network] flow.[f7898b69-1b57-4914-85ed-2bd097c8774f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3237886738115125761). {}
[INFO ] 2019-11-01T04:23:00,781Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3237886738115125761). {invocation_id=3f607246-4528-47c3-8e2e-db9b51798989, invocation_timestamp=2019-11-01T04:23:00.781Z, session_id=3f607246-4528-47c3-8e2e-db9b51798989, session_timestamp=2019-11-01T04:23:00.781Z}
[INFO ] 2019-11-01T04:23:01,009Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:01,013Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:01,026Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@59cacee4 {}
[INFO ] 2019-11-01T04:23:01,045Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:01,050Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:01,051Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:01,198Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:01,208Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:01,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:01,213Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:01,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:01,225Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:01,392Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:01,532Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:01,623Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:01,624Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:01,635Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:23:01,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:01,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:01,641Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:01,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:01,643Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:01,654Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7DAC828BC1844432BD0A72C0A2449FC77DF89B2AFDC856744D70A1F4730998F3, not inserting the second time {}
[INFO ] 2019-11-01T04:23:01,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:01,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:01,667Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:01,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:01,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:01,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:01,676Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:01,680Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:01,700Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:23:01,717Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3cfff29a {}
[INFO ] 2019-11-01T04:23:01,727Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:01,728Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:01,729Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:01,799Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:01,806Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:01,808Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:01,811Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:01,814Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:01,815Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:01,957Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:02,154Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:02,248Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:02,249Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:02,270Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:02,272Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:02,273Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:02,274Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:02,275Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:02,292Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 616B3BB9807E97FA8A9A8D2CBF5E2065940A892CECCC022E6E05D2BF620BFCC4, not inserting the second time {}
[INFO ] 2019-11-01T04:23:02,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:02,300Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:02,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:02,314Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:02,316Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:02,325Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:02,326Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:02,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:02,331Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:02,332Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:02,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:02,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:02,336Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:02,337Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:02,355Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:23:02,368Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1c8b0531 {}
[INFO ] 2019-11-01T04:23:02,382Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:02,383Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:02,384Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:02,503Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:02,513Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:02,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:02,518Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:02,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:02,524Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:02,671Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:02,812Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:02,914Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:02,916Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:02,929Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:02,992Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:02,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:02,994Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:02,995Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:03,007Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 010BDD808603D9D0B0FADD23857D52D4C4E215E928292BBE5E1316DAE256A9D3, not inserting the second time {}
[INFO ] 2019-11-01T04:23:03,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:03,020Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,034Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:03,038Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,040Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,046Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,046Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:03,048Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:03,055Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,056Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,065Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,068Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:03,069Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,069Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,070Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:03,071Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,073Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:03,074Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:03,085Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:23:03,092Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3f942a8a {}
[INFO ] 2019-11-01T04:23:03,100Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:03,101Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:03,102Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:03,169Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:03,182Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:03,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,192Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,201Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,345Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:03,476Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:03,625Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:03,627Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:03,638Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:03,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:03,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:03,641Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:03,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:03,653Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 67F48B042A893E7622841DF448C52A558BC2005AB6A731A9ED5770C85686208C, not inserting the second time {}
[INFO ] 2019-11-01T04:23:03,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:03,659Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:03,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,671Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:03,679Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:03,686Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,687Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,695Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,696Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:03,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,709Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,721Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,722Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:03,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:03,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:03,737Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:03,738Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:03,756Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:23:03,766Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5593753c {}
[INFO ] 2019-11-01T04:23:03,777Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:03,778Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:03,788Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:03,867Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:03,874Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:03,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:03,877Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:03,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:03,881Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,021Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:04,149Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:04,289Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:04,291Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:04,309Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:04,310Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:04,311Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:04,312Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:04,313Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:04,324Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D05BABC4534A121FEFCF60CD7C92CFD35582D43D3F2E12FEAAEC885FE9A6CC3B, not inserting the second time {}
[INFO ] 2019-11-01T04:23:04,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:04,333Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:04,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582181209) {}
[INFO ] 2019-11-01T04:23:04,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,344Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:04,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:04,358Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:04,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582181808) {}
[INFO ] 2019-11-01T04:23:04,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,371Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:04,377Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,378Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:04,382Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:04,389Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582182514) {}
[INFO ] 2019-11-01T04:23:04,389Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,393Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:04,400Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,401Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:04,409Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:04,414Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582183184) {}
[INFO ] 2019-11-01T04:23:04,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,416Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:04,425Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,425Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:04,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,430Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,431Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:04,431Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582183874) {}
[INFO ] 2019-11-01T04:23:04,437Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:04,439Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:04,440Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:04,441Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:04,443Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:04,444Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:04,446Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:04,447Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:04,572Z [Mock network] flow.[d67a5592-8fdc-424e-aa21-a95de6a4f0b2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4786255360358492277). {}
[INFO ] 2019-11-01T04:23:04,650Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4786255360358492277). {invocation_id=26b2e547-def6-4a08-b0f7-feb35580f806, invocation_timestamp=2019-11-01T04:23:04.648Z, session_id=26b2e547-def6-4a08-b0f7-feb35580f806, session_timestamp=2019-11-01T04:23:04.648Z}
[INFO ] 2019-11-01T04:23:04,904Z [Mock network] flow.[d67a5592-8fdc-424e-aa21-a95de6a4f0b2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7621905452518370204). {}
[INFO ] 2019-11-01T04:23:04,925Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7621905452518370204). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c4a8c5bc-9146-4b61-a3ff-0b42681a0e2b, invocation_timestamp=2019-11-01T04:23:04.924Z, session_id=c4a8c5bc-9146-4b61-a3ff-0b42681a0e2b, session_timestamp=2019-11-01T04:23:04.924Z}
[INFO ] 2019-11-01T04:23:04,988Z [Mock network] flow.[d67a5592-8fdc-424e-aa21-a95de6a4f0b2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7551590260562689213). {}
[INFO ] 2019-11-01T04:23:05,019Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7551590260562689213). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=cb74cae5-984b-4a98-9a34-35a93e947d98, invocation_timestamp=2019-11-01T04:23:05.015Z, session_id=cb74cae5-984b-4a98-9a34-35a93e947d98, session_timestamp=2019-11-01T04:23:05.015Z}
[INFO ] 2019-11-01T04:23:05,133Z [Mock network] flow.[7986a233-4050-4fb9-9ef5-fd2e000a93f8].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5411744590969536872). {}
[INFO ] 2019-11-01T04:23:05,172Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5411744590969536872). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f8e5eebd-caad-44b4-8891-e57087c98210, invocation_timestamp=2019-11-01T04:23:05.171Z, session_id=f8e5eebd-caad-44b4-8891-e57087c98210, session_timestamp=2019-11-01T04:23:05.171Z}
[INFO ] 2019-11-01T04:23:05,352Z [Mock network] flow.[7d310431-4256-43dc-b841-18aeee9a5ffb].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-7418581591466350821). {}
[INFO ] 2019-11-01T04:23:05,395Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7418581591466350821). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=bea7e224-b6b5-44f2-8aaf-4bf2d2405dc9, invocation_timestamp=2019-11-01T04:23:05.394Z, session_id=bea7e224-b6b5-44f2-8aaf-4bf2d2405dc9, session_timestamp=2019-11-01T04:23:05.394Z}
[INFO ] 2019-11-01T04:23:05,416Z [Mock network] flow.[ebb44b29-ff03-49c4-921b-0cd9de727979].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:05,485Z [Mock network] flow.[ebb44b29-ff03-49c4-921b-0cd9de727979].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:05,626Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:23:05,671Z [Mock network] flow.[4aa53f3b-fa56-4f61-88c5-4537737dc818].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4085206167612687534). {}
[INFO ] 2019-11-01T04:23:05,707Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4085206167612687534). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=c6e47774-8f92-42cf-950b-cb3f295e90ca, invocation_timestamp=2019-11-01T04:23:05.706Z, session_id=c6e47774-8f92-42cf-950b-cb3f295e90ca, session_timestamp=2019-11-01T04:23:05.706Z}
[INFO ] 2019-11-01T04:23:05,729Z [Mock network] flow.[6a268e33-01ed-47b8-b7da-6084f4e1201b].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:05,794Z [Mock network] flow.[6a268e33-01ed-47b8-b7da-6084f4e1201b].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:05,840Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:23:05,953Z [Mock network] flow.[4aa53f3b-fa56-4f61-88c5-4537737dc818].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:05,983Z [Mock network] flow.[4aa53f3b-fa56-4f61-88c5-4537737dc818].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:05,985Z [Mock network] flow.[4aa53f3b-fa56-4f61-88c5-4537737dc818].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:06,016Z [Mock network] flow.[4aa53f3b-fa56-4f61-88c5-4537737dc818].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:06,099Z [Mock network] flow.[6a268e33-01ed-47b8-b7da-6084f4e1201b].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7611689232342527061). {}
[INFO ] 2019-11-01T04:23:06,149Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7611689232342527061). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=7330261a-ea94-451f-bc7c-c0456e82989e, invocation_timestamp=2019-11-01T04:23:06.112Z, session_id=7330261a-ea94-451f-bc7c-c0456e82989e, session_timestamp=2019-11-01T04:23:06.112Z}
[INFO ] 2019-11-01T04:23:06,161Z [Mock network] flow.[6429a1c2-2b5f-423b-8f74-4074a88442b7].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:06,213Z [Mock network] flow.[6429a1c2-2b5f-423b-8f74-4074a88442b7].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:06,214Z [Mock network] flow.[6429a1c2-2b5f-423b-8f74-4074a88442b7].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:06,245Z [Mock network] flow.[6429a1c2-2b5f-423b-8f74-4074a88442b7].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:06,435Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:06,436Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:06,440Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@313968bc {}
[INFO ] 2019-11-01T04:23:06,452Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:06,453Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:06,454Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:06,551Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:06,559Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:06,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:06,564Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:06,569Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:06,571Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:06,711Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:06,845Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:07,304Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:07,306Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:07,316Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:23:07,320Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:07,322Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:07,323Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:07,324Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:07,325Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:07,340Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D2D128FC05EEE1802CC284787A28EE484285ED660496591B71B9F5ECC89590C1, not inserting the second time {}
[INFO ] 2019-11-01T04:23:07,347Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:07,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:07,353Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:07,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:07,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:07,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:07,360Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:07,361Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:07,378Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:23:07,387Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@434b561 {}
[INFO ] 2019-11-01T04:23:07,400Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:07,401Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:07,402Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:07,469Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:07,476Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:07,476Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:07,480Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:07,483Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:07,483Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:07,609Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:07,725Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:07,834Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:07,836Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:07,850Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:07,851Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:07,852Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:07,853Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:07,853Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:07,864Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2C6722D2D9EB0CFAED15579C7712046DDA5FC7D5E22CDDA61194DBBFB930897F, not inserting the second time {}
[INFO ] 2019-11-01T04:23:07,872Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:07,874Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:07,879Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:07,880Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:07,882Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:07,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:07,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:07,891Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:07,892Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:07,894Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:07,895Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:07,896Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:07,899Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:07,899Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:07,913Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:23:07,922Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@10297b9f {}
[INFO ] 2019-11-01T04:23:07,940Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:07,941Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:07,941Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:08,001Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:08,007Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:08,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,011Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:08,013Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,014Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,153Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:08,278Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:08,388Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:08,390Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:08,409Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:08,410Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:08,411Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:08,411Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:08,412Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:08,426Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CF0149332BEEA987904365B50E2F8478FE29B028B7677C4C2C7855BA31B68352, not inserting the second time {}
[INFO ] 2019-11-01T04:23:08,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:08,438Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:08,452Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:08,458Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,460Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:08,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,470Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:08,479Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:08,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:08,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,487Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:08,492Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:08,496Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:08,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:08,500Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:08,501Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:08,510Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:23:08,521Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@37e1f0a {}
[INFO ] 2019-11-01T04:23:08,531Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:08,532Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:08,532Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:08,613Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:08,620Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:08,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:08,625Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:08,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:08,632Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:08,759Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:08,889Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:09,012Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:09,014Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:09,035Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:09,036Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:09,037Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:09,038Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:09,039Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:09,051Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E6C3B573B158489170FCC3E835229C3E16BE9C71A5CB3E0EE06E4E3EB2D1BAFE, not inserting the second time {}
[INFO ] 2019-11-01T04:23:09,055Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:09,057Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:09,065Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,066Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:09,082Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:09,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,099Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,107Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:09,109Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,113Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:09,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,115Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:09,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:09,125Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,127Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:23:09,128Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:23:09,137Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:23:09,142Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@e23e259 {}
[INFO ] 2019-11-01T04:23:09,148Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:23:09,149Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:09,149Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:09,256Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:23:09,262Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:23:09,262Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,265Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,267Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,268Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,385Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:23:09,511Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:23:09,616Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:23:09,617Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:23:09,629Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:23:09,630Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:09,631Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:09,631Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:09,632Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:23:09,642Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 14AF4B0CB264A070565E9F30FA452F2AF26941FC959CDC3BD3A6438EA22EFD50, not inserting the second time {}
[INFO ] 2019-11-01T04:23:09,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:09,646Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572582186560) {}
[INFO ] 2019-11-01T04:23:09,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,654Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:09,659Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572582187476) {}
[INFO ] 2019-11-01T04:23:09,664Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,665Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:09,680Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572582188008) {}
[INFO ] 2019-11-01T04:23:09,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,686Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,695Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572582188621) {}
[INFO ] 2019-11-01T04:23:09,700Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,701Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:23:09,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:09,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:23:09,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572582189262) {}
[INFO ] 2019-11-01T04:23:09,711Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:09,711Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:09,712Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:09,712Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:09,713Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:09,714Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:09,715Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:23:09,715Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:23:09,769Z [Mock network] flow.[464c0e35-7b64-4e33-a831-6d9f71353320].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2460573980438293942). {}
[INFO ] 2019-11-01T04:23:09,818Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2460573980438293942). {invocation_id=6ea58346-24b8-46a1-a8ac-26ca5eec0eb4, invocation_timestamp=2019-11-01T04:23:09.817Z, session_id=6ea58346-24b8-46a1-a8ac-26ca5eec0eb4, session_timestamp=2019-11-01T04:23:09.817Z}
[INFO ] 2019-11-01T04:23:09,936Z [Mock network] flow.[464c0e35-7b64-4e33-a831-6d9f71353320].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1632165716355265470). {}
[INFO ] 2019-11-01T04:23:09,952Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1632165716355265470). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=efad1b30-80df-45cf-8bdb-8dca32a39a52, invocation_timestamp=2019-11-01T04:23:09.951Z, session_id=efad1b30-80df-45cf-8bdb-8dca32a39a52, session_timestamp=2019-11-01T04:23:09.951Z}
[INFO ] 2019-11-01T04:23:10,021Z [Mock network] flow.[464c0e35-7b64-4e33-a831-6d9f71353320].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3973845070896063541). {}
[INFO ] 2019-11-01T04:23:10,051Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3973845070896063541). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f2ae582a-f907-4afc-9a3d-be8627897a5b, invocation_timestamp=2019-11-01T04:23:10.048Z, session_id=f2ae582a-f907-4afc-9a3d-be8627897a5b, session_timestamp=2019-11-01T04:23:10.048Z}
[INFO ] 2019-11-01T04:23:10,142Z [Mock network] flow.[e3adb02e-1466-4d2f-b8cd-2f044a786010].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1188585320138495488). {}
[INFO ] 2019-11-01T04:23:10,170Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1188585320138495488). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=134999b3-c18c-441e-b6e0-61ced3feaef9, invocation_timestamp=2019-11-01T04:23:10.169Z, session_id=134999b3-c18c-441e-b6e0-61ced3feaef9, session_timestamp=2019-11-01T04:23:10.169Z}
[INFO ] 2019-11-01T04:23:10,249Z [Mock network] flow.[d28068d5-ce35-42f6-a93f-97a2791af895].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=5818872094787727179). {}
[INFO ] 2019-11-01T04:23:10,278Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5818872094787727179). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=1d7d25c3-d8a1-46eb-a9db-3d15f4aaf219, invocation_timestamp=2019-11-01T04:23:10.278Z, session_id=1d7d25c3-d8a1-46eb-a9db-3d15f4aaf219, session_timestamp=2019-11-01T04:23:10.278Z}
[INFO ] 2019-11-01T04:23:10,290Z [Mock network] flow.[9eccaedb-19b7-4df3-a3ca-a3f5a604274f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,343Z [Mock network] flow.[9eccaedb-19b7-4df3-a3ca-a3f5a604274f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,397Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:23:10,414Z [Mock network] flow.[f013ab8c-22c1-4b7d-a12a-c7f34dfbd057].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-519019438183480793). {}
[INFO ] 2019-11-01T04:23:10,429Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-519019438183480793). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=a25ed2bd-5409-4422-b095-69ceaea23a2a, invocation_timestamp=2019-11-01T04:23:10.428Z, session_id=a25ed2bd-5409-4422-b095-69ceaea23a2a, session_timestamp=2019-11-01T04:23:10.428Z}
[INFO ] 2019-11-01T04:23:10,437Z [Mock network] flow.[1abd0eba-4ed5-4c5b-a080-0bfdd58415d7].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,476Z [Mock network] flow.[1abd0eba-4ed5-4c5b-a080-0bfdd58415d7].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,514Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:23:10,553Z [Mock network] flow.[f013ab8c-22c1-4b7d-a12a-c7f34dfbd057].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,588Z [Mock network] flow.[f013ab8c-22c1-4b7d-a12a-c7f34dfbd057].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,590Z [Mock network] flow.[f013ab8c-22c1-4b7d-a12a-c7f34dfbd057].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,617Z [Mock network] flow.[f013ab8c-22c1-4b7d-a12a-c7f34dfbd057].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,696Z [Mock network] flow.[1abd0eba-4ed5-4c5b-a080-0bfdd58415d7].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8951750819604444107). {}
[INFO ] 2019-11-01T04:23:10,715Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8951750819604444107). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=34f808a5-0368-408c-b1aa-6bfb1ac0d3b5, invocation_timestamp=2019-11-01T04:23:10.714Z, session_id=34f808a5-0368-408c-b1aa-6bfb1ac0d3b5, session_timestamp=2019-11-01T04:23:10.714Z}
[INFO ] 2019-11-01T04:23:10,723Z [Mock network] flow.[31512a64-7fb2-45ff-8729-ef75cab0cf00].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,758Z [Mock network] flow.[31512a64-7fb2-45ff-8729-ef75cab0cf00].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,759Z [Mock network] flow.[31512a64-7fb2-45ff-8729-ef75cab0cf00].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:23:10,776Z [Mock network] flow.[31512a64-7fb2-45ff-8729-ef75cab0cf00].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:05,306Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-441038c7-d682-4baf-b38a-f44e15b789f2.jar {}
[INFO ] 2019-11-01T04:51:05,339Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-7dbf9e6b-8261-452b-9f38-a13054ea8bb7.jar {}
[INFO ] 2019-11-01T04:51:05,383Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-441038c7-d682-4baf-b38a-f44e15b789f2.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-7dbf9e6b-8261-452b-9f38-a13054ea8bb7.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T04:51:05,421Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:05,425Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:05,440Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-441038c7-d682-4baf-b38a-f44e15b789f2.jar {}
[INFO ] 2019-11-01T04:51:05,461Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-7dbf9e6b-8261-452b-9f38-a13054ea8bb7.jar {}
[INFO ] 2019-11-01T04:51:05,486Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T04:51:05,541Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T04:51:05,589Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T04:51:05,754Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4c259e1a {}
[INFO ] 2019-11-01T04:51:06,588Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:06,698Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:06,712Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:09,209Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:09,838Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:09,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:09,853Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:09,970Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:09,974Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:10,280Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:10,432Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:10,540Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:10,551Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:10,663Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:51:10,820Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:10,826Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:10,833Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:10,836Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:10,843Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:10,933Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BECD09260AE859D10BCA1A68337679F1A15F5694614C40CC22ECA14ED54F9021, not inserting the second time {}
[INFO ] 2019-11-01T04:51:11,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:11,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:11,052Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:11,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:11,057Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:11,059Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:11,064Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:11,066Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:11,088Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:11,102Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4de489cd {}
[INFO ] 2019-11-01T04:51:11,119Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:11,121Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:11,123Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:11,371Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:11,394Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:11,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:11,411Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:11,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:11,426Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:11,582Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:11,715Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:11,810Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:11,812Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:11,828Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:11,831Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:11,833Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:11,834Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:11,836Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:11,850Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A5D9CA9AF01844BCA2D228707CB43100A218627EF8D31BC2E144E80D15E9D6FF, not inserting the second time {}
[INFO ] 2019-11-01T04:51:11,861Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:11,864Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:11,876Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:11,877Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:11,884Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:11,903Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:11,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:11,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:11,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:11,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:11,926Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:11,929Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:11,934Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:11,937Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:11,981Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:12,000Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@577c610a {}
[INFO ] 2019-11-01T04:51:12,018Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:12,025Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:12,027Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:12,244Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:12,268Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:12,270Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,279Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:12,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,297Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,465Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:12,592Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:12,684Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:12,687Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:12,706Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:12,709Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:12,710Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:12,711Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:12,713Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:12,744Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B2E824081DFCDD83DA09AE66E443F0BE4B53D54CDF0AAE693AC8061F0D943E86, not inserting the second time {}
[INFO ] 2019-11-01T04:51:12,763Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:12,767Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:12,788Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583869841) {}
[INFO ] 2019-11-01T04:51:12,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,794Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:12,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:12,826Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:12,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583871399) {}
[INFO ] 2019-11-01T04:51:12,861Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,864Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:12,875Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,877Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:12,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,884Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:12,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:12,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583872270) {}
[INFO ] 2019-11-01T04:51:14,028Z [Mock network] flow.[3122e54d-d7bc-47c7-9509-7a4a254fc351].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1445563890915162619). {}
[INFO ] 2019-11-01T04:51:14,221Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1445563890915162619). {invocation_id=b31369a0-352c-4dbc-b1ab-41fd1c4b6d75, invocation_timestamp=2019-11-01T04:51:14.214Z, session_id=b31369a0-352c-4dbc-b1ab-41fd1c4b6d75, session_timestamp=2019-11-01T04:51:14.214Z}
[INFO ] 2019-11-01T04:51:14,541Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:14,543Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:14,549Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@414f9f31 {}
[INFO ] 2019-11-01T04:51:14,568Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:14,570Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:14,571Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:14,757Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:14,782Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:14,784Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:14,791Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:14,812Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:14,814Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:14,960Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:15,100Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:15,200Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:15,202Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:15,225Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:51:15,231Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:15,235Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:15,238Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:15,239Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:15,241Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:15,265Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4DD36675CCC614917CEE7881A5B20CE977B406F5AD8D85BB8D642E14B97409EB, not inserting the second time {}
[INFO ] 2019-11-01T04:51:15,273Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:15,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:15,283Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:15,284Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:15,285Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:15,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:15,296Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:15,298Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:15,331Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:15,340Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@20989ada {}
[INFO ] 2019-11-01T04:51:15,353Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:15,356Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:15,358Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:15,528Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:15,544Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:15,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:15,561Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:15,571Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:15,579Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:15,751Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:15,875Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:15,962Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:15,965Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:15,979Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:15,980Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:15,982Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:15,983Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:15,984Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:15,998Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 76A9C38F6109B705A9A411D39E48DD4C7D450FCDAF6305ED09B03F581EA90E40, not inserting the second time {}
[INFO ] 2019-11-01T04:51:16,004Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:16,007Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:16,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:16,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:16,021Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:16,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:16,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:16,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:16,036Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:16,038Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:16,039Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:16,040Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:16,043Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:16,044Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:16,061Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:16,070Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c7df3fc {}
[INFO ] 2019-11-01T04:51:16,082Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:16,084Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:16,085Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:16,188Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:16,196Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:16,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,202Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:16,210Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,213Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,357Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:16,495Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:16,583Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:16,585Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:16,598Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:16,599Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:16,601Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:16,602Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:16,603Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:16,622Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 849F03D5D33E84107862E74501003F46EE2430932BF1F61D2B5CE9E5AFFB2124, not inserting the second time {}
[INFO ] 2019-11-01T04:51:16,627Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:16,632Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:16,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583874784) {}
[INFO ] 2019-11-01T04:51:16,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,645Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:16,653Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:16,657Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:16,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583875546) {}
[INFO ] 2019-11-01T04:51:16,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,668Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:16,675Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,681Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:16,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,683Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:16,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583876198) {}
[INFO ] 2019-11-01T04:51:16,797Z [Mock network] flow.[ed939988-cf90-43ce-960b-e0be3b5068cf].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1833617176328234850). {}
[INFO ] 2019-11-01T04:51:16,966Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1833617176328234850). {invocation_id=90f25a35-15f8-4f93-9904-e119335598bf, invocation_timestamp=2019-11-01T04:51:16.965Z, session_id=90f25a35-15f8-4f93-9904-e119335598bf, session_timestamp=2019-11-01T04:51:16.965Z}
[INFO ] 2019-11-01T04:51:17,257Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:17,258Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:17,270Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7b9c1c60 {}
[INFO ] 2019-11-01T04:51:17,287Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:17,290Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:17,292Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:17,463Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:17,474Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:17,476Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:17,482Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:17,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:17,494Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:17,623Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:17,749Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:17,840Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:17,842Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:17,851Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:51:17,860Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:17,862Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:17,863Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:17,865Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:17,867Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:17,886Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8E9D3D597A6798A85D3390220EC359805FC7013831B78E4D1DEC818A942A3167, not inserting the second time {}
[INFO ] 2019-11-01T04:51:17,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:17,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:17,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:17,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:17,977Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:17,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:17,985Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:17,986Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:18,013Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:18,027Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4c5a9738 {}
[INFO ] 2019-11-01T04:51:18,047Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:18,049Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:18,050Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:18,126Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:18,133Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:18,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:18,138Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:18,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:18,143Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:18,289Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:18,398Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:18,487Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:18,489Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:18,501Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:18,503Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:18,504Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:18,507Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:18,508Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:18,521Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F5E59D42B4BCEBB25C19F2E28FA0E1C23C0FC74601CB151EF8A8147873D4E346, not inserting the second time {}
[INFO ] 2019-11-01T04:51:18,526Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:18,528Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:18,536Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:18,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:18,539Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:18,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:18,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:18,550Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:18,551Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:18,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:18,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:18,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:18,557Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:18,558Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:18,570Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:18,577Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@f938213 {}
[INFO ] 2019-11-01T04:51:18,588Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:18,589Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:18,590Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:18,713Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:18,725Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:18,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:18,730Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:18,735Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:18,737Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:18,880Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:19,040Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:19,130Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:19,132Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:19,150Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:19,152Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:19,153Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:19,155Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:19,160Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:19,175Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 30D8CB4EABE50CAFE11793F8A32BE095150FB5AA50FDA86CAC3B19D664FCF8E7, not inserting the second time {}
[INFO ] 2019-11-01T04:51:19,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:19,187Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:19,201Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583877476) {}
[INFO ] 2019-11-01T04:51:19,202Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:19,207Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:19,217Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:19,219Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:19,221Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:19,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583878134) {}
[INFO ] 2019-11-01T04:51:19,230Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:19,233Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:19,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:19,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:19,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:19,251Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:19,257Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[INFO ] 2019-11-01T04:51:19,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:19,259Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583878727) {}
[WARN ] 2019-11-01T04:51:19,330Z [Mock network] flow.[dfc265de-deef-4091-8e1e-70a85deb1e2f].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 3C664A16E3086E817651A98FEA78EE255FBDD40B582EDBE2C950D065049DDF26
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T04:51:19,431Z [Mock network] flow.[252eff76-218d-4e2c-ab83-d1a678b0a3db].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3110182932204901686). {}
[INFO ] 2019-11-01T04:51:19,512Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3110182932204901686). {invocation_id=ca66b7a3-fed0-458f-8c2d-b60f22673f44, invocation_timestamp=2019-11-01T04:51:19.511Z, session_id=ca66b7a3-fed0-458f-8c2d-b60f22673f44, session_timestamp=2019-11-01T04:51:19.511Z}
[INFO ] 2019-11-01T04:51:19,755Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:19,759Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:19,770Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@18e8f4cc {}
[INFO ] 2019-11-01T04:51:19,785Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:19,787Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:19,788Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:19,964Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:19,974Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:19,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:19,980Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:19,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:19,990Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:20,133Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:20,268Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:20,361Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:20,363Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:20,374Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:51:20,379Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:20,382Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:20,383Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:20,384Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:20,386Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:20,398Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8EB67BFE81FDF698925E80E9017FDC2F575EB1CE1D0308963B6BA44A4FD74BF7, not inserting the second time {}
[INFO ] 2019-11-01T04:51:20,403Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:20,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:20,413Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:20,413Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:20,414Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:20,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:20,419Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:20,420Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:20,437Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:20,449Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@393c61d3 {}
[INFO ] 2019-11-01T04:51:20,458Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:20,459Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:20,460Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:20,552Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:20,560Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:20,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:20,564Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:20,568Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:20,569Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:20,765Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:20,891Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:20,985Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:20,987Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:20,999Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:21,000Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:21,001Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:21,002Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:21,003Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:21,017Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 61000AA92F68495D2822E32E020C3561CE47AB8BD2688826F4C0646C27B4925A, not inserting the second time {}
[INFO ] 2019-11-01T04:51:21,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:21,024Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:21,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:21,032Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:21,036Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:21,043Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:21,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:21,058Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:21,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:21,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:21,063Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:21,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:21,067Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:21,068Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:21,093Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:21,105Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7285a535 {}
[INFO ] 2019-11-01T04:51:21,117Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:21,118Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:21,119Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:21,227Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:21,237Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:21,238Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,242Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:21,246Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,248Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,398Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:21,587Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:21,684Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:21,686Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:21,697Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:21,698Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:21,699Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:21,700Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:21,701Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:21,712Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3F7F1276DB7ECB6015232E5C36E22EB4500FCAE3D89957C7F9D15D2C97A82AE6, not inserting the second time {}
[INFO ] 2019-11-01T04:51:21,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:21,718Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:21,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:21,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,729Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:21,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:21,757Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:21,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:21,774Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,778Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:21,788Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,798Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:21,799Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:21,803Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:21,807Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:21,808Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:21,828Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:21,842Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7557ae6a {}
[INFO ] 2019-11-01T04:51:21,853Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:21,854Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:21,860Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:21,952Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:21,958Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:21,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:21,962Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:21,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:21,965Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,102Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:22,214Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:22,357Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:22,359Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:22,370Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:22,371Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:22,372Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:22,373Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:22,374Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:22,384Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C1AD87E1DDE4F2D372BBF6384E019AC78A4526C1E81C9CA6636F517890CBFB0F, not inserting the second time {}
[INFO ] 2019-11-01T04:51:22,388Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:22,390Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:22,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:22,397Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,403Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:22,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,416Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:22,418Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:22,428Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:22,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,433Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:22,443Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:22,446Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:22,461Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:22,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,463Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:22,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,470Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,473Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:22,473Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,474Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:22,476Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:22,478Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:22,479Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:22,489Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:22,495Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6f7f6d1e {}
[INFO ] 2019-11-01T04:51:22,504Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:22,505Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:22,506Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:22,572Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:22,578Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:22,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:22,582Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:22,584Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:22,585Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:22,737Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:22,860Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:23,044Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:23,046Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:23,057Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:23,058Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:23,059Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:23,059Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:23,060Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:23,070Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2B9957E15E14C252336B726ED111157A5BE5553744CC81F6EA588249D67018CD, not inserting the second time {}
[INFO ] 2019-11-01T04:51:23,075Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:23,076Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:23,088Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583879976) {}
[INFO ] 2019-11-01T04:51:23,089Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,092Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:23,102Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,103Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:23,106Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:23,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583880561) {}
[INFO ] 2019-11-01T04:51:23,116Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,117Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:23,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:23,129Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:23,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583881238) {}
[INFO ] 2019-11-01T04:51:23,140Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,141Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:23,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:23,153Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:23,168Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583881959) {}
[INFO ] 2019-11-01T04:51:23,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,172Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:23,179Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,181Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:23,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:23,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583882579) {}
[INFO ] 2019-11-01T04:51:23,201Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:23,203Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:23,203Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:23,204Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:23,205Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:23,205Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:23,206Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:23,207Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:23,305Z [Mock network] flow.[98f70afd-8009-4589-8401-f50d13239e4a].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3217816831604011135). {}
[INFO ] 2019-11-01T04:51:23,368Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3217816831604011135). {invocation_id=a8b4b9a5-0a87-42f8-9cb7-9cfb20625730, invocation_timestamp=2019-11-01T04:51:23.367Z, session_id=a8b4b9a5-0a87-42f8-9cb7-9cfb20625730, session_timestamp=2019-11-01T04:51:23.367Z}
[INFO ] 2019-11-01T04:51:23,591Z [Mock network] flow.[98f70afd-8009-4589-8401-f50d13239e4a].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2367598624191523945). {}
[INFO ] 2019-11-01T04:51:23,614Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2367598624191523945). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=45249d62-a957-4548-93b0-008d7a4a629c, invocation_timestamp=2019-11-01T04:51:23.614Z, session_id=45249d62-a957-4548-93b0-008d7a4a629c, session_timestamp=2019-11-01T04:51:23.614Z}
[INFO ] 2019-11-01T04:51:23,662Z [Mock network] flow.[98f70afd-8009-4589-8401-f50d13239e4a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6559939904182601308). {}
[INFO ] 2019-11-01T04:51:23,683Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6559939904182601308). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ff489563-3324-4d34-bc77-5998407e9dd1, invocation_timestamp=2019-11-01T04:51:23.682Z, session_id=ff489563-3324-4d34-bc77-5998407e9dd1, session_timestamp=2019-11-01T04:51:23.682Z}
[INFO ] 2019-11-01T04:51:23,795Z [Mock network] flow.[9dfeaf56-a652-424e-8eb6-ce152827c916].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-286234207168979033). {}
[INFO ] 2019-11-01T04:51:23,833Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-286234207168979033). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=7627002a-6f8f-4054-ab7e-b98da2a769be, invocation_timestamp=2019-11-01T04:51:23.832Z, session_id=7627002a-6f8f-4054-ab7e-b98da2a769be, session_timestamp=2019-11-01T04:51:23.832Z}
[INFO ] 2019-11-01T04:51:23,985Z [Mock network] flow.[81a0c268-cab5-48ab-84ab-2989b7d26772].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=761336290331620600). {}
[INFO ] 2019-11-01T04:51:24,026Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=761336290331620600). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=bbcc7450-084e-4454-ada5-e241fcb8d0e9, invocation_timestamp=2019-11-01T04:51:24.024Z, session_id=bbcc7450-084e-4454-ada5-e241fcb8d0e9, session_timestamp=2019-11-01T04:51:24.024Z}
[INFO ] 2019-11-01T04:51:24,044Z [Mock network] flow.[10b5cb10-5d02-4ea6-9e70-1bc5af4b9e1e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,127Z [Mock network] flow.[10b5cb10-5d02-4ea6-9e70-1bc5af4b9e1e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,249Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:51:24,290Z [Mock network] flow.[450b25d0-8461-4736-80c5-5fa56ca11ea3].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4839897528231608197). {}
[INFO ] 2019-11-01T04:51:24,313Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4839897528231608197). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=24e26d73-5a24-4ca5-bc62-fd39210b51ec, invocation_timestamp=2019-11-01T04:51:24.312Z, session_id=24e26d73-5a24-4ca5-bc62-fd39210b51ec, session_timestamp=2019-11-01T04:51:24.312Z}
[INFO ] 2019-11-01T04:51:24,325Z [Mock network] flow.[e87d2434-850e-4875-b7f2-1532c46e5943].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,362Z [Mock network] flow.[e87d2434-850e-4875-b7f2-1532c46e5943].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,422Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:51:24,540Z [Mock network] flow.[450b25d0-8461-4736-80c5-5fa56ca11ea3].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,572Z [Mock network] flow.[450b25d0-8461-4736-80c5-5fa56ca11ea3].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,575Z [Mock network] flow.[450b25d0-8461-4736-80c5-5fa56ca11ea3].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,601Z [Mock network] flow.[450b25d0-8461-4736-80c5-5fa56ca11ea3].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,710Z [Mock network] flow.[e87d2434-850e-4875-b7f2-1532c46e5943].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-680993007328578554). {}
[INFO ] 2019-11-01T04:51:24,737Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-680993007328578554). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=637b1283-36c2-4acb-adce-bb809ce1647f, invocation_timestamp=2019-11-01T04:51:24.736Z, session_id=637b1283-36c2-4acb-adce-bb809ce1647f, session_timestamp=2019-11-01T04:51:24.736Z}
[INFO ] 2019-11-01T04:51:24,754Z [Mock network] flow.[4cd16f77-6a79-427d-b559-60a043bc7aaf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,829Z [Mock network] flow.[4cd16f77-6a79-427d-b559-60a043bc7aaf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,831Z [Mock network] flow.[4cd16f77-6a79-427d-b559-60a043bc7aaf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:24,868Z [Mock network] flow.[4cd16f77-6a79-427d-b559-60a043bc7aaf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:25,069Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:25,070Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:25,073Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2e71bf86 {}
[INFO ] 2019-11-01T04:51:25,084Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:25,085Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:25,086Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:25,149Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:25,160Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:25,161Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:25,164Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:25,172Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:25,173Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:25,321Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:25,486Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:25,575Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:25,576Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:25,584Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:51:25,588Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:25,589Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:25,590Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:25,590Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:25,591Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:25,601Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1FCC74DB8CFF1572CC6E692A82C2AED8A9A7B14A1BB91B9E94924852C025B34E, not inserting the second time {}
[INFO ] 2019-11-01T04:51:25,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:25,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:25,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:25,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:25,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:25,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:25,619Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:25,619Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:25,633Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:25,640Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c275306 {}
[INFO ] 2019-11-01T04:51:25,648Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:25,649Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:25,649Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:25,708Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:25,713Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:25,714Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:25,717Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:25,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:25,721Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:25,855Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:25,984Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:26,085Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:26,087Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:26,104Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:26,106Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:26,107Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:26,108Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:26,108Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:26,127Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 22CDB021F8A0E35EAEF7547E9C5D6D54ED8DBF66A9C249D6A314F35477092EBF, not inserting the second time {}
[INFO ] 2019-11-01T04:51:26,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:26,143Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:26,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:26,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:26,152Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:26,158Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:26,159Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:26,162Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:26,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:26,164Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:26,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:26,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:26,168Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:26,169Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:26,179Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:26,185Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@58343d0b {}
[INFO ] 2019-11-01T04:51:26,192Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:26,193Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:26,194Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:26,250Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:26,257Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:26,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:26,260Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:26,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:26,264Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:26,400Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:26,510Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:26,967Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:26,968Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:26,979Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:26,980Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:26,980Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:26,981Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:26,982Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:26,991Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 56B1585E1FA5CDD86C39E78BC7BF4B0C282BB75891465C673E2B899979606397, not inserting the second time {}
[INFO ] 2019-11-01T04:51:27,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:27,003Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:27,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,009Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:27,027Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:27,036Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,039Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,044Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,044Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,049Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:27,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:27,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,055Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:27,055Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:27,073Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:27,081Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@41011dc3 {}
[INFO ] 2019-11-01T04:51:27,090Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:27,091Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:27,095Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:27,172Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:27,178Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:27,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,181Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,184Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,309Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:27,440Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:27,530Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:27,531Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:27,542Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:27,543Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:27,544Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:27,545Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:27,545Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:27,567Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9AF84D4AA5F6777A3F4352ADCE31CA069E82CF90AFF11AB541DE02E26970D584, not inserting the second time {}
[INFO ] 2019-11-01T04:51:27,572Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:27,574Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:27,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,581Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:27,587Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:27,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,593Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,599Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,604Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:27,604Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,606Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:27,614Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:27,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:27,618Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:51:27,619Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:51:27,628Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:51:27,633Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@36766f0e {}
[INFO ] 2019-11-01T04:51:27,640Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:51:27,641Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:27,641Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:27,694Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:51:27,699Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:51:27,700Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:27,703Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:27,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:27,706Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:27,824Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:51:27,937Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:51:28,024Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:51:28,026Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:51:28,036Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:51:28,037Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:28,037Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:28,038Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:28,039Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:51:28,048Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D3742E0C394092AA3DF284823101419A2B306C5A475228B77F6C4AAC56B88E13, not inserting the second time {}
[INFO ] 2019-11-01T04:51:28,052Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:28,053Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:28,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583885160) {}
[INFO ] 2019-11-01T04:51:28,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,065Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:28,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:28,075Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:28,084Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583885714) {}
[INFO ] 2019-11-01T04:51:28,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,086Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:28,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:28,093Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:28,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583886258) {}
[INFO ] 2019-11-01T04:51:28,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,099Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:28,103Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,107Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:28,108Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:28,112Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583887178) {}
[INFO ] 2019-11-01T04:51:28,113Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,114Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:51:28,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:28,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:51:28,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583887700) {}
[INFO ] 2019-11-01T04:51:28,124Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:28,125Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:28,125Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:28,126Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:28,127Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:28,127Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:28,128Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:51:28,129Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:51:28,210Z [Mock network] flow.[d71160b4-0df2-4449-8e35-6137dc1c14ed].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3700508811887283785). {}
[INFO ] 2019-11-01T04:51:28,262Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3700508811887283785). {invocation_id=224e5f07-03a5-49b8-9625-4356b945be05, invocation_timestamp=2019-11-01T04:51:28.261Z, session_id=224e5f07-03a5-49b8-9625-4356b945be05, session_timestamp=2019-11-01T04:51:28.261Z}
[INFO ] 2019-11-01T04:51:28,406Z [Mock network] flow.[d71160b4-0df2-4449-8e35-6137dc1c14ed].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3097251458265095994). {}
[INFO ] 2019-11-01T04:51:28,418Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3097251458265095994). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=d760031c-59c8-4625-990a-2d3175e20ad8, invocation_timestamp=2019-11-01T04:51:28.415Z, session_id=d760031c-59c8-4625-990a-2d3175e20ad8, session_timestamp=2019-11-01T04:51:28.415Z}
[INFO ] 2019-11-01T04:51:28,462Z [Mock network] flow.[d71160b4-0df2-4449-8e35-6137dc1c14ed].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8627579501763778672). {}
[INFO ] 2019-11-01T04:51:28,489Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8627579501763778672). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=cbe54c3e-18c6-4087-804f-3848ddbbf384, invocation_timestamp=2019-11-01T04:51:28.489Z, session_id=cbe54c3e-18c6-4087-804f-3848ddbbf384, session_timestamp=2019-11-01T04:51:28.489Z}
[INFO ] 2019-11-01T04:51:28,622Z [Mock network] flow.[1e946c59-328e-4073-a1eb-c9f1b4a841d0].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8609679715965284279). {}
[INFO ] 2019-11-01T04:51:28,647Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8609679715965284279). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=0c72fe1c-353a-46cf-8f83-a35375f7ec6e, invocation_timestamp=2019-11-01T04:51:28.647Z, session_id=0c72fe1c-353a-46cf-8f83-a35375f7ec6e, session_timestamp=2019-11-01T04:51:28.647Z}
[INFO ] 2019-11-01T04:51:28,724Z [Mock network] flow.[67a59271-61e1-4dcf-a061-6f74424764b9].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=8039900558258693835). {}
[INFO ] 2019-11-01T04:51:28,756Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8039900558258693835). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=88bcb54f-6e83-4deb-a2c3-1f744d8e1fda, invocation_timestamp=2019-11-01T04:51:28.755Z, session_id=88bcb54f-6e83-4deb-a2c3-1f744d8e1fda, session_timestamp=2019-11-01T04:51:28.755Z}
[INFO ] 2019-11-01T04:51:28,769Z [Mock network] flow.[53500a70-f8e3-4fbc-9ad1-6f493fd795f5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:28,818Z [Mock network] flow.[53500a70-f8e3-4fbc-9ad1-6f493fd795f5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:28,897Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:51:28,920Z [Mock network] flow.[71e439b5-3a6a-4dac-b451-a26547a8a803].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=715192743137552405). {}
[INFO ] 2019-11-01T04:51:28,936Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=715192743137552405). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=fb98f4c3-2350-4c78-a4aa-b8506a0b9686, invocation_timestamp=2019-11-01T04:51:28.935Z, session_id=fb98f4c3-2350-4c78-a4aa-b8506a0b9686, session_timestamp=2019-11-01T04:51:28.935Z}
[INFO ] 2019-11-01T04:51:28,945Z [Mock network] flow.[d727373a-d7d2-419a-8607-87fbd88978ce].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:28,985Z [Mock network] flow.[d727373a-d7d2-419a-8607-87fbd88978ce].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:29,020Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:51:29,063Z [Mock network] flow.[71e439b5-3a6a-4dac-b451-a26547a8a803].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:29,089Z [Mock network] flow.[71e439b5-3a6a-4dac-b451-a26547a8a803].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:29,091Z [Mock network] flow.[71e439b5-3a6a-4dac-b451-a26547a8a803].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:29,117Z [Mock network] flow.[71e439b5-3a6a-4dac-b451-a26547a8a803].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:29,213Z [Mock network] flow.[d727373a-d7d2-419a-8607-87fbd88978ce].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=9215054946124554451). {}
[INFO ] 2019-11-01T04:51:29,232Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=9215054946124554451). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=fc248eed-0639-445a-8552-2d892256e385, invocation_timestamp=2019-11-01T04:51:29.231Z, session_id=fc248eed-0639-445a-8552-2d892256e385, session_timestamp=2019-11-01T04:51:29.231Z}
[INFO ] 2019-11-01T04:51:29,243Z [Mock network] flow.[e41cea86-757f-4a27-865d-9be5d163e333].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:29,290Z [Mock network] flow.[e41cea86-757f-4a27-865d-9be5d163e333].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:29,291Z [Mock network] flow.[e41cea86-757f-4a27-865d-9be5d163e333].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:51:29,316Z [Mock network] flow.[e41cea86-757f-4a27-865d-9be5d163e333].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:30,960Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-e7d12302-18eb-485e-9715-d979835f7164.jar {}
[INFO ] 2019-11-01T04:52:31,000Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-ba797f9e-496b-45ac-ade7-46a9c6e57f05.jar {}
[INFO ] 2019-11-01T04:52:31,063Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e7d12302-18eb-485e-9715-d979835f7164.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-ba797f9e-496b-45ac-ade7-46a9c6e57f05.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T04:52:31,109Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:31,118Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:31,145Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e7d12302-18eb-485e-9715-d979835f7164.jar {}
[INFO ] 2019-11-01T04:52:31,167Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-ba797f9e-496b-45ac-ade7-46a9c6e57f05.jar {}
[INFO ] 2019-11-01T04:52:31,202Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-11-01T04:52:31,253Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-11-01T04:52:31,297Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T04:52:31,435Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7917a661 {}
[INFO ] 2019-11-01T04:52:32,285Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:32,362Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:32,368Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:34,832Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:35,472Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:35,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:35,487Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:35,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:35,602Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:35,888Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:36,031Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:36,128Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:36,135Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:36,241Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:52:36,391Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:36,396Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:36,399Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:36,401Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:36,407Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:36,474Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4B69956B3A382881A2F2BB0806805987E9A9B5171B9FD15EA026F8020C747EE0, not inserting the second time {}
[INFO ] 2019-11-01T04:52:36,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:36,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:36,583Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:36,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:36,587Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:36,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:36,594Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:36,596Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:36,619Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:36,632Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@47a1794f {}
[INFO ] 2019-11-01T04:52:36,646Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:36,649Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:36,651Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:36,780Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:36,792Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:36,795Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:36,801Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:36,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:36,809Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:36,982Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:37,119Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:37,221Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:37,228Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:37,257Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:37,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:37,267Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:37,270Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:37,274Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:37,303Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5B223331CC195D72083CF4DADF9C3C15FF21452B3009D3B95894F92A409C9195, not inserting the second time {}
[INFO ] 2019-11-01T04:52:37,320Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:37,343Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:37,358Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:37,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:37,367Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:37,379Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:37,381Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:37,389Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:37,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:37,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:37,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:37,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:37,404Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:37,407Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:37,449Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:37,475Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@469f3203 {}
[INFO ] 2019-11-01T04:52:37,504Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:37,506Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:37,508Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:37,693Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:37,714Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:37,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:37,724Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:37,735Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:37,737Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:37,875Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:38,007Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:38,104Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:38,106Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:38,121Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:38,123Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:38,124Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:38,125Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:38,127Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:38,140Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4FD80BF8F8137EAE0917CBDC0656F68E81D894A7F7CA22EE54777FB9BD55B0DE, not inserting the second time {}
[INFO ] 2019-11-01T04:52:38,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:38,150Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:38,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583955475) {}
[INFO ] 2019-11-01T04:52:38,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:38,173Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:38,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:38,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:38,186Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:38,196Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583956795) {}
[INFO ] 2019-11-01T04:52:38,204Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:38,207Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:38,217Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:38,218Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:38,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:38,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:38,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:38,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:38,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583957716) {}
[INFO ] 2019-11-01T04:52:39,402Z [Mock network] flow.[389c7895-a83e-40a0-817a-6d66d658afc3].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=520664918274412500). {}
[INFO ] 2019-11-01T04:52:39,640Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=520664918274412500). {invocation_id=312c818d-71cd-4f45-ba5e-8d349009f403, invocation_timestamp=2019-11-01T04:52:39.633Z, session_id=312c818d-71cd-4f45-ba5e-8d349009f403, session_timestamp=2019-11-01T04:52:39.633Z}
[INFO ] 2019-11-01T04:52:39,944Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:39,946Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:39,952Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4c0fddd6 {}
[INFO ] 2019-11-01T04:52:39,965Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:39,967Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:39,968Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:40,081Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:40,089Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:40,090Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:40,094Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:40,104Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:40,106Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:40,313Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:40,446Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:40,539Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:40,541Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:40,555Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:52:40,563Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:40,566Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:40,567Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:40,569Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:40,570Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:40,593Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3D67174E7360986EBAF8C270068B282DFBACE2B2FE61C9BD320AC32A61DDF9F9, not inserting the second time {}
[INFO ] 2019-11-01T04:52:40,603Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:40,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:40,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:40,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:40,620Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:40,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:40,626Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:40,627Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:40,658Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:40,676Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7decf9de {}
[INFO ] 2019-11-01T04:52:40,694Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:40,699Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:40,701Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:40,879Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:40,899Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:40,901Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:40,907Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:40,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:40,923Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:41,062Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:41,186Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:41,279Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:41,281Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:41,295Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:41,296Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:41,297Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:41,299Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:41,300Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:41,313Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8418624D7A1064D3375ECB0F435A110573B502B5A2FFFCF2E4B4FD3ED3CDDD13, not inserting the second time {}
[INFO ] 2019-11-01T04:52:41,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:41,321Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:41,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:41,347Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:41,355Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:41,367Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:41,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:41,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:41,376Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:41,377Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:41,379Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:41,380Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:41,386Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:41,387Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:41,410Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:41,421Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@68ab06b5 {}
[INFO ] 2019-11-01T04:52:41,437Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:41,438Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:41,443Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:41,647Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:41,661Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:41,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:41,669Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:41,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:41,678Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:41,819Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:41,932Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:42,026Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:42,028Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:42,041Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:42,043Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:42,044Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:42,046Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:42,047Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:42,065Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BAEC4DCADC436D1A1479CFAE98E90B592BAC3960CCE926AB263E6AF9A7B14E07, not inserting the second time {}
[INFO ] 2019-11-01T04:52:42,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:42,074Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:42,088Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583960090) {}
[INFO ] 2019-11-01T04:52:42,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:42,099Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:42,109Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:42,110Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:42,112Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:42,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583960901) {}
[INFO ] 2019-11-01T04:52:42,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:42,123Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:42,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:42,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:42,137Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:42,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:42,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:42,143Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:42,146Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583961666) {}
[INFO ] 2019-11-01T04:52:42,337Z [Mock network] flow.[bfa96a90-b22f-4e54-ab65-8b0c4613326f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6995359634131847938). {}
[INFO ] 2019-11-01T04:52:42,450Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6995359634131847938). {invocation_id=45d392a6-9a3e-4e37-bd4a-9ad97dcdadff, invocation_timestamp=2019-11-01T04:52:42.446Z, session_id=45d392a6-9a3e-4e37-bd4a-9ad97dcdadff, session_timestamp=2019-11-01T04:52:42.446Z}
[INFO ] 2019-11-01T04:52:42,655Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:42,660Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:42,666Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6e78c38e {}
[INFO ] 2019-11-01T04:52:42,681Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:42,682Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:42,686Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:42,858Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:42,867Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:42,868Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:42,926Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:42,940Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:42,942Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:43,093Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:43,214Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:43,304Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:43,306Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:43,316Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:52:43,320Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:43,322Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:43,323Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:43,324Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:43,325Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:43,337Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 21CC100F984226BA639D2194762D6A12716FF7629FB76FB97B10A58D263C06BF, not inserting the second time {}
[INFO ] 2019-11-01T04:52:43,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:43,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:43,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:43,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:43,358Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:43,359Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:43,361Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:43,362Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:43,376Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:43,391Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@111227a1 {}
[INFO ] 2019-11-01T04:52:43,408Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:43,409Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:43,410Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:43,536Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:43,548Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:43,549Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:43,555Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:43,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:43,562Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:43,686Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:43,800Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:43,948Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:43,949Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:43,962Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:43,963Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:43,964Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:43,965Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:43,966Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:43,977Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1C6D06515BC4B9EA61BC3228DC6C62E8F917AAF0F22D2760BA9ECA4EA291974C, not inserting the second time {}
[INFO ] 2019-11-01T04:52:43,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:43,984Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:43,998Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:43,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:44,001Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:44,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:44,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:44,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:44,013Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:44,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:44,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:44,016Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:44,018Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:44,019Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:44,031Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:44,038Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c58df2 {}
[INFO ] 2019-11-01T04:52:44,045Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:44,046Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:44,047Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:44,147Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:44,154Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:44,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,159Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:44,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,164Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,297Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:44,427Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:44,515Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:44,517Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:44,531Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:44,532Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:44,533Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:44,534Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:44,535Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:44,546Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2682389E2DC55BAF6274A62F1152D579874D38BE502DD6855CDA3F2FC87A6B81, not inserting the second time {}
[INFO ] 2019-11-01T04:52:44,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:44,557Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:44,572Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583962868) {}
[INFO ] 2019-11-01T04:52:44,575Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,582Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:44,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:44,601Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:44,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583963549) {}
[INFO ] 2019-11-01T04:52:44,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,618Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:44,627Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,635Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:44,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,646Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[INFO ] 2019-11-01T04:52:44,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:44,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583964155) {}
[WARN ] 2019-11-01T04:52:44,704Z [Mock network] flow.[b278ba83-9f41-4cc0-8704-104c12d20350].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 2B7509D52404EF3CD493A2F57945CCC52BE1DCA710A9FDCE8E6A515ADC0733E8
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T04:52:44,802Z [Mock network] flow.[a0009fd1-96d1-40c0-9a36-5598758a5308].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6663520228221655000). {}
[INFO ] 2019-11-01T04:52:44,957Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6663520228221655000). {invocation_id=594cbf33-c1d9-4410-93cf-35b63013a1a5, invocation_timestamp=2019-11-01T04:52:44.957Z, session_id=594cbf33-c1d9-4410-93cf-35b63013a1a5, session_timestamp=2019-11-01T04:52:44.957Z}
[INFO ] 2019-11-01T04:52:45,185Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:45,186Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:45,190Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3b83e5af {}
[INFO ] 2019-11-01T04:52:45,200Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:45,201Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:45,202Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:45,277Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:45,283Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:45,288Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:45,291Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:45,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:45,305Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:45,433Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:45,561Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:45,677Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:45,679Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:45,688Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:52:45,692Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:45,693Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:45,694Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:45,695Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:45,696Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:45,715Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 97C7B1D8FF29BB0689BAD05D6D47243FE2B602031E59B549BCEB3A2A113642B6, not inserting the second time {}
[INFO ] 2019-11-01T04:52:45,721Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:45,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:45,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:45,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:45,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:45,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:45,731Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:45,732Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:45,745Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:45,752Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@195dc4a2 {}
[INFO ] 2019-11-01T04:52:45,764Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:45,765Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:45,766Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:45,889Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:45,896Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:45,897Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:45,900Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:45,903Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:45,904Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:46,045Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:46,163Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:46,263Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:46,265Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:46,277Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:46,278Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:46,279Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:46,280Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:46,281Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:46,292Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CE1E9A3DE5D1E769C1C1E624E27B22B314402EA457E55F559B206CAD08EC47CF, not inserting the second time {}
[INFO ] 2019-11-01T04:52:46,296Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:46,302Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:46,315Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:46,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:46,318Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:46,327Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:46,329Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:46,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:46,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:46,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:46,337Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:46,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:46,341Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:46,342Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:46,365Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:46,380Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2c36224b {}
[INFO ] 2019-11-01T04:52:46,393Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:46,394Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:46,395Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:46,560Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:46,570Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:46,571Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:46,573Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:46,578Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:46,579Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:46,723Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:46,860Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:46,958Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:46,961Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:46,974Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:46,976Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:46,976Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:46,977Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:46,978Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:46,990Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0056083E2CE73FB8B57A19CABBE583F137B96B64C81652ACA011C599DED8023E, not inserting the second time {}
[INFO ] 2019-11-01T04:52:46,996Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:46,998Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:47,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,021Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,031Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,039Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:47,041Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:47,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,056Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,063Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,067Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:47,068Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,068Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,069Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:47,070Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,072Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:47,073Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:47,084Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:47,091Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1afe7eb9 {}
[INFO ] 2019-11-01T04:52:47,100Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:47,101Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:47,102Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:47,172Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:47,178Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:47,179Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,182Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,186Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,361Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:47,487Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:47,579Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:47,581Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:47,593Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:47,595Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:47,596Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:47,597Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:47,597Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:47,611Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 571EBBFD70161FA9980494FC0FB64F24318C3182843D912D70DB6FC70C9782AB, not inserting the second time {}
[INFO ] 2019-11-01T04:52:47,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:47,617Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:47,625Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,627Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,633Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:47,634Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,639Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:47,640Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,642Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,649Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:47,655Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,656Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:47,667Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,667Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:47,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:47,672Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:47,673Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:47,684Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:47,690Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@93222e9 {}
[INFO ] 2019-11-01T04:52:47,696Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:47,697Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:47,697Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:47,755Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:47,761Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:47,762Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:47,765Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:47,768Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:47,769Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:47,903Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:48,075Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:48,165Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:48,168Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:48,184Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:48,190Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:48,193Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:48,194Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:48,195Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:48,207Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1D650085DC4681997CD6BD5C622EDA4C5FFD8A3906CC905512B288F4B8047D4D, not inserting the second time {}
[INFO ] 2019-11-01T04:52:48,213Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:48,218Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:48,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583965288) {}
[INFO ] 2019-11-01T04:52:48,226Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,227Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:48,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:48,234Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:48,240Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583965897) {}
[INFO ] 2019-11-01T04:52:48,240Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,242Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:48,247Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:48,249Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:48,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583966571) {}
[INFO ] 2019-11-01T04:52:48,255Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,256Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:48,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,262Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:48,264Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:48,270Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583967179) {}
[INFO ] 2019-11-01T04:52:48,272Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,273Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:48,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,283Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,286Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:48,287Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,287Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,292Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:48,293Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583967762) {}
[INFO ] 2019-11-01T04:52:48,302Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:48,306Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:48,308Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:48,309Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:48,310Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:48,311Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:48,312Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:48,313Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:48,428Z [Mock network] flow.[3ea9c6e3-6435-46d1-b110-a8ada5037220].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7598005763517932067). {}
[INFO ] 2019-11-01T04:52:48,499Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7598005763517932067). {invocation_id=f4a436ec-da52-4b73-9711-05e18c5f7fe0, invocation_timestamp=2019-11-01T04:52:48.494Z, session_id=f4a436ec-da52-4b73-9711-05e18c5f7fe0, session_timestamp=2019-11-01T04:52:48.494Z}
[INFO ] 2019-11-01T04:52:48,677Z [Mock network] flow.[3ea9c6e3-6435-46d1-b110-a8ada5037220].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2848976766728291806). {}
[INFO ] 2019-11-01T04:52:48,700Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2848976766728291806). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=36884b42-e420-45c5-8dd6-cf79b31552f4, invocation_timestamp=2019-11-01T04:52:48.700Z, session_id=36884b42-e420-45c5-8dd6-cf79b31552f4, session_timestamp=2019-11-01T04:52:48.700Z}
[INFO ] 2019-11-01T04:52:48,798Z [Mock network] flow.[3ea9c6e3-6435-46d1-b110-a8ada5037220].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8583058709344883475). {}
[INFO ] 2019-11-01T04:52:48,820Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8583058709344883475). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b197190f-ae90-475c-8b15-7993d1a51bb6, invocation_timestamp=2019-11-01T04:52:48.819Z, session_id=b197190f-ae90-475c-8b15-7993d1a51bb6, session_timestamp=2019-11-01T04:52:48.819Z}
[INFO ] 2019-11-01T04:52:48,915Z [Mock network] flow.[850a390a-4e36-4a80-9282-e549c11d4cc1].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5238786338807469919). {}
[INFO ] 2019-11-01T04:52:48,943Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5238786338807469919). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=094a937d-45a5-47aa-8c61-f5965399fa57, invocation_timestamp=2019-11-01T04:52:48.942Z, session_id=094a937d-45a5-47aa-8c61-f5965399fa57, session_timestamp=2019-11-01T04:52:48.942Z}
[INFO ] 2019-11-01T04:52:49,056Z [Mock network] flow.[c9c98d6c-df6b-43aa-8c19-72f1c804f9c2].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-7751071695887037832). {}
[INFO ] 2019-11-01T04:52:49,096Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7751071695887037832). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=6fca8005-8985-427c-b4f5-05ae4a1e14dd, invocation_timestamp=2019-11-01T04:52:49.095Z, session_id=6fca8005-8985-427c-b4f5-05ae4a1e14dd, session_timestamp=2019-11-01T04:52:49.095Z}
[INFO ] 2019-11-01T04:52:49,108Z [Mock network] flow.[834820cc-5fba-4088-9eac-7dddfc43ca91].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,175Z [Mock network] flow.[834820cc-5fba-4088-9eac-7dddfc43ca91].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,287Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:52:49,329Z [Mock network] flow.[4a0c11c8-ead2-43d5-90f7-a46c69bc1b50].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5781622217464962008). {}
[INFO ] 2019-11-01T04:52:49,353Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5781622217464962008). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=33c7f861-0dde-4074-8843-5ad0f32b12e7, invocation_timestamp=2019-11-01T04:52:49.352Z, session_id=33c7f861-0dde-4074-8843-5ad0f32b12e7, session_timestamp=2019-11-01T04:52:49.352Z}
[INFO ] 2019-11-01T04:52:49,371Z [Mock network] flow.[a5b77c94-baf8-4543-91ea-8e8142b6216e].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,430Z [Mock network] flow.[a5b77c94-baf8-4543-91ea-8e8142b6216e].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,482Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:52:49,572Z [Mock network] flow.[4a0c11c8-ead2-43d5-90f7-a46c69bc1b50].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,604Z [Mock network] flow.[4a0c11c8-ead2-43d5-90f7-a46c69bc1b50].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,606Z [Mock network] flow.[4a0c11c8-ead2-43d5-90f7-a46c69bc1b50].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,672Z [Mock network] flow.[4a0c11c8-ead2-43d5-90f7-a46c69bc1b50].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,772Z [Mock network] flow.[a5b77c94-baf8-4543-91ea-8e8142b6216e].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7827638045836642729). {}
[INFO ] 2019-11-01T04:52:49,795Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7827638045836642729). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=c61e9569-3849-464f-b0b9-ccbc117b98a9, invocation_timestamp=2019-11-01T04:52:49.794Z, session_id=c61e9569-3849-464f-b0b9-ccbc117b98a9, session_timestamp=2019-11-01T04:52:49.794Z}
[INFO ] 2019-11-01T04:52:49,810Z [Mock network] flow.[9afab567-b3e7-4676-bab1-a7449a8b8c65].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,877Z [Mock network] flow.[9afab567-b3e7-4676-bab1-a7449a8b8c65].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,879Z [Mock network] flow.[9afab567-b3e7-4676-bab1-a7449a8b8c65].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:49,921Z [Mock network] flow.[9afab567-b3e7-4676-bab1-a7449a8b8c65].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:50,141Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:50,142Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:50,150Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@22a117da {}
[INFO ] 2019-11-01T04:52:50,160Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:50,161Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:50,162Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:50,286Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:50,292Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:50,293Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:50,296Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:50,301Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:50,302Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:50,438Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:50,560Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:50,648Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:50,649Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:50,657Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:52:50,661Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:50,662Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:50,663Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:50,664Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:50,665Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:50,705Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9CA6EB7D9DBBD394459BB0F91F3A559196FD6B42AEEBB7E3B9A7787E3F0259FB, not inserting the second time {}
[INFO ] 2019-11-01T04:52:50,712Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:50,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:50,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:50,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:50,718Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:50,718Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:50,720Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:50,721Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:50,736Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:50,745Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@43672b23 {}
[INFO ] 2019-11-01T04:52:50,754Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:50,755Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:50,756Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:50,862Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:50,876Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:50,877Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:50,880Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:50,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:50,887Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:51,016Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:51,144Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:51,232Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:51,233Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:51,248Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:51,249Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:51,249Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:51,250Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:51,251Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:51,276Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 342690ECC71F02B01723575BD415A8371D6F98F655D8D8F88007CBB25D2538F6, not inserting the second time {}
[INFO ] 2019-11-01T04:52:51,293Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:51,295Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:51,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:51,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:51,306Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:51,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:51,317Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:51,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:51,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:51,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:51,323Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:51,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:51,327Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:51,328Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:51,347Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:51,358Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4f458ee6 {}
[INFO ] 2019-11-01T04:52:51,374Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:51,377Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:51,378Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:51,451Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:51,457Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:51,458Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,461Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:51,463Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,464Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,637Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:51,752Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:51,846Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:51,847Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:51,858Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:51,859Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:51,860Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:51,860Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:51,861Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:51,871Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AB5B97A180AA2A9196F22400EB8BF51A751CC92827D658C463196AF2FBE9A06C, not inserting the second time {}
[INFO ] 2019-11-01T04:52:51,876Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:51,877Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:51,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:51,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,887Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:51,892Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,892Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:51,893Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:51,897Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:51,898Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,899Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:51,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,907Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:51,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:51,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:51,911Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:51,912Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:51,922Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:51,928Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6d37e35a {}
[INFO ] 2019-11-01T04:52:51,936Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:51,937Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:51,937Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:51,993Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:51,998Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:51,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,002Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,004Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,005Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,132Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:52,263Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:52,376Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:52,378Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:52,392Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:52,393Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:52,394Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:52,395Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:52,398Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:52,408Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 49D5C829324DEB151DBDC8029D838CAF5D446AEE998F69936F9E25C9E9FBDBF2, not inserting the second time {}
[INFO ] 2019-11-01T04:52:52,412Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:52,413Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:52,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,426Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,436Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,437Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:52,438Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:52,443Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,444Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,448Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,449Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:52,450Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,454Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:52,454Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,456Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,459Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,460Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:52,463Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,464Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,464Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:52,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,467Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:52,467Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:52,478Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:52,483Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6a9b6f45 {}
[INFO ] 2019-11-01T04:52:52,492Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:52,493Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:52,493Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:52,559Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:52,569Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:52,575Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,580Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,582Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,700Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:52,810Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:52,900Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:52,902Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:52,912Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:52,912Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:52,913Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:52,914Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:52,914Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:52,924Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B597B250BA3997472259A9E68684E783798130F3A5801BCE6AAA1AAAB52144A2, not inserting the second time {}
[INFO ] 2019-11-01T04:52:52,928Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:52,929Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,940Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583970293) {}
[INFO ] 2019-11-01T04:52:52,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,942Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:52,948Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583970877) {}
[INFO ] 2019-11-01T04:52:52,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,954Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:52,961Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583971458) {}
[INFO ] 2019-11-01T04:52:52,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,967Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,977Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,978Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583971999) {}
[INFO ] 2019-11-01T04:52:52,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,985Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:52,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:52,992Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,992Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:52,994Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583972574) {}
[INFO ] 2019-11-01T04:52:52,994Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:52,995Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:52,995Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:52,996Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:52,997Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:52,997Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:52,998Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:52,999Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:53,062Z [Mock network] flow.[287b8e51-1731-48e7-a68a-6362a0735a96].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7630870086896102969). {}
[INFO ] 2019-11-01T04:52:53,198Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7630870086896102969). {invocation_id=7ed2a77c-6033-46d7-9ec1-7e75076f66b9, invocation_timestamp=2019-11-01T04:52:53.196Z, session_id=7ed2a77c-6033-46d7-9ec1-7e75076f66b9, session_timestamp=2019-11-01T04:52:53.196Z}
[INFO ] 2019-11-01T04:52:53,332Z [Mock network] flow.[287b8e51-1731-48e7-a68a-6362a0735a96].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-735620626578722601). {}
[INFO ] 2019-11-01T04:52:53,349Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-735620626578722601). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=9ae2b6e1-209c-4d94-92a0-6a529966c072, invocation_timestamp=2019-11-01T04:52:53.341Z, session_id=9ae2b6e1-209c-4d94-92a0-6a529966c072, session_timestamp=2019-11-01T04:52:53.341Z}
[INFO ] 2019-11-01T04:52:53,399Z [Mock network] flow.[287b8e51-1731-48e7-a68a-6362a0735a96].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5473877656705283328). {}
[INFO ] 2019-11-01T04:52:53,415Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5473877656705283328). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=2b2d2e44-a222-4543-a739-eb0daf894600, invocation_timestamp=2019-11-01T04:52:53.414Z, session_id=2b2d2e44-a222-4543-a739-eb0daf894600, session_timestamp=2019-11-01T04:52:53.414Z}
[INFO ] 2019-11-01T04:52:53,489Z [Mock network] flow.[ca5fe157-e36d-48a8-b80c-c8cb5cfdd496].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1749379524506953398). {}
[INFO ] 2019-11-01T04:52:53,518Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1749379524506953398). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=423eab4b-930c-4c71-abd1-caae7958458a, invocation_timestamp=2019-11-01T04:52:53.517Z, session_id=423eab4b-930c-4c71-abd1-caae7958458a, session_timestamp=2019-11-01T04:52:53.517Z}
[INFO ] 2019-11-01T04:52:53,621Z [Mock network] flow.[f5cdf19f-0b46-449a-87eb-d6cff361b81f].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-1998840699368422340). {}
[INFO ] 2019-11-01T04:52:53,660Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1998840699368422340). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=24af6d2d-7fb4-4e4b-889c-3da6015aee92, invocation_timestamp=2019-11-01T04:52:53.659Z, session_id=24af6d2d-7fb4-4e4b-889c-3da6015aee92, session_timestamp=2019-11-01T04:52:53.659Z}
[INFO ] 2019-11-01T04:52:53,680Z [Mock network] flow.[15ed489f-234f-4cbd-b100-2170516f5251].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:53,733Z [Mock network] flow.[15ed489f-234f-4cbd-b100-2170516f5251].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:53,798Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:52:53,831Z [Mock network] flow.[71af5c70-b74d-4b72-b805-1e372bc362a5].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2734549829956068299). {}
[INFO ] 2019-11-01T04:52:53,847Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2734549829956068299). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=3718d43d-6130-4320-9a54-ef1089ac2541, invocation_timestamp=2019-11-01T04:52:53.846Z, session_id=3718d43d-6130-4320-9a54-ef1089ac2541, session_timestamp=2019-11-01T04:52:53.846Z}
[INFO ] 2019-11-01T04:52:53,857Z [Mock network] flow.[25d27e5b-d909-4357-9f37-3f70f0dee602].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:53,909Z [Mock network] flow.[25d27e5b-d909-4357-9f37-3f70f0dee602].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:53,997Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:52:54,050Z [Mock network] flow.[71af5c70-b74d-4b72-b805-1e372bc362a5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:54,092Z [Mock network] flow.[71af5c70-b74d-4b72-b805-1e372bc362a5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:54,094Z [Mock network] flow.[71af5c70-b74d-4b72-b805-1e372bc362a5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:54,129Z [Mock network] flow.[71af5c70-b74d-4b72-b805-1e372bc362a5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:54,211Z [Mock network] flow.[25d27e5b-d909-4357-9f37-3f70f0dee602].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1042199521559366613). {}
[INFO ] 2019-11-01T04:52:54,231Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1042199521559366613). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=b9e0b9ad-1563-4190-983d-00770860dba2, invocation_timestamp=2019-11-01T04:52:54.231Z, session_id=b9e0b9ad-1563-4190-983d-00770860dba2, session_timestamp=2019-11-01T04:52:54.231Z}
[INFO ] 2019-11-01T04:52:54,241Z [Mock network] flow.[6974e6b6-4ecc-4d67-95c6-5d22d3365c63].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:54,310Z [Mock network] flow.[6974e6b6-4ecc-4d67-95c6-5d22d3365c63].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:54,312Z [Mock network] flow.[6974e6b6-4ecc-4d67-95c6-5d22d3365c63].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:54,343Z [Mock network] flow.[6974e6b6-4ecc-4d67-95c6-5d22d3365c63].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:54,487Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:54,488Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:54,492Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@739463bc {}
[INFO ] 2019-11-01T04:52:54,500Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:54,501Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:54,502Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:54,574Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:54,580Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:54,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:54,584Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:54,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:54,590Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:54,764Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:54,879Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:54,967Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:54,968Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:54,976Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T04:52:54,979Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:54,980Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:54,981Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:54,981Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:54,983Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:54,992Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 37D8F2816E05CB18641BF80903C8039166480D0025AF62C1B970913974FA8A46, not inserting the second time {}
[INFO ] 2019-11-01T04:52:54,996Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:54,998Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:54,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:55,000Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:55,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:55,009Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:55,012Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:55,015Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:55,030Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:55,036Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@31b2a6c1 {}
[INFO ] 2019-11-01T04:52:55,042Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:55,043Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:55,044Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:55,129Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:55,134Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:55,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:55,137Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:55,140Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:55,140Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:55,263Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:55,377Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:55,470Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:55,472Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:55,482Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:55,483Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:55,483Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:55,484Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:55,485Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:55,494Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2685E12903B8B1CC1678AA21B9051F7B836DF7EF6B331979604074019A5087E1, not inserting the second time {}
[INFO ] 2019-11-01T04:52:55,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:55,500Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:55,504Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:55,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:55,506Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:55,510Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:55,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:55,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:55,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:55,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:55,519Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:55,520Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:55,522Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:55,562Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:55,578Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:55,584Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@433a90c6 {}
[INFO ] 2019-11-01T04:52:55,591Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:55,592Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:55,592Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:55,659Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:55,667Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:55,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:55,672Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:55,674Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:55,675Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:55,797Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:55,906Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:55,996Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:55,997Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:56,007Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:56,008Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:56,009Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:56,010Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:56,010Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:56,020Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 41D7DD58E9DFE86CBB89C1E8CE13D8D32A51DA383890A44C56A62EEF318D5337, not inserting the second time {}
[INFO ] 2019-11-01T04:52:56,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:56,025Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,034Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:56,042Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,046Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:56,053Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,056Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:56,057Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,058Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:56,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:56,075Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,077Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:56,078Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:56,097Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:56,104Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@30ba76a6 {}
[INFO ] 2019-11-01T04:52:56,110Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:56,111Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:56,112Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:56,192Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:56,200Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:56,201Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,204Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,207Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,208Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,361Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:56,490Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:56,577Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:56,580Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:56,594Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:56,595Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:56,596Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:56,597Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:56,597Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:56,607Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F2974C3D41578B927C263F94E768F0EBD134B0973B2909CAE6A455D11A22C6B3, not inserting the second time {}
[INFO ] 2019-11-01T04:52:56,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:56,614Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:56,619Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,620Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:56,625Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:56,630Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,631Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,635Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,637Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,640Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:56,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,642Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:56,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:56,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:56,656Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T04:52:56,657Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T04:52:56,674Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T04:52:56,685Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@486f1da1 {}
[INFO ] 2019-11-01T04:52:56,699Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T04:52:56,700Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:56,701Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:56,776Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T04:52:56,781Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T04:52:56,782Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:56,785Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:56,787Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:56,788Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:56,920Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment C05E9C91C7440473A3669DD2BC4F15A141EB966C140E1E49C496B2A85EB846E8 {}
[INFO ] 2019-11-01T04:52:57,034Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DDCD639EB9A48B4A9D499BD9DB932F0059ED2D89FE15E9630799E0DCAE6CFC22 {}
[INFO ] 2019-11-01T04:52:57,122Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T04:52:57,124Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T04:52:57,133Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T04:52:57,134Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:57,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:57,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:57,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T04:52:57,151Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 63B5DD788EFFF88AB5DF45F925041F9488C99221E9A2456988189204EC44A173, not inserting the second time {}
[INFO ] 2019-11-01T04:52:57,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:57,161Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:57,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572583974581) {}
[INFO ] 2019-11-01T04:52:57,167Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,168Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:57,172Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,203Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:57,204Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:57,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572583975135) {}
[INFO ] 2019-11-01T04:52:57,214Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,219Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:57,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:57,230Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:57,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572583975668) {}
[INFO ] 2019-11-01T04:52:57,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,243Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:57,247Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:57,249Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:57,253Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572583976201) {}
[INFO ] 2019-11-01T04:52:57,253Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,254Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T04:52:57,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,259Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:57,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,262Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,262Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T04:52:57,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572583976782) {}
[INFO ] 2019-11-01T04:52:57,264Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:57,264Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:57,265Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:57,266Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:57,267Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:57,267Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:57,268Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T04:52:57,269Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T04:52:57,323Z [Mock network] flow.[f23e2b04-b5af-4628-a436-ecca34c39e75].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2919257462871353440). {}
[INFO ] 2019-11-01T04:52:57,385Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2919257462871353440). {invocation_id=c88bd846-cba3-4054-aa81-f887a516532e, invocation_timestamp=2019-11-01T04:52:57.385Z, session_id=c88bd846-cba3-4054-aa81-f887a516532e, session_timestamp=2019-11-01T04:52:57.385Z}
[INFO ] 2019-11-01T04:52:57,527Z [Mock network] flow.[f23e2b04-b5af-4628-a436-ecca34c39e75].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-532868105819839124). {}
[INFO ] 2019-11-01T04:52:57,538Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-532868105819839124). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=d1dde7c5-8d68-4a3f-947b-735fd0ff4999, invocation_timestamp=2019-11-01T04:52:57.537Z, session_id=d1dde7c5-8d68-4a3f-947b-735fd0ff4999, session_timestamp=2019-11-01T04:52:57.537Z}
[INFO ] 2019-11-01T04:52:57,579Z [Mock network] flow.[f23e2b04-b5af-4628-a436-ecca34c39e75].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8202816552717146560). {}
[INFO ] 2019-11-01T04:52:57,600Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8202816552717146560). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=800ded48-a3f4-4f96-a2c0-0dc80b9eed76, invocation_timestamp=2019-11-01T04:52:57.598Z, session_id=800ded48-a3f4-4f96-a2c0-0dc80b9eed76, session_timestamp=2019-11-01T04:52:57.598Z}
[INFO ] 2019-11-01T04:52:57,693Z [Mock network] flow.[96286a2b-8bb3-4f14-acd6-04f2a6da0131].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7249989694908662951). {}
[INFO ] 2019-11-01T04:52:57,753Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7249989694908662951). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=9422d8f2-34e8-4b98-8217-2228be2c1182, invocation_timestamp=2019-11-01T04:52:57.753Z, session_id=9422d8f2-34e8-4b98-8217-2228be2c1182, session_timestamp=2019-11-01T04:52:57.753Z}
[INFO ] 2019-11-01T04:52:57,821Z [Mock network] flow.[28cdbb98-ba27-4ba8-bfb6-4da1c3ccd44a].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=5551097575822916073). {}
[INFO ] 2019-11-01T04:52:57,852Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5551097575822916073). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=9a9f1802-f9a7-4330-9a51-346f1a71cccb, invocation_timestamp=2019-11-01T04:52:57.852Z, session_id=9a9f1802-f9a7-4330-9a51-346f1a71cccb, session_timestamp=2019-11-01T04:52:57.852Z}
[INFO ] 2019-11-01T04:52:57,870Z [Mock network] flow.[beeede6e-bf4f-4db3-9747-0153abe6b2a8].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:57,925Z [Mock network] flow.[beeede6e-bf4f-4db3-9747-0153abe6b2a8].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:57,974Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:52:57,990Z [Mock network] flow.[17f94b52-5e2d-4b32-8a9d-427da9b70da1].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6055096128842287812). {}
[INFO ] 2019-11-01T04:52:57,999Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6055096128842287812). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=ea64d458-7077-41dc-a7f3-a396659685c4, invocation_timestamp=2019-11-01T04:52:57.999Z, session_id=ea64d458-7077-41dc-a7f3-a396659685c4, session_timestamp=2019-11-01T04:52:57.999Z}
[INFO ] 2019-11-01T04:52:58,006Z [Mock network] flow.[ffb184b5-6425-4abc-b1a3-120e6255ce60].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:58,037Z [Mock network] flow.[ffb184b5-6425-4abc-b1a3-120e6255ce60].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:58,106Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T04:52:58,153Z [Mock network] flow.[17f94b52-5e2d-4b32-8a9d-427da9b70da1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:58,176Z [Mock network] flow.[17f94b52-5e2d-4b32-8a9d-427da9b70da1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:58,178Z [Mock network] flow.[17f94b52-5e2d-4b32-8a9d-427da9b70da1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:58,200Z [Mock network] flow.[17f94b52-5e2d-4b32-8a9d-427da9b70da1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:58,264Z [Mock network] flow.[ffb184b5-6425-4abc-b1a3-120e6255ce60].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5226938904392392853). {}
[INFO ] 2019-11-01T04:52:58,284Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5226938904392392853). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=7cad6fca-887b-40f6-8dc9-29e955abc131, invocation_timestamp=2019-11-01T04:52:58.283Z, session_id=7cad6fca-887b-40f6-8dc9-29e955abc131, session_timestamp=2019-11-01T04:52:58.283Z}
[INFO ] 2019-11-01T04:52:58,294Z [Mock network] flow.[fcfdb4a3-be1c-4b3d-876a-157cd4bfc7b1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:58,369Z [Mock network] flow.[fcfdb4a3-be1c-4b3d-876a-157cd4bfc7b1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:58,370Z [Mock network] flow.[fcfdb4a3-be1c-4b3d-876a-157cd4bfc7b1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T04:52:58,391Z [Mock network] flow.[fcfdb4a3-be1c-4b3d-876a-157cd4bfc7b1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
