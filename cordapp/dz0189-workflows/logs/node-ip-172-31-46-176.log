[INFO ] 2019-10-31T04:53:49,577Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-56913c97-07e6-4d9f-b14c-7f1a87b45887.jar {}
[INFO ] 2019-10-31T04:53:49,605Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-1f25c965-19e0-4975-af0c-ab2efa8a12cd.jar {}
[INFO ] 2019-10-31T04:53:49,648Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-56913c97-07e6-4d9f-b14c-7f1a87b45887.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-1f25c965-19e0-4975-af0c-ab2efa8a12cd.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T04:53:49,688Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:53:49,692Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:53:49,708Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-56913c97-07e6-4d9f-b14c-7f1a87b45887.jar {}
[INFO ] 2019-10-31T04:53:49,729Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-1f25c965-19e0-4975-af0c-ab2efa8a12cd.jar {}
[INFO ] 2019-10-31T04:53:49,768Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T04:53:49,825Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T04:53:49,878Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T04:53:50,072Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3606fa77 {}
[INFO ] 2019-10-31T04:53:50,922Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:53:50,989Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:50,995Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:53,553Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:54,176Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:53:54,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:54,191Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:54,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:54,316Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:54,586Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:53:54,722Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:53:54,822Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:53:54,830Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:53:54,927Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T04:53:55,100Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:53:55,103Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:53:55,110Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:55,113Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:55,118Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:53:55,184Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E13172DAE1BBD53689E5EB964C1B8A78FD9DA9278627A3131F1AF38A1CD2074E, not inserting the second time {}
[INFO ] 2019-10-31T04:53:55,289Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:55,331Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:53:55,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:55,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:55,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:53:55,348Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:55,356Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:53:55,363Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:53:55,407Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:53:55,437Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7e955a97 {}
[INFO ] 2019-10-31T04:53:55,461Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:53:55,465Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:55,467Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:55,628Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:55,638Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:53:55,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:55,648Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:55,653Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:55,655Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:55,789Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:53:55,928Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:53:56,024Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:53:56,033Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:53:56,062Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:53:56,066Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:53:56,069Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:56,074Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:56,076Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:53:56,100Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F55074341F567DCEE0E9CB7C6A1401C45FF6D13946647FFF741F5B4CE4743866, not inserting the second time {}
[INFO ] 2019-10-31T04:53:56,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:56,124Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:56,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:56,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:56,156Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:56,168Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:56,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:56,177Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:53:56,179Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:56,181Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:56,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:53:56,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:56,189Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:53:56,191Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:53:56,215Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:53:56,226Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5d56dc76 {}
[INFO ] 2019-10-31T04:53:56,246Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:53:56,252Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:56,256Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:56,468Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:56,478Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:53:56,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:56,484Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:56,489Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:56,491Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:56,646Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:53:56,780Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:53:56,875Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:53:56,878Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:53:56,899Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:53:56,901Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:53:56,902Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:56,912Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:56,913Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:53:56,931Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EECB18CCAB89F16B3CF25568796515E59F7DE8E5D5AEA919205B20BAE3EF7737, not inserting the second time {}
[INFO ] 2019-10-31T04:53:56,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:56,949Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:56,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497634178) {}
[INFO ] 2019-10-31T04:53:56,961Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:56,963Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:56,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:56,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:56,977Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:56,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497635642) {}
[INFO ] 2019-10-31T04:53:56,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:56,999Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:57,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:57,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:57,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:53:57,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:57,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:57,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:53:57,021Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497636479) {}
[INFO ] 2019-10-31T04:53:58,051Z [Mock network] flow.[a9cc9907-4e2a-4715-adca-7f72578346df].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5236926883629665123). {}
[INFO ] 2019-10-31T04:53:58,217Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5236926883629665123). {invocation_id=b7ef55b7-8974-44d7-9883-d88b40d0c4ed, invocation_timestamp=2019-10-31T04:53:58.210Z, session_id=b7ef55b7-8974-44d7-9883-d88b40d0c4ed, session_timestamp=2019-10-31T04:53:58.210Z}
[INFO ] 2019-10-31T04:53:58,601Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:53:58,607Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:53:58,619Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@74c97e82 {}
[INFO ] 2019-10-31T04:53:58,635Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:53:58,637Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:58,638Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:58,791Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:58,800Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:53:58,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:53:58,806Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:58,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:53:58,825Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:53:58,961Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:53:59,108Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:53:59,201Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:53:59,203Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:53:59,213Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T04:53:59,218Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:53:59,219Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:53:59,220Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:59,222Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:59,223Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:53:59,236Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 099C50CED3204A6E5B536F0CCA3969EEE9B0D6C928F855C544BC30FDC7B8CB97, not inserting the second time {}
[INFO ] 2019-10-31T04:53:59,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:53:59,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:53:59,256Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:53:59,257Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:53:59,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:53:59,259Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:53:59,262Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:53:59,269Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:53:59,294Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:53:59,311Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@d7aca5e {}
[INFO ] 2019-10-31T04:53:59,328Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:53:59,330Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:59,331Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:59,501Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:53:59,519Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:53:59,520Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:53:59,526Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:59,534Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:53:59,542Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:53:59,674Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:53:59,796Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:53:59,889Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:53:59,891Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:53:59,914Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:53:59,917Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:53:59,918Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:59,920Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:53:59,921Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:53:59,940Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F5BCB13EEF011D20D9C9E6754540254143246CE882EE2D1C71EA16E85B2ED742, not inserting the second time {}
[INFO ] 2019-10-31T04:53:59,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:53:59,959Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:53:59,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:53:59,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:53:59,986Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:00,005Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:54:00,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:54:00,016Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:00,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:54:00,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:54:00,021Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:00,023Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:54:00,030Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:00,032Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:00,068Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:54:00,081Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@37bff55c {}
[INFO ] 2019-10-31T04:54:00,093Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:00,095Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:00,096Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:00,193Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:00,201Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:54:00,202Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,206Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:00,210Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,215Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,362Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:54:00,480Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:54:00,565Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:54:00,567Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:54:00,589Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:54:00,590Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:00,592Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:00,595Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:00,596Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:54:00,618Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B3C8AE826B52A424EA9B1CBCD8A0062FD8483E3347C086764A9B715A863CDB13, not inserting the second time {}
[INFO ] 2019-10-31T04:54:00,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:54:00,636Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:00,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497638801) {}
[INFO ] 2019-10-31T04:54:00,655Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,657Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:00,673Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,675Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:54:00,676Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:00,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497639520) {}
[INFO ] 2019-10-31T04:54:00,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,738Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:00,750Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,755Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:00,756Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,757Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,758Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:00,759Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497640202) {}
[INFO ] 2019-10-31T04:54:00,929Z [Mock network] flow.[3ed5cd18-4b2b-49f2-8455-b9bdfd74cadd].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4408148860965292074). {}
[INFO ] 2019-10-31T04:54:01,068Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4408148860965292074). {invocation_id=ee987f20-c77e-4aa4-9e93-64323ed121c7, invocation_timestamp=2019-10-31T04:54:01.066Z, session_id=ee987f20-c77e-4aa4-9e93-64323ed121c7, session_timestamp=2019-10-31T04:54:01.066Z}
[INFO ] 2019-10-31T04:54:01,312Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:01,314Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:01,326Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@17666266 {}
[INFO ] 2019-10-31T04:54:01,353Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:01,357Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:01,358Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:01,515Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:01,523Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:54:01,524Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:01,531Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:01,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:01,547Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:01,684Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:54:01,804Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:54:01,935Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:54:01,937Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:54:01,947Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T04:54:01,952Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:54:01,953Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:01,954Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:01,955Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:01,956Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:54:01,969Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 735F5ADBD91C047A1DCF0127740072BB528289C5501A8BADEBE9633185E81E11, not inserting the second time {}
[INFO ] 2019-10-31T04:54:01,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:01,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:01,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:01,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:01,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:01,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:01,996Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:01,997Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:02,011Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:54:02,019Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6cbc037e {}
[INFO ] 2019-10-31T04:54:02,033Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:02,035Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:02,037Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:02,117Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:02,125Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:54:02,126Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:02,132Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:02,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:02,137Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:02,260Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:54:02,392Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:54:02,492Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:54:02,495Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:54:02,514Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:54:02,516Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:02,517Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:02,518Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:02,519Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:54:02,531Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FBD1D1DD19EEF47473DB1881304C8E0622377DF51682C0C124793FC466F98979, not inserting the second time {}
[INFO ] 2019-10-31T04:54:02,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:02,539Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:02,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:02,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:02,562Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:02,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:02,583Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:02,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:02,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:02,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:02,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:02,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:02,598Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:02,602Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:02,624Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:54:02,634Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@71d19ac3 {}
[INFO ] 2019-10-31T04:54:02,647Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:02,648Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:02,649Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:02,785Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:02,795Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:54:02,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:02,800Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:02,806Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:02,807Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:02,996Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:54:03,132Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:54:03,227Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:54:03,230Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:54:03,261Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:54:03,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:03,264Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:03,265Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:03,266Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:54:03,286Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AE82B971911DA035782FBB09A5A4DBEC1AA97C6F5AEC0F1F6591615DD7DF7DD5, not inserting the second time {}
[INFO ] 2019-10-31T04:54:03,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:03,293Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:03,315Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497641524) {}
[INFO ] 2019-10-31T04:54:03,317Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:03,319Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:03,325Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:03,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:03,332Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:03,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497642126) {}
[INFO ] 2019-10-31T04:54:03,344Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:03,345Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:03,358Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:03,359Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:03,367Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:03,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:03,375Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[INFO ] 2019-10-31T04:54:03,376Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:03,377Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497642796) {}
[WARN ] 2019-10-31T04:54:03,459Z [Mock network] flow.[8c50f9a7-d3ba-4044-bd0a-c38d9102adc2].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 6FCE0B45B6DC34FB489A976FD7167E957D311CD9438B8D610EC61B744CB48403
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T04:54:03,541Z [Mock network] flow.[fc78d61e-9424-407f-bd37-b4271844dcc4].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5647022866118726304). {}
[INFO ] 2019-10-31T04:54:03,607Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5647022866118726304). {invocation_id=8d4de781-b0ad-42db-b8d7-dc5ff7bcf6fe, invocation_timestamp=2019-10-31T04:54:03.606Z, session_id=8d4de781-b0ad-42db-b8d7-dc5ff7bcf6fe, session_timestamp=2019-10-31T04:54:03.606Z}
[INFO ] 2019-10-31T04:54:03,869Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:03,870Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:03,876Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@f549487 {}
[INFO ] 2019-10-31T04:54:03,894Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:03,896Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:03,897Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:04,065Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:04,078Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:54:04,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:04,086Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:04,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:04,100Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:04,228Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:54:04,364Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:54:04,452Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:54:04,453Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:54:04,462Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T04:54:04,466Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:54:04,467Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:04,468Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:04,469Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:04,469Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:54:04,480Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 95345B531B6E034C09FE9DE3E4CDBB73B858936F999289706253CA3E90D1CDC9, not inserting the second time {}
[INFO ] 2019-10-31T04:54:04,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:04,490Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:04,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:04,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:04,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:04,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:04,504Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:04,505Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:04,527Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:54:04,533Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@69469f14 {}
[INFO ] 2019-10-31T04:54:04,542Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:04,543Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:04,544Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:04,647Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:04,654Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:54:04,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:04,659Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:04,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:04,663Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:04,853Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:54:04,973Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:54:05,063Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:54:05,065Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:54:05,077Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:54:05,078Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:05,078Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:05,079Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:05,080Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:54:05,092Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C22AE3C83F8E41325DC2292BE128892827F3C66054B10C3733FCB8E38C38119E, not inserting the second time {}
[INFO ] 2019-10-31T04:54:05,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:05,100Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:05,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:05,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:05,115Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:05,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:05,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:05,130Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:05,130Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:05,131Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:05,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:05,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:05,136Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:05,137Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:05,154Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:54:05,171Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1beca4e4 {}
[INFO ] 2019-10-31T04:54:05,184Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:05,185Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:05,186Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:05,276Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:05,283Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:54:05,284Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,287Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:05,290Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,291Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,428Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:54:05,598Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:54:05,684Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:54:05,686Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:54:05,699Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:54:05,700Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:05,701Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:05,702Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:05,706Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:54:05,717Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B6F9BDFF61959FD3E85868F395DCE461C2AB59E2562083F168A3043F1FF06BE1, not inserting the second time {}
[INFO ] 2019-10-31T04:54:05,745Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:05,748Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:05,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:05,768Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,769Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:05,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,783Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:05,785Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:05,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:05,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,809Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:05,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,827Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:05,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:05,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:05,834Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:05,834Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:05,852Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:54:05,865Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@ed70a7a {}
[INFO ] 2019-10-31T04:54:05,874Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:05,875Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:05,876Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:06,001Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:06,008Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:54:06,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,016Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:06,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,025Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,147Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:54:06,317Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:54:06,411Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:54:06,413Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:54:06,424Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:54:06,425Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:06,426Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:06,427Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:06,428Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:54:06,439Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 70E46078B940BF95E97226815A36F1EBBD11C4FE7ED1F6854777F220FE36D07F, not inserting the second time {}
[INFO ] 2019-10-31T04:54:06,443Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:06,445Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:06,453Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:06,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,458Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:06,466Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:06,469Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:06,478Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:06,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,481Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:06,496Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:06,499Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:06,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:06,506Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,508Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:06,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:06,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,518Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,519Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:06,519Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:06,522Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:06,523Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:06,533Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:54:06,539Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@190c36be {}
[INFO ] 2019-10-31T04:54:06,548Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:06,549Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:06,550Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:06,618Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:06,627Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:54:06,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:06,636Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:06,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:06,642Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:06,784Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:54:06,998Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:54:07,087Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:54:07,089Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:54:07,101Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:54:07,102Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:07,103Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:07,103Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:07,104Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:54:07,115Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 88EE1FE916F53C3F4518DD052601F163033758C65C12AE4B5BC7EF7B9823EBC3, not inserting the second time {}
[INFO ] 2019-10-31T04:54:07,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:07,125Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:07,131Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497644081) {}
[INFO ] 2019-10-31T04:54:07,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,134Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:07,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,140Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:07,141Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:07,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497644656) {}
[INFO ] 2019-10-31T04:54:07,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,149Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:07,154Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:07,156Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:07,162Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572497645284) {}
[INFO ] 2019-10-31T04:54:07,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,164Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:07,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:07,171Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:07,176Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572497646010) {}
[INFO ] 2019-10-31T04:54:07,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,179Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:54:07,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,188Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:07,189Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,189Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,190Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:54:07,191Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497646628) {}
[INFO ] 2019-10-31T04:54:07,196Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:07,197Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:07,198Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:07,199Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:07,199Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:07,200Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:07,201Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:54:07,202Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:54:07,334Z [Mock network] flow.[0d51c21b-da80-4334-be81-df921916903b].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-9118594380834383329). {}
[INFO ] 2019-10-31T04:54:07,429Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-9118594380834383329). {invocation_id=8393912f-9b1f-4ff3-9b9a-e9d566543cc4, invocation_timestamp=2019-10-31T04:54:07.428Z, session_id=8393912f-9b1f-4ff3-9b9a-e9d566543cc4, session_timestamp=2019-10-31T04:54:07.428Z}
[INFO ] 2019-10-31T04:54:07,644Z [Mock network] flow.[0d51c21b-da80-4334-be81-df921916903b].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8149350012805986944). {}
[INFO ] 2019-10-31T04:54:07,673Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8149350012805986944). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=204d27ff-2979-4267-ae2f-749e4809d83b, invocation_timestamp=2019-10-31T04:54:07.672Z, session_id=204d27ff-2979-4267-ae2f-749e4809d83b, session_timestamp=2019-10-31T04:54:07.672Z}
[INFO ] 2019-10-31T04:54:07,749Z [Mock network] flow.[0d51c21b-da80-4334-be81-df921916903b].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7297943189640177512). {}
[INFO ] 2019-10-31T04:54:07,773Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7297943189640177512). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=17490b62-852e-48b1-af43-88170433dc2e, invocation_timestamp=2019-10-31T04:54:07.772Z, session_id=17490b62-852e-48b1-af43-88170433dc2e, session_timestamp=2019-10-31T04:54:07.772Z}
[INFO ] 2019-10-31T04:54:07,917Z [Mock network] flow.[57ec8bf4-1f51-4de0-bd23-20c1c67863d9].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7592851902764536127). {}
[INFO ] 2019-10-31T04:54:07,945Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7592851902764536127). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ecb1760c-0b85-4484-9d5a-ab93214f90b7, invocation_timestamp=2019-10-31T04:54:07.945Z, session_id=ecb1760c-0b85-4484-9d5a-ab93214f90b7, session_timestamp=2019-10-31T04:54:07.945Z}
[INFO ] 2019-10-31T04:54:08,060Z [Mock network] flow.[fffe7841-8661-4dd5-be26-70002398c791].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-7579348730296383428). {}
[INFO ] 2019-10-31T04:54:08,093Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7579348730296383428). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=6196d5f7-edf9-4a93-8385-8f9dd3cf28f0, invocation_timestamp=2019-10-31T04:54:08.091Z, session_id=6196d5f7-edf9-4a93-8385-8f9dd3cf28f0, session_timestamp=2019-10-31T04:54:08.091Z}
[INFO ] 2019-10-31T04:54:08,124Z [Mock network] flow.[ae76b0d3-38f8-46e9-b38d-bf9092f4d63b].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T04:54:08,199Z [Mock network] flow.[ae76b0d3-38f8-46e9-b38d-bf9092f4d63b].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T04:54:08,341Z [Mock network] flow.[c75c52af-4c70-4363-855d-e7feaf5cd4d1].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7730860130392476436). {}
[INFO ] 2019-10-31T04:54:08,372Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7730860130392476436). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=73415cef-8041-4db2-8fe0-332fca30ce3d, invocation_timestamp=2019-10-31T04:54:08.371Z, session_id=73415cef-8041-4db2-8fe0-332fca30ce3d, session_timestamp=2019-10-31T04:54:08.371Z}
[WARN ] 2019-10-31T04:54:08,388Z [Mock network] flow.[f4473c7a-b5d4-429b-abb2-11a84dae1479].run - Terminated by unexpected exception {}
java.lang.IllegalStateException: A transaction must contain at least one input or output state
	at net.corda.core.transactions.WireTransaction.<init>(WireTransaction.kt:59) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder$toWireTransactionWithContext$1.invoke(TransactionBuilder.kt:114) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder$toWireTransactionWithContext$1.invoke(TransactionBuilder.kt:36) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:66) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:113) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:97) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:95) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toSignedTransaction(TransactionBuilder.kt:222) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.node.ServiceHub$DefaultImpls.signInitialTransaction(ServiceHub.kt:219) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.node.ServiceHub$DefaultImpls.signInitialTransaction(ServiceHub.kt:233) ~[corda-core-3.4-corda.jar:?]
	at net.corda.node.services.api.ServiceHubInternal$DefaultImpls.signInitialTransaction(ServiceHubInternal.kt) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.internal.AbstractNode$ServiceHubInternalImpl.signInitialTransaction(AbstractNode.kt:836) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.node.ServiceHub$DefaultImpls.signInitialTransaction(ServiceHub.kt:242) ~[corda-core-3.4-corda.jar:?]
	at net.corda.node.services.api.ServiceHubInternal$DefaultImpls.signInitialTransaction(ServiceHubInternal.kt) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.internal.AbstractNode$ServiceHubInternalImpl.signInitialTransaction(AbstractNode.kt:836) ~[corda-node-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:126) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:85) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
[WARN ] 2019-10-31T04:54:08,438Z [Mock network] flow.[c75c52af-4c70-4363-855d-e7feaf5cd4d1].run - Terminated by unexpected exception {}
net.corda.core.flows.UnexpectedFlowEndException: Counterparty flow on O=Mock Company 1, L=London, C=GB had an internal error and has terminated
	at net.corda.node.services.statemachine.FlowStateMachineImpl.erroredEnd(FlowStateMachineImpl.kt:500) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:481) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:79) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:35) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
[INFO ] 2019-10-31T04:54:57,175Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-3b0a1210-52d0-4c3f-a3dc-43704df22840.jar {}
[INFO ] 2019-10-31T04:54:57,195Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-6bec3bf4-8c13-439b-aab3-e2857e9f4ac2.jar {}
[INFO ] 2019-10-31T04:54:57,238Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-3b0a1210-52d0-4c3f-a3dc-43704df22840.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-6bec3bf4-8c13-439b-aab3-e2857e9f4ac2.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T04:54:57,275Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:54:57,279Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:54:57,294Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-3b0a1210-52d0-4c3f-a3dc-43704df22840.jar {}
[INFO ] 2019-10-31T04:54:57,323Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-6bec3bf4-8c13-439b-aab3-e2857e9f4ac2.jar {}
[INFO ] 2019-10-31T04:54:57,353Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T04:54:57,422Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T04:54:57,468Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T04:54:57,648Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1bde3737 {}
[INFO ] 2019-10-31T04:54:58,478Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:54:58,539Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:54:58,546Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:00,979Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:01,612Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:55:01,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:01,628Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:01,737Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:01,740Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:02,043Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:55:02,190Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:55:02,303Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:55:02,310Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:55:02,417Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T04:55:02,560Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:55:02,565Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:55:02,573Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:02,578Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:02,580Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:55:02,638Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F0DC3B6B25C56C10992B4CE112FD431E135215C50C496C2311519BF3734A53CB, not inserting the second time {}
[INFO ] 2019-10-31T04:55:02,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:02,780Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:02,782Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:02,784Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:02,786Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:02,788Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:02,795Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:55:02,800Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:55:02,846Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:55:02,873Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@58169921 {}
[INFO ] 2019-10-31T04:55:02,898Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:55:02,900Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:02,902Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:03,143Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:03,168Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:55:03,176Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:03,182Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:03,197Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:03,199Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:03,360Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:55:03,501Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:55:03,598Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:55:03,601Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:55:03,632Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:55:03,637Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:55:03,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:03,645Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:03,646Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:55:03,664Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3EE8B0F0E91FDCF9919963615FF6E8E308790AC4D615790897663F26BD86E053, not inserting the second time {}
[INFO ] 2019-10-31T04:55:03,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:03,683Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:03,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:03,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:03,721Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:03,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:03,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:03,750Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:03,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:03,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:03,757Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:03,758Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:03,762Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:55:03,765Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:55:03,798Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:55:03,813Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@27127dd3 {}
[INFO ] 2019-10-31T04:55:03,826Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:55:03,828Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:03,829Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:03,987Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:03,997Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:55:03,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,004Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:04,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,012Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,144Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:55:04,298Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:55:04,393Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:55:04,396Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:55:04,412Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:55:04,415Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:55:04,416Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:04,419Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:04,420Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:55:04,434Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 89DB1E77F3191201EAE527F5EA1308B77579271A282662258D8382997C326D46, not inserting the second time {}
[INFO ] 2019-10-31T04:55:04,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:04,450Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:04,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497701615) {}
[INFO ] 2019-10-31T04:55:04,470Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,476Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:04,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:04,515Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:04,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497703176) {}
[INFO ] 2019-10-31T04:55:04,558Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,561Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:04,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,608Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:04,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:04,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:04,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497703999) {}
[INFO ] 2019-10-31T04:55:05,613Z [Mock network] flow.[2e62696f-5c87-4c4c-8c17-5e15dc159ac1].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8790674498701882443). {}
[INFO ] 2019-10-31T04:55:05,769Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8790674498701882443). {invocation_id=4124d739-97de-48f6-9d67-8118121696c3, invocation_timestamp=2019-10-31T04:55:05.749Z, session_id=4124d739-97de-48f6-9d67-8118121696c3, session_timestamp=2019-10-31T04:55:05.749Z}
[INFO ] 2019-10-31T04:55:06,155Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:55:06,157Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:55:06,164Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@76b79f90 {}
[INFO ] 2019-10-31T04:55:06,178Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:55:06,179Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:06,181Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:06,344Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:06,352Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:55:06,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:06,371Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:06,383Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:06,385Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:06,538Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:55:06,682Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:55:06,784Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:55:06,786Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:55:06,807Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T04:55:06,817Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:55:06,821Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:55:06,823Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:06,824Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:06,826Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:55:06,850Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5677B525ABCC170E98715BBAC2D15F056EACF847E4F9B423F1BE0A22DF9F8A51, not inserting the second time {}
[INFO ] 2019-10-31T04:55:06,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:06,867Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:06,872Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:06,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:06,876Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:06,877Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:06,883Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:55:06,885Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:55:06,919Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:55:06,936Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@36cccc6a {}
[INFO ] 2019-10-31T04:55:06,955Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:55:06,958Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:06,960Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:07,133Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:07,149Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:55:07,151Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:07,155Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:07,159Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:07,160Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:07,310Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:55:07,469Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:55:07,558Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:55:07,560Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:55:07,587Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:55:07,591Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:55:07,592Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:07,594Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:07,595Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:55:07,616Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2C9F6EA389CF74013680981DBD48AE8D5AB7E0ECCE9B8AD244FD4FBED5B32449, not inserting the second time {}
[INFO ] 2019-10-31T04:55:07,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:07,626Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:07,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:07,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:07,661Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:07,681Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:07,683Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:07,689Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:07,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:07,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:07,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:07,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:07,699Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:55:07,701Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:55:07,721Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:55:07,731Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@65de4e33 {}
[INFO ] 2019-10-31T04:55:07,743Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:55:07,745Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:07,746Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:07,922Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:07,935Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:55:07,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:07,943Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:07,955Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:07,957Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:08,107Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:55:08,229Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:55:08,321Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:55:08,323Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:55:08,336Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:55:08,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:55:08,339Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:08,341Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:08,342Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:55:08,355Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 835FC6573CC0F7ECF54BB7F2048DCA2AF0D9B7D5D435DE61E41083D306829CA8, not inserting the second time {}
[INFO ] 2019-10-31T04:55:08,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:08,363Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:08,383Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497706362) {}
[INFO ] 2019-10-31T04:55:08,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:08,387Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:08,406Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:08,408Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:08,410Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:08,420Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497707151) {}
[INFO ] 2019-10-31T04:55:08,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:08,425Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:08,433Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:08,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:08,439Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:08,441Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:08,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:08,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:08,445Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497707938) {}
[INFO ] 2019-10-31T04:55:08,597Z [Mock network] flow.[b0394c61-8ab7-467c-a96d-daf9a6bf2319].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4319761344928908202). {}
[INFO ] 2019-10-31T04:55:08,674Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4319761344928908202). {invocation_id=734f6aa5-1a3f-4b48-a3c2-289b53d54353, invocation_timestamp=2019-10-31T04:55:08.673Z, session_id=734f6aa5-1a3f-4b48-a3c2-289b53d54353, session_timestamp=2019-10-31T04:55:08.673Z}
[INFO ] 2019-10-31T04:55:08,950Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:55:08,951Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:55:08,963Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@26c259b5 {}
[INFO ] 2019-10-31T04:55:08,975Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:55:08,979Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:08,980Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:09,145Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:09,152Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:55:09,154Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:09,158Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:09,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:09,166Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:09,304Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:55:09,438Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:55:09,532Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:55:09,533Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:55:09,549Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T04:55:09,554Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:55:09,555Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:55:09,556Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:09,557Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:09,559Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:55:09,581Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E90B2AA86269CF74FBDF86A0FA7A4E4134DD0CC91ED9ACE6F748BFC20616B6AF, not inserting the second time {}
[INFO ] 2019-10-31T04:55:09,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:09,603Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:09,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:09,608Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:09,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:09,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:09,619Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:55:09,621Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:55:09,647Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:55:09,661Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@76d1d8d2 {}
[INFO ] 2019-10-31T04:55:09,680Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:55:09,685Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:09,686Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:09,872Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:09,887Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:55:09,888Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:09,894Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:09,901Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:09,903Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:10,048Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:55:10,183Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:55:10,278Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:55:10,280Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:55:10,300Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:55:10,302Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:55:10,303Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:10,304Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:10,306Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:55:10,320Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D24F6CA2C9D427A590D2F940774CDA5FBB9BF7249F964B2EE3686AFA7E494CEA, not inserting the second time {}
[INFO ] 2019-10-31T04:55:10,326Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:10,329Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:10,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:10,339Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:10,341Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:10,348Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:10,350Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:10,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:10,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:10,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:10,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:10,358Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:10,361Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T04:55:10,362Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T04:55:10,374Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T04:55:10,381Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@9868d50 {}
[INFO ] 2019-10-31T04:55:10,392Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T04:55:10,394Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:10,395Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:10,493Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T04:55:10,502Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T04:55:10,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:10,508Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:10,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:10,514Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:10,655Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T04:55:10,821Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T04:55:10,906Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T04:55:10,908Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T04:55:10,926Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T04:55:10,928Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T04:55:10,928Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:10,929Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T04:55:10,931Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T04:55:10,951Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 57AAE24D2B6939263EBD47DDAB786E2AE9A07CD700AE21C68894A0AB78081F71, not inserting the second time {}
[INFO ] 2019-10-31T04:55:10,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:10,960Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:10,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572497709154) {}
[INFO ] 2019-10-31T04:55:10,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:10,980Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:10,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:10,992Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:10,994Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:11,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572497709888) {}
[INFO ] 2019-10-31T04:55:11,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:11,014Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T04:55:11,026Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:11,027Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:11,036Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:11,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:11,044Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[INFO ] 2019-10-31T04:55:11,047Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T04:55:11,047Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572497710503) {}
[WARN ] 2019-10-31T04:55:11,125Z [Mock network] flow.[7074fefd-27f0-4021-a2e0-f2b4404975b6].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 8FC15EB31AC2A443B3D3DCE1EBCB42593A65F15C8665D535F2F94602FCB4069E
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T04:55:11,243Z [Mock network] flow.[fbf17dbf-5ebd-4c74-b69a-b18c61bcdf67].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-945062808794375797). {}
[INFO ] 2019-10-31T04:55:11,326Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-945062808794375797). {invocation_id=8ccd2513-5235-4358-a402-0eda71265176, invocation_timestamp=2019-10-31T04:55:11.325Z, session_id=8ccd2513-5235-4358-a402-0eda71265176, session_timestamp=2019-10-31T04:55:11.325Z}
[INFO ] 2019-10-31T05:12:47,988Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-58fe0467-3fdc-4540-a12d-bd0ed19ad407.jar {}
[INFO ] 2019-10-31T05:12:48,030Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-16875e5b-f8cc-46fc-89b3-a33116813b99.jar {}
[INFO ] 2019-10-31T05:12:48,085Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-58fe0467-3fdc-4540-a12d-bd0ed19ad407.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-16875e5b-f8cc-46fc-89b3-a33116813b99.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T05:12:48,131Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:12:48,141Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:12:48,168Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-58fe0467-3fdc-4540-a12d-bd0ed19ad407.jar {}
[INFO ] 2019-10-31T05:12:48,200Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-16875e5b-f8cc-46fc-89b3-a33116813b99.jar {}
[INFO ] 2019-10-31T05:12:48,237Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T05:12:48,308Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T05:12:48,361Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T05:12:48,546Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@30f4e9e8 {}
[INFO ] 2019-10-31T05:12:49,326Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:12:49,379Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:49,383Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:51,591Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:52,426Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:12:52,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:52,441Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:52,549Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:52,551Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:52,899Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:12:53,084Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:12:53,214Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:12:53,226Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:12:53,342Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T05:12:53,505Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:12:53,508Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:12:53,515Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:53,519Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:53,521Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:12:53,598Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1C27FF17D7C31ED5819A945A4DB96098132CF33A5DE1843631D62047FE4AFB0C, not inserting the second time {}
[INFO ] 2019-10-31T05:12:53,694Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:53,718Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:53,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:53,722Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:53,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:53,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:53,731Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:12:53,733Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:12:53,755Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:12:53,769Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5b17cdbe {}
[INFO ] 2019-10-31T05:12:53,800Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:12:53,802Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:53,804Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:53,955Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:53,980Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:12:53,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:54,000Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:54,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:54,017Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:54,195Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:12:54,350Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:12:54,446Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:12:54,449Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:12:54,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:12:54,475Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:12:54,477Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:54,478Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:54,480Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:12:54,500Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 09E9F7B37807D62F82BBBC11D2B6776D06F450ED2FCF6B09939E6C032DA43480, not inserting the second time {}
[INFO ] 2019-10-31T05:12:54,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:54,517Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:54,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:54,548Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:54,557Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:54,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:54,584Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:54,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:54,602Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:54,604Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:54,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:54,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:54,616Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:12:54,618Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:12:54,661Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:12:54,677Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@23592ee8 {}
[INFO ] 2019-10-31T05:12:54,710Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:12:54,715Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:54,716Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:54,835Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:54,844Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:12:54,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:54,850Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:54,855Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:54,856Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:54,997Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:12:55,126Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:12:55,215Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:12:55,217Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:12:55,232Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:12:55,234Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:12:55,236Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:55,238Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:55,239Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:12:55,263Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E97782C8956C1C4D90EF7EA5EACAB06CF541FCDB47FB1D8347C7A732E2B630A5, not inserting the second time {}
[INFO ] 2019-10-31T05:12:55,271Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:55,273Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:55,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498772429) {}
[INFO ] 2019-10-31T05:12:55,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:55,304Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:55,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:55,323Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:55,329Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:55,346Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498773988) {}
[INFO ] 2019-10-31T05:12:55,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:55,372Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:55,413Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:55,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:55,420Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:55,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:55,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:55,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:55,425Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498774846) {}
[INFO ] 2019-10-31T05:12:56,390Z [Mock network] flow.[7b68fe07-fecf-45d3-9dc3-be09fc3c949f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5035393437064054431). {}
[INFO ] 2019-10-31T05:12:56,573Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5035393437064054431). {invocation_id=1a7e98c1-cae9-46c6-9ae5-18d2b2dd83c3, invocation_timestamp=2019-10-31T05:12:56.565Z, session_id=1a7e98c1-cae9-46c6-9ae5-18d2b2dd83c3, session_timestamp=2019-10-31T05:12:56.565Z}
[INFO ] 2019-10-31T05:12:56,906Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:12:56,908Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:12:56,916Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@49318406 {}
[INFO ] 2019-10-31T05:12:56,943Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:12:56,949Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:56,951Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:57,173Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:57,192Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:12:57,195Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:57,202Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:57,221Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:57,223Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:57,385Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:12:57,540Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:12:57,638Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:12:57,641Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:12:57,656Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T05:12:57,661Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:12:57,662Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:12:57,664Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:57,665Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:57,666Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:12:57,679Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C8B8F41FEC2793ACB7B6D15064AF4671AF59A167AED9A64C51EF0FE49ED4CE6A, not inserting the second time {}
[INFO ] 2019-10-31T05:12:57,687Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:57,696Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:57,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:57,701Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:57,702Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:57,703Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:57,708Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:12:57,710Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:12:57,741Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:12:57,766Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@48f5642e {}
[INFO ] 2019-10-31T05:12:57,804Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:12:57,806Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:57,818Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:57,995Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:58,003Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:12:58,004Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:58,009Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:58,013Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:58,014Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:58,158Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:12:58,300Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:12:58,396Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:12:58,398Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:12:58,429Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:12:58,431Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:12:58,432Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:58,434Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:58,435Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:12:58,454Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4E6A6BCA44919AE993F7CADAA6462B7059E32265DEBEA97F43CA57B9D4E6227C, not inserting the second time {}
[INFO ] 2019-10-31T05:12:58,461Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:58,470Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:58,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:58,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:58,503Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:58,521Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:58,525Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:58,530Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:58,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:58,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:58,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:58,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:58,546Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:12:58,548Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:12:58,573Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:12:58,584Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2fbf9c5a {}
[INFO ] 2019-10-31T05:12:58,598Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:12:58,603Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:58,606Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:58,758Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:58,766Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:12:58,768Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:58,771Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:58,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:58,776Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:58,907Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:12:59,092Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:12:59,185Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:12:59,187Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:12:59,200Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:12:59,202Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:12:59,203Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:59,204Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:12:59,205Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:12:59,217Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 171234ACBA9ABF1BAD4D4A37F9C661C70B9B95CDD89703CABB1F269F965293A7, not inserting the second time {}
[INFO ] 2019-10-31T05:12:59,236Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:59,243Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:59,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498777195) {}
[INFO ] 2019-10-31T05:12:59,265Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:59,274Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:59,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:59,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:59,293Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:59,308Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498778004) {}
[INFO ] 2019-10-31T05:12:59,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:59,323Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:12:59,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:59,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:59,339Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:59,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:59,341Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:59,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:12:59,346Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498778768) {}
[INFO ] 2019-10-31T05:12:59,510Z [Mock network] flow.[a8577cf4-2cc9-49db-8186-069c27266be2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2030079549492265814). {}
[INFO ] 2019-10-31T05:12:59,632Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2030079549492265814). {invocation_id=0396d1f0-9661-43eb-af22-7e16fe3ac0f6, invocation_timestamp=2019-10-31T05:12:59.631Z, session_id=0396d1f0-9661-43eb-af22-7e16fe3ac0f6, session_timestamp=2019-10-31T05:12:59.631Z}
[INFO ] 2019-10-31T05:12:59,891Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:12:59,893Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:12:59,906Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3c91fd7a {}
[INFO ] 2019-10-31T05:12:59,929Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:12:59,933Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:12:59,935Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:00,110Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:00,119Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:13:00,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:00,127Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:00,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:00,141Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:00,355Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:13:00,474Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:13:00,564Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:13:00,566Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:13:00,575Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T05:13:00,580Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:13:00,581Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:00,582Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:00,583Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:00,584Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:13:00,596Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 767DD3278FA94825C713C6C69436AA7BBF677A931016433B9E7B223062405CCF, not inserting the second time {}
[INFO ] 2019-10-31T05:13:00,602Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:00,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:00,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:00,614Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:00,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:00,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:00,619Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:13:00,620Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:13:00,633Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:13:00,649Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@35f21ce5 {}
[INFO ] 2019-10-31T05:13:00,664Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:13:00,665Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:00,666Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:00,782Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:00,796Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:13:00,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:00,801Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:00,805Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:00,806Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:00,946Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:13:01,076Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:13:01,168Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:13:01,170Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:13:01,182Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:13:01,183Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:01,184Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:01,185Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:01,186Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:13:01,198Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CE1A53E549AA56054A8CB40EDD72A4FF025FBF0114AC7DC100CA2A5D0BD0836A, not inserting the second time {}
[INFO ] 2019-10-31T05:13:01,204Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:01,206Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:01,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:01,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:01,231Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:01,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:01,246Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:01,253Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:01,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:01,255Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:01,256Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:01,257Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:01,260Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:13:01,261Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:13:01,285Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:13:01,295Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@590b6389 {}
[INFO ] 2019-10-31T05:13:01,304Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:13:01,311Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:01,312Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:01,458Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:01,465Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:13:01,466Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:01,469Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:01,473Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:01,474Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:01,620Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:13:01,753Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:13:01,847Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:13:01,848Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:13:01,861Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:13:01,863Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:01,864Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:01,865Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:01,874Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:13:01,895Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FFC9A891ED69FC2D39A74D0A0368F9273467D5F420DD8D3D8F31BC9BA2ED7219, not inserting the second time {}
[INFO ] 2019-10-31T05:13:01,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:01,914Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:01,934Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498780121) {}
[INFO ] 2019-10-31T05:13:01,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:01,942Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:01,954Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:01,955Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:01,958Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:01,970Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498780797) {}
[INFO ] 2019-10-31T05:13:01,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:01,976Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:01,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:01,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:01,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:02,003Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:02,005Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[INFO ] 2019-10-31T05:13:02,006Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:02,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498781466) {}
[WARN ] 2019-10-31T05:13:02,086Z [Mock network] flow.[6283e40e-f730-45c6-83e1-43169235b763].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 14F9E67C910B479B6E2DA8E624C97173B26130CCAEA5DE28EAACA3C6337F257E
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T05:13:02,289Z [Mock network] flow.[6226b2f6-78f2-4186-a6f1-98f9194b6314].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4976052503556324356). {}
[INFO ] 2019-10-31T05:13:02,371Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4976052503556324356). {invocation_id=e0ee0268-d707-4075-ad45-996c5e47ab91, invocation_timestamp=2019-10-31T05:13:02.370Z, session_id=e0ee0268-d707-4075-ad45-996c5e47ab91, session_timestamp=2019-10-31T05:13:02.370Z}
[INFO ] 2019-10-31T05:13:02,649Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:13:02,653Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:13:02,665Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@50722b57 {}
[INFO ] 2019-10-31T05:13:02,681Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:13:02,682Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:02,683Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:02,810Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:02,819Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:13:02,820Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:02,824Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:02,832Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:02,834Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:02,970Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:13:03,096Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:13:03,187Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:13:03,189Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:13:03,198Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T05:13:03,202Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:13:03,203Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:03,204Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:03,205Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:03,206Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:13:03,217Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 38E90E31414F6129B42F2B9CC5C8DBFD705A578C3B5EAE12ADCA0F163FE65861, not inserting the second time {}
[INFO ] 2019-10-31T05:13:03,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:03,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:03,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:03,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:03,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:03,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:03,237Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:13:03,238Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:13:03,250Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:13:03,257Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7d7a3813 {}
[INFO ] 2019-10-31T05:13:03,268Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:13:03,269Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:03,270Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:03,401Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:03,422Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:13:03,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:03,427Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:03,433Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:03,434Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:03,571Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:13:03,684Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:13:03,776Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:13:03,778Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:13:03,790Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:13:03,791Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:03,792Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:03,793Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:03,793Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:13:03,804Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EDC677E37CD276F42FE2160228F6FAC9534C479298A94415FF7E311BAD4F35CB, not inserting the second time {}
[INFO ] 2019-10-31T05:13:03,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:03,816Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:03,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:03,839Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:03,841Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:03,850Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:03,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:03,856Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:03,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:03,858Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:03,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:03,861Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:03,863Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:13:03,864Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:13:03,884Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:13:03,898Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@154a19bb {}
[INFO ] 2019-10-31T05:13:03,917Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:13:03,919Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:03,919Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:03,984Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:03,991Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:13:03,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:03,994Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:03,997Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:03,998Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:04,179Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:13:04,295Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:13:04,394Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:13:04,396Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:13:04,411Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:13:04,413Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:04,414Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:04,416Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:04,417Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:13:04,432Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D3E23C064CED1CCCA0E6B6106F1861E7B4B8CDE40D73466FA81B22F43832BF16, not inserting the second time {}
[INFO ] 2019-10-31T05:13:04,440Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:04,452Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:04,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:04,464Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:04,467Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:04,474Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:04,488Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:04,491Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:04,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:04,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:04,500Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:04,506Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:04,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:04,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:04,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:04,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:04,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:04,518Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:04,521Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:13:04,522Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:13:04,541Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:13:04,557Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@311e83a5 {}
[INFO ] 2019-10-31T05:13:04,566Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:13:04,567Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:04,568Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:04,648Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:04,658Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:13:04,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:04,663Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:04,667Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:04,668Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:04,803Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:13:04,969Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:13:05,068Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:13:05,069Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:13:05,082Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:13:05,083Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:05,084Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:05,084Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:05,085Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:13:05,106Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5D1F49C03F3E68DAE59EE0030B93168D711912D86ECD3406EECE611B37AC2E61, not inserting the second time {}
[INFO ] 2019-10-31T05:13:05,113Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:05,123Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:05,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,135Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:05,146Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:05,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,159Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,174Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,176Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:05,177Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,188Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:05,190Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,192Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,202Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,204Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:05,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,210Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:05,213Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,221Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:13:05,223Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:13:05,235Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:13:05,241Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@20d0421 {}
[INFO ] 2019-10-31T05:13:05,253Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:13:05,254Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:05,255Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:05,317Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:13:05,329Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:13:05,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,334Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,339Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,474Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:13:05,646Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:13:05,734Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:13:05,736Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:13:05,748Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:13:05,749Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:05,750Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:05,751Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:05,753Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:13:05,766Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 67B970CFC89CF2984C77FA6DA74297DA5D08AF43D3A6389DDD4C571C25183C04, not inserting the second time {}
[INFO ] 2019-10-31T05:13:05,773Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:05,777Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,785Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572498782820) {}
[INFO ] 2019-10-31T05:13:05,787Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,790Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,799Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:05,802Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572498783423) {}
[INFO ] 2019-10-31T05:13:05,808Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,810Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:05,817Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572498783991) {}
[INFO ] 2019-10-31T05:13:05,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,824Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,829Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,831Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572498784659) {}
[INFO ] 2019-10-31T05:13:05,837Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,839Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:13:05,844Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,844Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,847Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:05,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:13:05,850Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572498785330) {}
[INFO ] 2019-10-31T05:13:05,855Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:05,856Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:05,857Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:05,857Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:05,858Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:05,859Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:05,860Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:13:05,860Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:13:05,988Z [Mock network] flow.[32252a8f-fa1c-4443-9390-91f9fe666832].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8758886041639974867). {}
[INFO ] 2019-10-31T05:13:06,071Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8758886041639974867). {invocation_id=eaf27d4b-b3a1-4064-b51c-d90eb8bf5185, invocation_timestamp=2019-10-31T05:13:06.070Z, session_id=eaf27d4b-b3a1-4064-b51c-d90eb8bf5185, session_timestamp=2019-10-31T05:13:06.070Z}
[INFO ] 2019-10-31T05:13:06,305Z [Mock network] flow.[32252a8f-fa1c-4443-9390-91f9fe666832].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3738472101270243016). {}
[INFO ] 2019-10-31T05:13:06,342Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3738472101270243016). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=786e0bae-05e5-4af8-8908-20158ff6d8e4, invocation_timestamp=2019-10-31T05:13:06.341Z, session_id=786e0bae-05e5-4af8-8908-20158ff6d8e4, session_timestamp=2019-10-31T05:13:06.341Z}
[INFO ] 2019-10-31T05:13:06,423Z [Mock network] flow.[32252a8f-fa1c-4443-9390-91f9fe666832].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4198576798503755802). {}
[INFO ] 2019-10-31T05:13:06,453Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4198576798503755802). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=fa051e81-ae3c-4dc3-b4bc-2865d1bb72d6, invocation_timestamp=2019-10-31T05:13:06.453Z, session_id=fa051e81-ae3c-4dc3-b4bc-2865d1bb72d6, session_timestamp=2019-10-31T05:13:06.453Z}
[INFO ] 2019-10-31T05:13:06,616Z [Mock network] flow.[1b6ae690-bcce-4880-9c2a-f76054247207].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8439182699311532284). {}
[INFO ] 2019-10-31T05:13:06,656Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8439182699311532284). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=da4b6b8f-b9d6-453a-bf7e-ba3c8dba56b3, invocation_timestamp=2019-10-31T05:13:06.655Z, session_id=da4b6b8f-b9d6-453a-bf7e-ba3c8dba56b3, session_timestamp=2019-10-31T05:13:06.655Z}
[INFO ] 2019-10-31T05:13:06,846Z [Mock network] flow.[1fb36705-8545-475c-b18a-38a7e3d8bae7].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-1401373314627606950). {}
[INFO ] 2019-10-31T05:13:06,897Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1401373314627606950). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=b056391b-2414-4c1a-ac6f-af0d7544b88e, invocation_timestamp=2019-10-31T05:13:06.894Z, session_id=b056391b-2414-4c1a-ac6f-af0d7544b88e, session_timestamp=2019-10-31T05:13:06.894Z}
[INFO ] 2019-10-31T05:13:06,919Z [Mock network] flow.[61b93530-2182-4b09-a2a7-1337fad8ca9d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T05:13:07,021Z [Mock network] flow.[61b93530-2182-4b09-a2a7-1337fad8ca9d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T05:13:07,177Z [Mock network] flow.[fff85dc9-271e-42ed-9792-3d084b4423e3].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3514746688777155989). {}
[INFO ] 2019-10-31T05:13:07,224Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3514746688777155989). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=2b3ae88a-ba70-47ca-82bd-dd08638a3b64, invocation_timestamp=2019-10-31T05:13:07.222Z, session_id=2b3ae88a-ba70-47ca-82bd-dd08638a3b64, session_timestamp=2019-10-31T05:13:07.222Z}
[WARN ] 2019-10-31T05:13:07,239Z [Mock network] flow.[02149fcf-52d6-469d-bfb6-76a47ae64265].run - Terminated by unexpected exception {}
java.lang.IllegalStateException: A transaction must contain at least one input or output state
	at net.corda.core.transactions.WireTransaction.<init>(WireTransaction.kt:59) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder$toWireTransactionWithContext$1.invoke(TransactionBuilder.kt:114) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder$toWireTransactionWithContext$1.invoke(TransactionBuilder.kt:36) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:66) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:113) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:97) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:95) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toSignedTransaction(TransactionBuilder.kt:222) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.node.ServiceHub$DefaultImpls.signInitialTransaction(ServiceHub.kt:219) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.node.ServiceHub$DefaultImpls.signInitialTransaction(ServiceHub.kt:233) ~[corda-core-3.4-corda.jar:?]
	at net.corda.node.services.api.ServiceHubInternal$DefaultImpls.signInitialTransaction(ServiceHubInternal.kt) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.internal.AbstractNode$ServiceHubInternalImpl.signInitialTransaction(AbstractNode.kt:836) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.node.ServiceHub$DefaultImpls.signInitialTransaction(ServiceHub.kt:242) ~[corda-core-3.4-corda.jar:?]
	at net.corda.node.services.api.ServiceHubInternal$DefaultImpls.signInitialTransaction(ServiceHubInternal.kt) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.internal.AbstractNode$ServiceHubInternalImpl.signInitialTransaction(AbstractNode.kt:836) ~[corda-node-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:126) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:85) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
[WARN ] 2019-10-31T05:13:07,288Z [Mock network] flow.[fff85dc9-271e-42ed-9792-3d084b4423e3].run - Terminated by unexpected exception {}
net.corda.core.flows.UnexpectedFlowEndException: Counterparty flow on O=Mock Company 1, L=London, C=GB had an internal error and has terminated
	at net.corda.node.services.statemachine.FlowStateMachineImpl.erroredEnd(FlowStateMachineImpl.kt:500) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:481) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:79) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:35) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
[INFO ] 2019-10-31T05:35:52,480Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-6145143e-c3cf-4fba-9b99-a9183ae0365b.jar {}
[INFO ] 2019-10-31T05:35:52,509Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-1390a6a2-dd93-4911-9ebf-b3cc1e933627.jar {}
[INFO ] 2019-10-31T05:35:52,552Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-6145143e-c3cf-4fba-9b99-a9183ae0365b.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-1390a6a2-dd93-4911-9ebf-b3cc1e933627.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T05:35:52,590Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:35:52,594Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:35:52,610Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-6145143e-c3cf-4fba-9b99-a9183ae0365b.jar {}
[INFO ] 2019-10-31T05:35:52,629Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-1390a6a2-dd93-4911-9ebf-b3cc1e933627.jar {}
[INFO ] 2019-10-31T05:35:52,655Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T05:35:52,712Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T05:35:52,767Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T05:35:52,951Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1fb63857 {}
[INFO ] 2019-10-31T05:35:53,812Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:35:53,880Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:53,887Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:56,342Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:56,988Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:35:56,990Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:57,002Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:35:57,109Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:57,112Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:57,400Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:35:57,551Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:35:57,686Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:35:57,693Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:35:57,796Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T05:35:57,941Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:35:57,943Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:35:57,946Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:35:57,953Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:35:57,959Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:35:58,030Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2F16D84BCA5E629A58917B6BB67F481DCC0C307EC5BE97C935CD4B502659F3C2, not inserting the second time {}
[INFO ] 2019-10-31T05:35:58,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:58,146Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:35:58,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:58,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:58,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:35:58,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:58,164Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:35:58,169Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:35:58,212Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:35:58,240Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@58d2a43e {}
[INFO ] 2019-10-31T05:35:58,267Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:35:58,270Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:58,272Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:58,432Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:58,458Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:35:58,463Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:58,475Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:35:58,492Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:58,494Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:58,646Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:35:58,792Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:35:58,887Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:35:58,891Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:35:58,908Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:35:58,910Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:35:58,912Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:35:58,913Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:35:58,915Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:35:58,929Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E09CE35F7F77402EA7C73A653A24DE01C4FB3C75359D7F256F188E3FAACD467B, not inserting the second time {}
[INFO ] 2019-10-31T05:35:58,937Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:58,944Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:35:58,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:58,962Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:58,964Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:35:58,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:58,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:59,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:35:59,002Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:59,003Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:59,005Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:35:59,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:59,014Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:35:59,015Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:35:59,054Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:35:59,071Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@12559b00 {}
[INFO ] 2019-10-31T05:35:59,088Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:35:59,089Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:59,094Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:59,287Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:59,297Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:35:59,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,303Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:35:59,308Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,309Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,471Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:35:59,612Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:35:59,712Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:35:59,714Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:35:59,744Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:35:59,748Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:35:59,750Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:35:59,751Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:35:59,753Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:35:59,776Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 49E428B5D411C5C798C8F72A8108F10D43149B2925AEC1992EC7E847EC3D3363, not inserting the second time {}
[INFO ] 2019-10-31T05:35:59,792Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:59,800Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:35:59,820Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:35:59,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,827Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:35:59,850Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:59,861Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:35:59,871Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:35:59,879Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,883Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:35:59,894Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,895Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:35:59,902Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:35:59,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:35:59,919Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:35:59,920Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:35:59,936Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:35:59,946Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@61359f17 {}
[INFO ] 2019-10-31T05:35:59,959Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:35:59,961Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:35:59,962Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:00,060Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:00,069Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:00,070Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,075Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:00,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,085Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,278Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:00,416Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:00,506Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:00,508Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:00,523Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:00,525Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:00,526Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:00,528Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:00,529Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:00,542Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CEB96DB780FE5874F4E9AFD37F3980ABE65FE5C0F1E71068D732D04CEDBE0524, not inserting the second time {}
[INFO ] 2019-10-31T05:36:00,549Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:36:00,553Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:00,562Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:36:00,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,566Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:00,575Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,577Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:36:00,579Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:00,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:36:00,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,592Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:00,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,602Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:36:00,605Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:00,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:36:00,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,618Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:00,627Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:00,635Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,637Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,638Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:00,639Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:00,642Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:00,644Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:00,659Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:36:00,675Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2de5b4e3 {}
[INFO ] 2019-10-31T05:36:00,695Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:00,697Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:00,701Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:00,834Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:00,841Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:00,842Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:00,846Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:00,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:00,858Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:00,989Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:01,108Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:01,196Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:01,199Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:01,218Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:01,222Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:01,223Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:01,229Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:01,230Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:01,251Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 700CA7C470883219EE25A7C587AAFEDEC5FBD4A0B62A07FA0CFD54DD0F913D09, not inserting the second time {}
[INFO ] 2019-10-31T05:36:01,259Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:36:01,261Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:01,285Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500156990) {}
[INFO ] 2019-10-31T05:36:01,286Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,291Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:01,308Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:36:01,314Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:01,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500158463) {}
[INFO ] 2019-10-31T05:36:01,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,337Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:01,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,358Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:36:01,360Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:01,376Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572500159298) {}
[INFO ] 2019-10-31T05:36:01,378Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,381Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:01,401Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,403Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:01,405Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:01,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572500160070) {}
[INFO ] 2019-10-31T05:36:01,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,426Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:01,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:01,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,489Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,491Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:01,492Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500160842) {}
[INFO ] 2019-10-31T05:36:01,502Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:01,504Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:01,505Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:01,507Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:01,509Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:01,511Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:01,512Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:01,519Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:02,519Z [Mock network] flow.[bfcf7e65-8227-4a83-b918-5bd0db1b6456].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=9139273618762663629). {}
[INFO ] 2019-10-31T05:36:02,717Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=9139273618762663629). {invocation_id=e69331d8-7639-4923-b803-f96abe6c62c2, invocation_timestamp=2019-10-31T05:36:02.709Z, session_id=e69331d8-7639-4923-b803-f96abe6c62c2, session_timestamp=2019-10-31T05:36:02.709Z}
[INFO ] 2019-10-31T05:36:03,013Z [Mock network] flow.[bfcf7e65-8227-4a83-b918-5bd0db1b6456].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8869336471565572934). {}
[INFO ] 2019-10-31T05:36:03,040Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8869336471565572934). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=93f46617-6e15-4a9e-b762-1bd6f38651ea, invocation_timestamp=2019-10-31T05:36:03.040Z, session_id=93f46617-6e15-4a9e-b762-1bd6f38651ea, session_timestamp=2019-10-31T05:36:03.040Z}
[INFO ] 2019-10-31T05:36:03,170Z [Mock network] flow.[bfcf7e65-8227-4a83-b918-5bd0db1b6456].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7367787697671198786). {}
[INFO ] 2019-10-31T05:36:03,205Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7367787697671198786). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=bbb2241c-f858-4f97-858a-3d2076f5fe2f, invocation_timestamp=2019-10-31T05:36:03.203Z, session_id=bbb2241c-f858-4f97-858a-3d2076f5fe2f, session_timestamp=2019-10-31T05:36:03.203Z}
[INFO ] 2019-10-31T05:36:03,381Z [Mock network] flow.[5180db91-ba29-4430-a96b-38dfafcf1d7a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-9048984671424980540). {}
[INFO ] 2019-10-31T05:36:03,422Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-9048984671424980540). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=9b046559-dec4-472b-9bb9-a867427bebb7, invocation_timestamp=2019-10-31T05:36:03.421Z, session_id=9b046559-dec4-472b-9bb9-a867427bebb7, session_timestamp=2019-10-31T05:36:03.421Z}
[INFO ] 2019-10-31T05:36:03,651Z [Mock network] flow.[5f582645-b034-4b99-9d5d-f679f1d7178a].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=1760850420716358267). {}
[INFO ] 2019-10-31T05:36:03,716Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1760850420716358267). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=1ee1ed21-f6b4-4e61-9f60-a517f65e09ad, invocation_timestamp=2019-10-31T05:36:03.714Z, session_id=1ee1ed21-f6b4-4e61-9f60-a517f65e09ad, session_timestamp=2019-10-31T05:36:03.714Z}
[INFO ] 2019-10-31T05:36:03,741Z [Mock network] flow.[70f6a423-af55-4bec-8483-e4fbf7a4c5dc].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T05:36:03,861Z [Mock network] flow.[70f6a423-af55-4bec-8483-e4fbf7a4c5dc].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T05:36:04,021Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=null, notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T05:36:04,072Z [Mock network] flow.[4789deb9-e5be-4fd1-8d78-615a26567705].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-989275362492607189). {}
[INFO ] 2019-10-31T05:36:04,116Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-989275362492607189). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=b4d3d0f7-cfc1-42d5-acbc-cfd5f06e0e51, invocation_timestamp=2019-10-31T05:36:04.115Z, session_id=b4d3d0f7-cfc1-42d5-acbc-cfd5f06e0e51, session_timestamp=2019-10-31T05:36:04.115Z}
[WARN ] 2019-10-31T05:36:04,140Z [Mock network] flow.[c7744873-d90b-478c-b11d-f6ce1d8d9334].run - Terminated by unexpected exception {}
java.lang.IllegalStateException: A transaction must contain at least one input or output state
	at net.corda.core.transactions.WireTransaction.<init>(WireTransaction.kt:59) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder$toWireTransactionWithContext$1.invoke(TransactionBuilder.kt:114) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder$toWireTransactionWithContext$1.invoke(TransactionBuilder.kt:36) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:66) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:113) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:97) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:95) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toSignedTransaction(TransactionBuilder.kt:222) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.node.ServiceHub$DefaultImpls.signInitialTransaction(ServiceHub.kt:219) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.node.ServiceHub$DefaultImpls.signInitialTransaction(ServiceHub.kt:233) ~[corda-core-3.4-corda.jar:?]
	at net.corda.node.services.api.ServiceHubInternal$DefaultImpls.signInitialTransaction(ServiceHubInternal.kt) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.internal.AbstractNode$ServiceHubInternalImpl.signInitialTransaction(AbstractNode.kt:836) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.node.ServiceHub$DefaultImpls.signInitialTransaction(ServiceHub.kt:242) ~[corda-core-3.4-corda.jar:?]
	at net.corda.node.services.api.ServiceHubInternal$DefaultImpls.signInitialTransaction(ServiceHubInternal.kt) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.internal.AbstractNode$ServiceHubInternalImpl.signInitialTransaction(AbstractNode.kt:836) ~[corda-node-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:128) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Seller.call(AssetTradeFlow.kt:87) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
[WARN ] 2019-10-31T05:36:04,204Z [Mock network] flow.[4789deb9-e5be-4fd1-8d78-615a26567705].run - Terminated by unexpected exception {}
net.corda.core.flows.UnexpectedFlowEndException: Counterparty flow on O=Mock Company 1, L=London, C=GB had an internal error and has terminated
	at net.corda.node.services.statemachine.FlowStateMachineImpl.erroredEnd(FlowStateMachineImpl.kt:500) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.confirmNoError(FlowStateMachineImpl.kt:481) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.waitForMessage(FlowStateMachineImpl.kt:444) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receiveInternal(FlowStateMachineImpl.kt:376) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.receive(FlowStateMachineImpl.kt:229) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:44) ~[corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:48) ~[corda-node-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:74) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:24) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:212) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:197) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:290) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:81) ~[main/:?]
	at com.dz0189.flow.AssetTradeFlow$Buyer.call(AssetTradeFlow.kt:35) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
[INFO ] 2019-10-31T05:36:04,351Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:04,353Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:04,362Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6161937e {}
[INFO ] 2019-10-31T05:36:04,378Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:04,380Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:04,381Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:04,546Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:04,553Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:04,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:04,558Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:04,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:04,566Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:04,708Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:04,834Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:04,985Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:04,987Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:04,998Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T05:36:05,005Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:05,008Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:05,009Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:05,010Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:05,011Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:05,028Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C67728A6FA2C5DDCEB50CF6025491B554A1E0AC58CF4D240EAAB904AC72FAA1D, not inserting the second time {}
[INFO ] 2019-10-31T05:36:05,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:05,048Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:05,049Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:05,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:05,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:05,053Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:05,060Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:05,061Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:05,094Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:36:05,107Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4ff44d39 {}
[INFO ] 2019-10-31T05:36:05,116Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:05,117Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:05,124Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:05,263Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:05,271Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:05,272Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:05,277Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:05,283Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:05,284Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:05,423Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:05,556Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:05,652Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:05,655Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:05,670Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:05,673Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:05,674Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:05,675Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:05,676Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:05,698Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A0AF9ED47FCD5B53F27E4669EBE556B2FBC24A0C3BC3151FF5BD58C063481B9F, not inserting the second time {}
[INFO ] 2019-10-31T05:36:05,704Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:05,706Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:05,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:05,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:05,730Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:05,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:05,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:05,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:05,750Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:05,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:05,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:05,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:05,756Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:05,759Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:05,786Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:36:05,798Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4d3e54bc {}
[INFO ] 2019-10-31T05:36:05,817Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:05,819Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:05,820Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:05,962Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:05,970Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:05,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:05,984Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:05,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:05,995Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:06,223Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:06,352Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:06,435Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:06,437Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:06,451Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:06,453Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:06,454Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:06,455Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:06,458Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:06,469Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1B8F9139C6A4C03F28C4E8AFB433BE9045D774CAFE9FA80BCDE30E4756AF7BC8, not inserting the second time {}
[INFO ] 2019-10-31T05:36:06,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:06,479Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:06,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500164554) {}
[INFO ] 2019-10-31T05:36:06,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:06,488Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:06,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:06,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:06,496Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:06,502Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500165272) {}
[INFO ] 2019-10-31T05:36:06,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:06,504Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:06,510Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:06,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:06,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:06,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:06,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:06,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:06,518Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500165971) {}
[INFO ] 2019-10-31T05:36:06,643Z [Mock network] flow.[2f5cb016-642d-48e1-8577-3718a69d610e].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4014509860782848714). {}
[INFO ] 2019-10-31T05:36:06,709Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4014509860782848714). {invocation_id=4edd5c3d-bac5-4cfe-90fc-03995fce6c91, invocation_timestamp=2019-10-31T05:36:06.708Z, session_id=4edd5c3d-bac5-4cfe-90fc-03995fce6c91, session_timestamp=2019-10-31T05:36:06.708Z}
[INFO ] 2019-10-31T05:36:06,964Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:06,965Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:06,972Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@26c16c63 {}
[INFO ] 2019-10-31T05:36:06,984Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:06,988Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:06,998Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:07,141Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:07,151Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:07,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:07,159Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:07,167Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:07,168Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:07,297Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:07,421Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:07,514Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:07,515Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:07,531Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T05:36:07,539Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:07,540Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:07,541Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:07,541Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:07,542Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:07,559Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 890E2FEFCFB4CD9E248B27B768AC75E8F2E12C3A05A8894B1631FC7B9B674326, not inserting the second time {}
[INFO ] 2019-10-31T05:36:07,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:07,667Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:07,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:07,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:07,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:07,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:07,675Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:07,675Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:07,702Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:36:07,716Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@558cd772 {}
[INFO ] 2019-10-31T05:36:07,728Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:07,729Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:07,730Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:07,853Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:07,862Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:07,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:07,868Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:07,872Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:07,873Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:08,018Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:08,155Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:08,247Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:08,248Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:08,264Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:08,266Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:08,266Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:08,267Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:08,268Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:08,379Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C0C18893B5C2EB94EEA2C404D8BAF38DCA687C851469718A16B84AD72AFDB052, not inserting the second time {}
[INFO ] 2019-10-31T05:36:08,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:08,392Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:08,401Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:08,402Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:08,403Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:08,421Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:08,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:08,426Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:08,427Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:08,428Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:08,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:08,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:08,436Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:08,437Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:08,453Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:36:08,469Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@14afb336 {}
[INFO ] 2019-10-31T05:36:08,479Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:08,480Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:08,482Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:08,596Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:08,604Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:08,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:08,609Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:08,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:08,612Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:08,754Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:08,887Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:08,984Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:08,989Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:09,009Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:09,010Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:09,011Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:09,012Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:09,012Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:09,125Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 976E96FFCF37D85A21C2FAE9FA2C25EB6258A31B888B1DC90CB1CFE4349A7FA0, not inserting the second time {}
[INFO ] 2019-10-31T05:36:09,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:09,134Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:09,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500167155) {}
[INFO ] 2019-10-31T05:36:09,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:09,152Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:09,159Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:09,160Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:09,161Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:09,173Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500167864) {}
[INFO ] 2019-10-31T05:36:09,174Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:09,176Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:09,189Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:09,190Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:09,194Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:09,195Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:09,196Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:09,196Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:09,197Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500168605) {}
[INFO ] 2019-10-31T05:36:09,311Z [Mock network] flow.[87200c0e-4f3e-4ac0-8d0e-7e45a21663be].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=936065769414650494). {}
[INFO ] 2019-10-31T05:36:09,402Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=936065769414650494). {invocation_id=8bc5fa33-c8f2-4abd-8fa7-b1d3d72a4794, invocation_timestamp=2019-10-31T05:36:09.401Z, session_id=8bc5fa33-c8f2-4abd-8fa7-b1d3d72a4794, session_timestamp=2019-10-31T05:36:09.401Z}
[INFO ] 2019-10-31T05:36:09,597Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:09,598Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:09,602Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@263f1592 {}
[INFO ] 2019-10-31T05:36:09,619Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:09,620Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:09,621Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:09,777Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:09,783Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:09,784Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:09,787Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:09,792Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:09,793Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:09,918Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:10,050Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:10,141Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:10,142Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:10,151Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T05:36:10,156Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:10,157Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:10,157Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:10,158Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:10,159Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:10,170Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5B9DA07BDF91FD6D8F945DB91FACDAD8B9AFB5B8878AFFAAD621C7C01ED798DC, not inserting the second time {}
[INFO ] 2019-10-31T05:36:10,174Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:10,177Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:10,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:10,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:10,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:10,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:10,188Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:10,188Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:10,199Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:36:10,206Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6116fa5c {}
[INFO ] 2019-10-31T05:36:10,212Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:10,213Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:10,214Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:10,377Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:10,391Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:10,392Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:10,401Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:10,404Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:10,405Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:10,541Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:10,658Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:10,750Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:10,751Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:10,763Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:10,764Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:10,765Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:10,766Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:10,767Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:10,782Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B8C22B26B535E359F8D72C9025FCDBBE145570A8D6259FAB934F8A2B37218D24, not inserting the second time {}
[INFO ] 2019-10-31T05:36:10,788Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:10,791Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:10,806Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:10,809Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:10,810Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:10,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:10,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:10,821Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:10,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:10,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:10,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:10,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:10,831Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T05:36:10,832Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T05:36:10,847Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T05:36:10,855Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@48a2c32c {}
[INFO ] 2019-10-31T05:36:10,868Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T05:36:10,873Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:10,877Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:11,022Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T05:36:11,029Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T05:36:11,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,034Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:11,039Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,044Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,171Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T05:36:11,296Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T05:36:11,388Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T05:36:11,389Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T05:36:11,400Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T05:36:11,402Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T05:36:11,403Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:11,404Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T05:36:11,404Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T05:36:11,415Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4F99B7D6130374447A780DF1D3292DC5E7ED2CB6956F87C9D63BBABE6ACCF301, not inserting the second time {}
[INFO ] 2019-10-31T05:36:11,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:11,421Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:11,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572500169784) {}
[INFO ] 2019-10-31T05:36:11,431Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,432Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:11,437Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,438Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:11,440Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:11,445Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572500170392) {}
[INFO ] 2019-10-31T05:36:11,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,447Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T05:36:11,452Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,453Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:11,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,457Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[INFO ] 2019-10-31T05:36:11,458Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T05:36:11,458Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572500171030) {}
[WARN ] 2019-10-31T05:36:11,537Z [Mock network] flow.[a194a7fd-0b11-4328-9987-02f04078b083].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 27C2F46A9B710B53D1C99AF370EC93E23692DC0E9CFF68C19AFFD2B15584EF04
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T05:36:11,612Z [Mock network] flow.[a184ba97-282a-4243-9a9c-4cdf44eed071].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1866472350714924636). {}
[INFO ] 2019-10-31T05:36:11,703Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1866472350714924636). {invocation_id=c071fcbd-5002-4d4a-8a03-eaa1daed8720, invocation_timestamp=2019-10-31T05:36:11.702Z, session_id=c071fcbd-5002-4d4a-8a03-eaa1daed8720, session_timestamp=2019-10-31T05:36:11.702Z}
[INFO ] 2019-10-31T22:34:41,764Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-70c9c9e8-de88-47fd-a4de-3c3dad95b013.jar {}
[INFO ] 2019-10-31T22:34:41,784Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-e000bdf7-759e-47dd-b148-1def0ae1fa34.jar {}
[INFO ] 2019-10-31T22:34:41,827Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-70c9c9e8-de88-47fd-a4de-3c3dad95b013.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e000bdf7-759e-47dd-b148-1def0ae1fa34.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T22:34:41,887Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:41,892Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:41,907Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-70c9c9e8-de88-47fd-a4de-3c3dad95b013.jar {}
[INFO ] 2019-10-31T22:34:41,926Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e000bdf7-759e-47dd-b148-1def0ae1fa34.jar {}
[INFO ] 2019-10-31T22:34:41,997Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T22:34:42,058Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T22:34:42,107Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T22:34:42,263Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1ad91fdf {}
[INFO ] 2019-10-31T22:34:43,089Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:43,145Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:43,151Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:45,602Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:46,218Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:46,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:46,234Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:46,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:46,354Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:46,677Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:46,863Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:46,993Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:47,006Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:47,104Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:34:47,241Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:47,246Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:47,248Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:47,251Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:47,254Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:47,346Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B62F9CD61AE108E9EDFFD316FC75FCDD4969761B8318C4F2165FFEF62A3F65CE, not inserting the second time {}
[INFO ] 2019-10-31T22:34:47,437Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:47,460Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:47,463Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:47,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:47,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:47,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:47,479Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:47,483Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:47,528Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:34:47,560Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@bb248dd {}
[INFO ] 2019-10-31T22:34:47,584Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:47,592Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:47,594Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:47,773Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:47,783Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:47,786Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:47,791Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:47,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:47,798Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:47,959Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:48,120Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:48,234Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:48,239Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:48,270Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:48,273Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:48,276Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:48,280Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:48,283Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:48,312Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CC16E8599ADBA26F6DC122174FE593A151B368BD6F12F5E2F050A121DDF07BCF, not inserting the second time {}
[INFO ] 2019-10-31T22:34:48,326Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:48,332Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:48,365Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:48,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:48,376Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:48,400Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:48,401Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:48,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:48,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:48,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:48,412Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:48,413Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:48,417Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:48,418Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:48,436Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:34:48,449Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@17a4a41d {}
[INFO ] 2019-10-31T22:34:48,462Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:48,464Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:48,465Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:48,578Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:48,588Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:48,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:48,596Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:48,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:48,609Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:48,812Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:48,941Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:49,038Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:49,040Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:49,056Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:49,058Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:49,063Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:49,064Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:49,066Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:49,083Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AD81984F55C697B1A98E7E0B775D3F5FAB778613E675E49AC76A1ADAC6CE9826, not inserting the second time {}
[INFO ] 2019-10-31T22:34:49,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:49,101Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:49,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,129Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,154Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:49,167Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,180Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:49,204Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,211Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:49,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,247Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:49,250Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,254Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:49,256Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:49,273Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:34:49,282Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@698459c {}
[INFO ] 2019-10-31T22:34:49,297Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:49,299Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:49,300Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:49,457Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:49,466Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:49,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,471Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,480Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,635Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:49,762Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:49,857Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:49,859Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:49,874Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:49,876Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:49,877Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:49,880Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:49,881Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:49,896Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D0AC4E7AB43824274F6265FA54545818557D3A02ACDD6867D05AA6C47C133F9F, not inserting the second time {}
[INFO ] 2019-10-31T22:34:49,906Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:49,910Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:49,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,924Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:49,938Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:49,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,951Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,962Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,964Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:49,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,978Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:49,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,994Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:49,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:49,997Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:50,000Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:50,002Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:50,007Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:50,010Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:50,029Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:34:50,040Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@52dc2d75 {}
[INFO ] 2019-10-31T22:34:50,053Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:50,055Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:50,057Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:50,200Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:50,208Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:50,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,213Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:50,220Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,224Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,354Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:50,488Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:50,589Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:50,591Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:50,605Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:50,606Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:50,607Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:50,608Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:50,609Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:50,621Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 31DEE28D1256D57531969B87812D147BF9976B4D24E37E55C31E4BD3D6C0FACC, not inserting the second time {}
[INFO ] 2019-10-31T22:34:50,627Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:50,634Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:50,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561286222) {}
[INFO ] 2019-10-31T22:34:50,653Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,658Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:50,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,680Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:50,682Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:50,700Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561287786) {}
[INFO ] 2019-10-31T22:34:50,703Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,706Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:50,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:50,729Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:50,745Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561288589) {}
[INFO ] 2019-10-31T22:34:50,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,749Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:50,769Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,770Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:50,773Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:50,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561289467) {}
[INFO ] 2019-10-31T22:34:50,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,804Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:50,820Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,821Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:50,835Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,837Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:50,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561290209) {}
[INFO ] 2019-10-31T22:34:50,845Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:50,846Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:50,848Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:50,849Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:50,850Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:50,851Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:50,852Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:50,853Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:51,797Z [Mock network] flow.[8d418174-5c9a-4b7f-a83e-96d2e5563e4c].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4883861358368716219). {}
[INFO ] 2019-10-31T22:34:52,053Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4883861358368716219). {invocation_id=ed29aae0-8655-4955-a377-406ff250c76a, invocation_timestamp=2019-10-31T22:34:52.040Z, session_id=ed29aae0-8655-4955-a377-406ff250c76a, session_timestamp=2019-10-31T22:34:52.040Z}
[INFO ] 2019-10-31T22:34:52,424Z [Mock network] flow.[8d418174-5c9a-4b7f-a83e-96d2e5563e4c].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2431333628265311335). {}
[INFO ] 2019-10-31T22:34:52,458Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2431333628265311335). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=bd390bd0-2251-44ac-afdf-1cbee2fbeb39, invocation_timestamp=2019-10-31T22:34:52.456Z, session_id=bd390bd0-2251-44ac-afdf-1cbee2fbeb39, session_timestamp=2019-10-31T22:34:52.456Z}
[INFO ] 2019-10-31T22:34:52,588Z [Mock network] flow.[8d418174-5c9a-4b7f-a83e-96d2e5563e4c].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7605463527214959443). {}
[INFO ] 2019-10-31T22:34:52,633Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7605463527214959443). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b2e18662-c970-45ed-a945-17b7e0d52ff6, invocation_timestamp=2019-10-31T22:34:52.631Z, session_id=b2e18662-c970-45ed-a945-17b7e0d52ff6, session_timestamp=2019-10-31T22:34:52.631Z}
[INFO ] 2019-10-31T22:34:52,875Z [Mock network] flow.[02ccc43f-83d0-49b6-b73e-7f1b2fb3b3e2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5087751006762006347). {}
[INFO ] 2019-10-31T22:34:52,947Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5087751006762006347). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f4dcd228-4772-42e8-a7ed-09ef5e4ae346, invocation_timestamp=2019-10-31T22:34:52.946Z, session_id=f4dcd228-4772-42e8-a7ed-09ef5e4ae346, session_timestamp=2019-10-31T22:34:52.946Z}
[INFO ] 2019-10-31T22:34:53,214Z [Mock network] flow.[10261dfe-0660-431b-a52e-a3a19a8d481e].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=2207052910086078290). {}
[INFO ] 2019-10-31T22:34:53,283Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2207052910086078290). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=763d2733-b64c-4f57-a2be-9dc203e0f9a7, invocation_timestamp=2019-10-31T22:34:53.281Z, session_id=763d2733-b64c-4f57-a2be-9dc203e0f9a7, session_timestamp=2019-10-31T22:34:53.281Z}
[INFO ] 2019-10-31T22:34:53,312Z [Mock network] flow.[bf830427-0bed-4b6b-bdde-f8aacdda86b8].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:53,382Z [Mock network] flow.[bf830427-0bed-4b6b-bdde-f8aacdda86b8].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:53,547Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:34:53,622Z [Mock network] flow.[8e06092f-a5de-4165-8153-6081896e41b0].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5606496971468747063). {}
[INFO ] 2019-10-31T22:34:53,672Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5606496971468747063). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=b8db5cd8-06d7-4bdd-be6a-f4dd0d715c22, invocation_timestamp=2019-10-31T22:34:53.670Z, session_id=b8db5cd8-06d7-4bdd-be6a-f4dd0d715c22, session_timestamp=2019-10-31T22:34:53.670Z}
[INFO ] 2019-10-31T22:34:53,705Z [Mock network] flow.[5c42d23f-b2b2-4816-8960-ef62a2459b96].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:53,770Z [Mock network] flow.[5c42d23f-b2b2-4816-8960-ef62a2459b96].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:53,863Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:34:53,936Z [Mock network] flow.[8e06092f-a5de-4165-8153-6081896e41b0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:53,976Z [Mock network] flow.[8e06092f-a5de-4165-8153-6081896e41b0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:53,978Z [Mock network] flow.[8e06092f-a5de-4165-8153-6081896e41b0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:54,019Z [Mock network] flow.[8e06092f-a5de-4165-8153-6081896e41b0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:54,135Z [Mock network] flow.[5c42d23f-b2b2-4816-8960-ef62a2459b96].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8281047026159639265). {}
[INFO ] 2019-10-31T22:34:54,158Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8281047026159639265). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=eee6a483-a3eb-4813-abf1-283354ee66da, invocation_timestamp=2019-10-31T22:34:54.157Z, session_id=eee6a483-a3eb-4813-abf1-283354ee66da, session_timestamp=2019-10-31T22:34:54.157Z}
[INFO ] 2019-10-31T22:34:54,178Z [Mock network] flow.[2c5b3ff5-5212-447c-a054-c7bbaf3cc673].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:54,237Z [Mock network] flow.[2c5b3ff5-5212-447c-a054-c7bbaf3cc673].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:54,293Z [Mock network] flow.[2c5b3ff5-5212-447c-a054-c7bbaf3cc673].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:54,333Z [Mock network] flow.[2c5b3ff5-5212-447c-a054-c7bbaf3cc673].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:34:54,578Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:54,579Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:54,585Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7239738f {}
[INFO ] 2019-10-31T22:34:54,597Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:54,599Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:54,601Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:54,764Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:54,780Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:54,781Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:54,787Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:54,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:54,799Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:54,962Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:55,132Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:55,225Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:55,228Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:55,252Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:34:55,262Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:55,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:55,264Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:55,265Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:55,268Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:55,282Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A9FF8EDF2D8DF906D065E9A7D63BB34CBAEDC21A8C7CD22A581322DCE6C8D504, not inserting the second time {}
[INFO ] 2019-10-31T22:34:55,290Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:55,294Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:55,296Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:55,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:55,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:55,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:55,307Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:55,308Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:55,342Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:34:55,361Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@798c98e0 {}
[INFO ] 2019-10-31T22:34:55,374Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:55,375Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:55,379Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:55,460Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:55,476Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:55,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:55,490Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:55,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:55,494Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:55,638Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:55,776Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:55,873Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:55,874Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:55,886Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:55,887Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:55,888Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:55,889Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:55,889Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:55,900Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B2DCFA030CC4F9EE09A0D333BE2EC6DDB67EBC6C7EF5086604F407851C2485DB, not inserting the second time {}
[INFO ] 2019-10-31T22:34:55,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:55,969Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:55,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:55,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:55,977Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:55,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:55,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:55,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:55,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:55,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:55,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:55,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:55,993Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:55,994Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:56,007Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:34:56,014Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@a1112e {}
[INFO ] 2019-10-31T22:34:56,025Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:56,026Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:56,027Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:56,157Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:56,170Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:56,173Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,178Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:56,182Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,183Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,313Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:56,444Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:56,546Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:56,548Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:56,560Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:56,561Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:56,562Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:56,563Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:56,565Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:56,575Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6C8681FABAAF6C318F27C1DA8F5BBD5521CF6B361591FF59E473EC940CC7F034, not inserting the second time {}
[INFO ] 2019-10-31T22:34:56,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:56,583Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:56,588Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561294781) {}
[INFO ] 2019-10-31T22:34:56,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,592Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:56,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:56,599Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:56,604Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561295477) {}
[INFO ] 2019-10-31T22:34:56,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,607Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:56,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:56,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,619Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:56,620Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561296173) {}
[INFO ] 2019-10-31T22:34:56,734Z [Mock network] flow.[4f51e44d-3880-4078-851d-3f8b97a96df2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7032060896545434637). {}
[INFO ] 2019-10-31T22:34:56,874Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7032060896545434637). {invocation_id=68ae7271-cc1a-41e6-9947-1260d719cdad, invocation_timestamp=2019-10-31T22:34:56.873Z, session_id=68ae7271-cc1a-41e6-9947-1260d719cdad, session_timestamp=2019-10-31T22:34:56.873Z}
[INFO ] 2019-10-31T22:34:57,091Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:57,093Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:57,098Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5f03cde4 {}
[INFO ] 2019-10-31T22:34:57,108Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:57,109Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:57,110Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:57,197Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:57,212Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:57,213Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:57,217Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:57,225Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:57,227Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:57,355Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:57,519Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:57,617Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:57,619Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:57,630Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:34:57,636Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:57,637Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:57,638Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:57,639Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:57,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:57,651Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4835CFCF7FC3D5CCF3A15936C4268A0361157A48E2164436D49B2FACE9C922B7, not inserting the second time {}
[INFO ] 2019-10-31T22:34:57,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:57,664Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:57,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:57,667Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:57,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:57,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:57,674Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:57,675Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:57,699Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:34:57,712Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@27108117 {}
[INFO ] 2019-10-31T22:34:57,729Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:57,734Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:57,735Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:57,868Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:57,874Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:57,875Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:57,884Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:57,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:57,888Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:58,016Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:58,190Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:58,282Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:58,283Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:58,294Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:58,295Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:58,296Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:58,297Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:58,298Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:58,308Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 35298367C0B7F081EA478D431C6312D010F5BA1FD12B29512B546FBA074E099B, not inserting the second time {}
[INFO ] 2019-10-31T22:34:58,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:58,317Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:58,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:58,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:58,325Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:58,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:58,331Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:58,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:58,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:58,336Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:58,337Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:58,337Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:58,340Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:58,342Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:58,360Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:34:58,376Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@77381014 {}
[INFO ] 2019-10-31T22:34:58,387Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:58,388Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:58,388Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:58,477Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:58,488Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:58,496Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:58,500Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:58,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:58,508Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:58,627Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:58,802Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:58,899Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:58,900Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:58,917Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:58,918Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:58,919Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:58,920Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:58,922Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:58,939Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2DBD78332D6E3EC99D6EBF6AE13389504A1795C174AAB46793349A76A47D6941, not inserting the second time {}
[INFO ] 2019-10-31T22:34:58,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:58,947Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:58,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561297213) {}
[INFO ] 2019-10-31T22:34:58,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:58,968Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:58,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:58,977Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:58,978Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:58,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561297875) {}
[INFO ] 2019-10-31T22:34:58,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:58,999Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:59,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:59,011Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:59,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:59,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:59,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:59,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:59,021Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561298496) {}
[INFO ] 2019-10-31T22:34:59,116Z [Mock network] flow.[5d716ce9-7552-4332-9eef-8f8846fb4a8e].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6600120649197175567). {}
[INFO ] 2019-10-31T22:34:59,182Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6600120649197175567). {invocation_id=dc4432a4-7210-46ba-96ff-c350421fd441, invocation_timestamp=2019-10-31T22:34:59.181Z, session_id=dc4432a4-7210-46ba-96ff-c350421fd441, session_timestamp=2019-10-31T22:34:59.181Z}
[INFO ] 2019-10-31T22:34:59,390Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:59,391Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:59,396Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4077cb64 {}
[INFO ] 2019-10-31T22:34:59,411Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:59,412Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:59,413Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:59,490Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:59,496Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:34:59,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:34:59,500Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:34:59,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:34:59,508Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:34:59,644Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:34:59,817Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:34:59,909Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:34:59,910Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:34:59,923Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:34:59,927Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:34:59,928Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:34:59,929Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:59,930Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:34:59,931Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:34:59,940Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3FB51645C38A7AAA06DDAFD9FBA5888AD4D8269AA67847A3FF2A14360C6E7B64, not inserting the second time {}
[INFO ] 2019-10-31T22:34:59,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:34:59,951Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:59,954Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:34:59,955Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:34:59,955Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:34:59,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:34:59,958Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:34:59,959Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:34:59,969Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:34:59,975Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3f649294 {}
[INFO ] 2019-10-31T22:34:59,984Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:34:59,985Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:34:59,986Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:35:00,052Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:35:00,058Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:35:00,058Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:00,061Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:35:00,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:00,064Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:00,199Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:35:00,359Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:35:00,443Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:35:00,445Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:35:00,456Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:35:00,457Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:35:00,459Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:35:00,460Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:35:00,460Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:35:00,471Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1E3800DBB447EDA1BD58129F57BF213270935E6E6FCD86679493347C56E28276, not inserting the second time {}
[INFO ] 2019-10-31T22:35:00,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:35:00,480Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:35:00,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:35:00,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:00,487Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:35:00,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:00,504Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:00,506Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:35:00,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:00,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:00,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:35:00,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:00,518Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:35:00,518Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:35:00,529Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:35:00,536Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4dbbf25c {}
[INFO ] 2019-10-31T22:35:00,541Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:35:00,542Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:35:00,543Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:35:00,633Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:35:00,642Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:35:00,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:00,646Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:35:00,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:00,659Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:00,791Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:35:00,975Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:35:01,060Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:35:01,061Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:35:01,073Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:35:01,074Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:35:01,075Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:35:01,076Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:35:01,076Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:35:01,087Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1A5F95F05830D4FFC6B96EEF80615F2D028FD557561A42652B3495C22705F1A3, not inserting the second time {}
[INFO ] 2019-10-31T22:35:01,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:35:01,097Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:35:01,103Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561299497) {}
[INFO ] 2019-10-31T22:35:01,104Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:01,105Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:35:01,110Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:01,111Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:01,113Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:35:01,117Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561300058) {}
[INFO ] 2019-10-31T22:35:01,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:01,120Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:35:01,129Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:01,130Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:01,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:35:01,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:01,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[INFO ] 2019-10-31T22:35:01,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:35:01,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561300643) {}
[WARN ] 2019-10-31T22:35:01,181Z [Mock network] flow.[ac32458c-b2aa-44ae-a70b-37243ae90e86].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: A4FE879F5D00477380AFF540A00ADB684BC403CFF4D47F155B913961560019B1
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T22:35:01,236Z [Mock network] flow.[4418f0ec-5987-4c1e-a6a5-2ef2b9d0e465].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8401240918646918734). {}
[INFO ] 2019-10-31T22:35:01,303Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8401240918646918734). {invocation_id=387e958a-4a8a-42f7-916e-c96c158968b2, invocation_timestamp=2019-10-31T22:35:01.295Z, session_id=387e958a-4a8a-42f7-916e-c96c158968b2, session_timestamp=2019-10-31T22:35:01.295Z}
[INFO ] 2019-10-31T22:37:48,299Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-6d1fd068-6376-47d3-aa16-4a8c9566e39b.jar {}
[INFO ] 2019-10-31T22:37:48,330Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-5556c3d6-8a59-4793-b8a2-43c444422ed3.jar {}
[INFO ] 2019-10-31T22:37:48,372Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-6d1fd068-6376-47d3-aa16-4a8c9566e39b.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-5556c3d6-8a59-4793-b8a2-43c444422ed3.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T22:37:48,409Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:37:48,414Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:37:48,431Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-6d1fd068-6376-47d3-aa16-4a8c9566e39b.jar {}
[INFO ] 2019-10-31T22:37:48,453Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-5556c3d6-8a59-4793-b8a2-43c444422ed3.jar {}
[INFO ] 2019-10-31T22:37:48,500Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T22:37:48,561Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T22:37:48,617Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T22:37:48,821Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5375a75b {}
[INFO ] 2019-10-31T22:37:49,647Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:37:49,705Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:49,710Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:51,917Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:52,775Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:37:52,778Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:52,794Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:52,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:52,913Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:53,196Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:37:53,338Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:37:53,437Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:37:53,444Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:37:53,542Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:37:53,677Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:37:53,682Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:37:53,684Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:53,687Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:53,689Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:37:53,741Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2E4810ED3644A5F257CFCA549453CD38B4D98B0BCB97B64D0A01105BBC2DF7AE, not inserting the second time {}
[INFO ] 2019-10-31T22:37:53,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:53,892Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:53,897Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:53,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:53,906Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:53,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:53,919Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:37:53,924Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:37:53,971Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:37:53,997Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@61374265 {}
[INFO ] 2019-10-31T22:37:54,020Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:37:54,026Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:54,028Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:54,188Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:54,199Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:37:54,202Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:54,210Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:54,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:54,229Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:54,399Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:37:54,523Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:37:54,622Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:37:54,626Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:37:54,663Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:37:54,673Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:37:54,677Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:54,682Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:54,684Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:37:54,708Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8E6DD89CC7716E4D50BC450AEF7E1F215A8F44B722E5585957E76DDEBD0705B8, not inserting the second time {}
[INFO ] 2019-10-31T22:37:54,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:54,727Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:54,761Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:54,765Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:54,771Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:54,794Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:54,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:54,803Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:54,808Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:54,811Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:54,812Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:54,814Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:54,822Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:37:54,825Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:37:54,866Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:37:54,881Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1a454cfd {}
[INFO ] 2019-10-31T22:37:54,894Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:37:54,896Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:54,897Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:55,050Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:55,060Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:37:55,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,066Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:55,071Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,073Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,202Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:37:55,365Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:37:55,461Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:37:55,463Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:37:55,478Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:37:55,480Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:37:55,481Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:55,484Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:55,485Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:37:55,504Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 29627C829CD23AF0587294766937B2ADFD1BD88B9CA4707F2F264D35CBC6CF2D, not inserting the second time {}
[INFO ] 2019-10-31T22:37:55,521Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:55,524Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:55,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561472778) {}
[INFO ] 2019-10-31T22:37:55,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,548Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:55,558Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:55,562Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:55,571Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561474202) {}
[INFO ] 2019-10-31T22:37:55,578Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,581Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:55,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:55,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,602Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:55,603Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:55,604Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561475061) {}
[INFO ] 2019-10-31T22:37:56,592Z [Mock network] flow.[197c657e-66c3-48bb-9da4-99f28e873343].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1552570536119060381). {}
[INFO ] 2019-10-31T22:37:56,767Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1552570536119060381). {invocation_id=81a4ff23-cb14-43ea-b22c-091136a1154c, invocation_timestamp=2019-10-31T22:37:56.759Z, session_id=81a4ff23-cb14-43ea-b22c-091136a1154c, session_timestamp=2019-10-31T22:37:56.759Z}
[INFO ] 2019-10-31T22:37:57,166Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:37:57,172Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:37:57,185Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1c8efae1 {}
[INFO ] 2019-10-31T22:37:57,205Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:37:57,210Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:57,212Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:57,443Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:57,456Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:37:57,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:57,471Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:57,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:57,494Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:57,669Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:37:57,811Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:37:57,906Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:37:57,908Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:37:57,919Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:37:57,924Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:37:57,926Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:37:57,927Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:57,928Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:57,929Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:37:57,950Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3A4BCF7B5C0654192DBC00F2A9EDEF13A6B465DD8E2C1927768EA567B0CCA6CB, not inserting the second time {}
[INFO ] 2019-10-31T22:37:57,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:57,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:57,967Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:57,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:57,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:57,978Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:57,983Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:37:57,984Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:37:58,017Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:37:58,032Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2641da3c {}
[INFO ] 2019-10-31T22:37:58,045Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:37:58,047Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:58,048Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:58,174Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:58,194Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:37:58,196Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:58,200Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:58,215Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:58,217Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:58,347Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:37:58,471Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:37:58,555Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:37:58,557Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:37:58,571Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:37:58,573Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:37:58,575Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:58,576Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:58,578Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:37:58,591Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3D0390E6228EE068BB11FAC75CF685B3E89B6EE1FB0898928E515F1F6E818D43, not inserting the second time {}
[INFO ] 2019-10-31T22:37:58,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:58,604Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:58,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:58,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:58,622Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:58,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:58,637Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:58,646Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:58,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:58,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:58,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:58,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:58,655Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:37:58,656Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:37:58,721Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:37:58,733Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7f1f7fc8 {}
[INFO ] 2019-10-31T22:37:58,747Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:37:58,749Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:58,750Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:58,889Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:58,902Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:37:58,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:58,910Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:58,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:58,923Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:59,062Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:37:59,171Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:37:59,262Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:37:59,264Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:37:59,276Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:37:59,277Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:37:59,279Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:59,280Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:37:59,281Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:37:59,295Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0B67CA157E00864DFE2E778EB0701F7EE8FAA2AAA57364D4E149B6C9B6EEF45C, not inserting the second time {}
[INFO ] 2019-10-31T22:37:59,303Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:59,310Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:59,328Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561477462) {}
[INFO ] 2019-10-31T22:37:59,336Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:59,339Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:59,353Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:59,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:59,362Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:59,375Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561478196) {}
[INFO ] 2019-10-31T22:37:59,376Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:59,383Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:37:59,400Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:59,401Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:59,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:59,411Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:59,412Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:59,413Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:37:59,414Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561478905) {}
[INFO ] 2019-10-31T22:37:59,547Z [Mock network] flow.[82c12d5f-39ed-4499-9f23-f82b2e7ebaf8].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4759376019786869977). {}
[INFO ] 2019-10-31T22:37:59,650Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4759376019786869977). {invocation_id=a6d802bb-0f93-469c-a2e8-30d56814db3b, invocation_timestamp=2019-10-31T22:37:59.648Z, session_id=a6d802bb-0f93-469c-a2e8-30d56814db3b, session_timestamp=2019-10-31T22:37:59.648Z}
[INFO ] 2019-10-31T22:37:59,889Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:37:59,893Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:37:59,898Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5ee9449b {}
[INFO ] 2019-10-31T22:37:59,913Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:37:59,915Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:37:59,915Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:00,056Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:00,063Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:00,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:00,067Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:00,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:00,075Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:00,220Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:00,352Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:00,448Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:00,450Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:00,463Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:38:00,469Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:00,470Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:00,471Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:00,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:00,473Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:00,496Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F49AE94F67398E94ABFCCC9209BA8CE634E37C855F1D6F4650BBC7AAD5699364, not inserting the second time {}
[INFO ] 2019-10-31T22:38:00,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:00,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:00,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:00,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:00,518Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:00,525Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:00,528Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:00,529Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:00,554Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:00,567Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3a8bd53b {}
[INFO ] 2019-10-31T22:38:00,580Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:00,581Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:00,582Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:00,728Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:00,739Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:00,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:00,747Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:00,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:00,756Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:00,898Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:01,030Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:01,173Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:01,175Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:01,188Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:01,189Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:01,190Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:01,191Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:01,192Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:01,204Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0C10A5C8F87C0D8795CDBAB82FD8DCB2CAB4908B806C155A844496FCE4BCBCF6, not inserting the second time {}
[INFO ] 2019-10-31T22:38:01,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:01,211Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:01,219Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:01,220Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:01,221Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:01,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:01,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:01,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:01,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:01,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:01,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:01,236Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:01,238Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:01,239Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:01,251Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:01,258Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@472f5dc3 {}
[INFO ] 2019-10-31T22:38:01,268Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:01,269Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:01,270Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:01,388Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:01,395Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:01,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,399Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:01,402Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,403Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,547Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:01,665Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:01,755Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:01,757Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:01,769Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:01,771Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:01,772Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:01,773Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:01,774Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:01,791Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 483D2077FECE67DD2FA4B9E416DCF6B4121FF787092F80ACD47C28C61CCBFFB7, not inserting the second time {}
[INFO ] 2019-10-31T22:38:01,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:01,803Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:01,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561480064) {}
[INFO ] 2019-10-31T22:38:01,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,825Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:01,847Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:01,850Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:01,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561480741) {}
[INFO ] 2019-10-31T22:38:01,866Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,868Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:01,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,879Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,889Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:01,890Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,895Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[INFO ] 2019-10-31T22:38:01,896Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:01,897Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561481396) {}
[WARN ] 2019-10-31T22:38:01,955Z [Mock network] flow.[e1e321a0-0610-4bfe-82c5-e1ed9dc57207].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: AB1AB283E21DC98502A10E812C3CB50E7DA050E542D9C01EE8A73C2509ED3F6E
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T22:38:02,082Z [Mock network] flow.[a7915cb2-b008-4003-b316-fb78a503a653].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5102917694732428053). {}
[INFO ] 2019-10-31T22:38:02,239Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5102917694732428053). {invocation_id=26155357-44c7-4126-8c8c-460e66d4eda9, invocation_timestamp=2019-10-31T22:38:02.239Z, session_id=26155357-44c7-4126-8c8c-460e66d4eda9, session_timestamp=2019-10-31T22:38:02.239Z}
[INFO ] 2019-10-31T22:38:02,432Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:02,436Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:02,448Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6359604f {}
[INFO ] 2019-10-31T22:38:02,468Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:02,469Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:02,470Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:02,550Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:02,557Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:02,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:02,561Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:02,567Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:02,569Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:02,711Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:02,847Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:02,938Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:02,940Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:02,949Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:38:02,954Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:02,955Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:02,956Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:02,957Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:02,958Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:02,969Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1913CB8FEA3A69059713C4949E27287E55107C66DECC089EED3A409EC747E72E, not inserting the second time {}
[INFO ] 2019-10-31T22:38:02,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:02,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:02,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:02,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:02,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:02,985Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:02,989Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:02,989Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:03,001Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:03,008Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c9502d1 {}
[INFO ] 2019-10-31T22:38:03,020Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:03,021Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:03,023Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:03,178Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:03,191Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:03,194Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:03,202Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:03,206Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:03,208Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:03,345Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:03,477Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:03,579Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:03,580Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:03,592Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:03,594Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:03,595Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:03,596Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:03,597Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:03,608Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AAE4B5E6550CBE9D447D8861CB6750A6434889770923FBD9C531F3A12A53E3A6, not inserting the second time {}
[INFO ] 2019-10-31T22:38:03,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:03,615Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:03,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:03,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:03,633Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:03,646Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:03,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:03,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:03,655Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:03,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:03,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:03,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:03,663Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:03,663Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:03,686Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:03,699Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@64513de2 {}
[INFO ] 2019-10-31T22:38:03,710Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:03,712Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:03,713Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:03,825Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:03,831Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:03,832Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:03,835Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:03,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:03,839Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:04,038Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:04,177Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:04,276Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:04,279Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:04,292Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:04,294Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:04,295Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:04,296Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:04,297Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:04,311Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A4A4F6F35EA2AE2B8890323AEACC359D9C58E8120B34900EC31E458C27342A54, not inserting the second time {}
[INFO ] 2019-10-31T22:38:04,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:04,327Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:04,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:04,339Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:04,341Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:04,353Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:04,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:04,362Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:04,372Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:04,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:04,380Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:04,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:04,393Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:04,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:04,400Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:04,400Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:04,401Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:04,402Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:04,405Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:04,406Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:04,428Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:04,440Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@35c1abb1 {}
[INFO ] 2019-10-31T22:38:04,455Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:04,460Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:04,461Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:04,591Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:04,598Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:04,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:04,604Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:04,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:04,612Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:04,755Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:04,883Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:05,021Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:05,024Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:05,040Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:05,042Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:05,043Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:05,044Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:05,045Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:05,056Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F5B33430454EA8B532012EE509E5A0928B74F8D75DC7E80D38894FA207EB600C, not inserting the second time {}
[INFO ] 2019-10-31T22:38:05,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:05,062Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:05,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,075Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,082Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:05,084Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,089Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:05,090Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,093Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,099Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,100Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:05,102Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,107Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:05,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,110Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,116Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:05,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:05,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,126Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:05,127Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:05,138Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:05,146Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@715eedf1 {}
[INFO ] 2019-10-31T22:38:05,156Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:05,157Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:05,158Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:05,238Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:05,250Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:05,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,258Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,262Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,262Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,396Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:05,517Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:05,639Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:05,641Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:05,652Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:05,654Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:05,654Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:05,655Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:05,656Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:05,666Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A790503E394A5575F7D650C26FB6678B376C1F4F43F26CA241AB01579F3E5C0A, not inserting the second time {}
[INFO ] 2019-10-31T22:38:05,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:05,672Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561482557) {}
[INFO ] 2019-10-31T22:38:05,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,679Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,686Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:05,688Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561483194) {}
[INFO ] 2019-10-31T22:38:05,694Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,695Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,700Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,701Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:05,712Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561483832) {}
[INFO ] 2019-10-31T22:38:05,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,730Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,736Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,737Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,745Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,758Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561484599) {}
[INFO ] 2019-10-31T22:38:05,759Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,760Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:05,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,776Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,779Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:05,780Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,783Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,784Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:05,785Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561485254) {}
[INFO ] 2019-10-31T22:38:05,797Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:05,798Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:05,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:05,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:05,800Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:05,801Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:05,801Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:05,802Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:05,939Z [Mock network] flow.[ce5bdb78-72a7-4e0e-a1f0-df1bba9ec145].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-785197284566780586). {}
[INFO ] 2019-10-31T22:38:06,014Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-785197284566780586). {invocation_id=c5644c55-fcb6-4606-bd6e-88c89314b3c4, invocation_timestamp=2019-10-31T22:38:06.013Z, session_id=c5644c55-fcb6-4606-bd6e-88c89314b3c4, session_timestamp=2019-10-31T22:38:06.013Z}
[INFO ] 2019-10-31T22:38:06,212Z [Mock network] flow.[ce5bdb78-72a7-4e0e-a1f0-df1bba9ec145].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8744470274068331103). {}
[INFO ] 2019-10-31T22:38:06,239Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8744470274068331103). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=0763e52f-846c-46ae-8a69-4e770f814ac8, invocation_timestamp=2019-10-31T22:38:06.238Z, session_id=0763e52f-846c-46ae-8a69-4e770f814ac8, session_timestamp=2019-10-31T22:38:06.238Z}
[INFO ] 2019-10-31T22:38:06,307Z [Mock network] flow.[ce5bdb78-72a7-4e0e-a1f0-df1bba9ec145].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7642541451818556408). {}
[INFO ] 2019-10-31T22:38:06,330Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7642541451818556408). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=68a1e8ac-2377-4691-9b6d-9d402fb81294, invocation_timestamp=2019-10-31T22:38:06.329Z, session_id=68a1e8ac-2377-4691-9b6d-9d402fb81294, session_timestamp=2019-10-31T22:38:06.329Z}
[INFO ] 2019-10-31T22:38:06,426Z [Mock network] flow.[5894eb14-8839-4c7e-be31-ce221aa8ddc3].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1343310095423925268). {}
[INFO ] 2019-10-31T22:38:06,464Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1343310095423925268). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c531fdac-0d04-439c-8767-bd31b69c88e1, invocation_timestamp=2019-10-31T22:38:06.463Z, session_id=c531fdac-0d04-439c-8767-bd31b69c88e1, session_timestamp=2019-10-31T22:38:06.463Z}
[INFO ] 2019-10-31T22:38:06,663Z [Mock network] flow.[4ce7c40a-fffd-4a40-82f1-efb445aab410].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=7175844086893932122). {}
[INFO ] 2019-10-31T22:38:06,695Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7175844086893932122). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=ad7317c4-3ddf-4ff7-85b6-61062e2f62ca, invocation_timestamp=2019-10-31T22:38:06.693Z, session_id=ad7317c4-3ddf-4ff7-85b6-61062e2f62ca, session_timestamp=2019-10-31T22:38:06.693Z}
[INFO ] 2019-10-31T22:38:06,724Z [Mock network] flow.[b4b9c9e3-c282-4b57-87d6-06b593e2bd0c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:06,809Z [Mock network] flow.[b4b9c9e3-c282-4b57-87d6-06b593e2bd0c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:06,925Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:38:07,019Z [Mock network] flow.[41a4bebc-9b8c-4f37-9ebf-8dbe6e27ec6f].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6308669252234892902). {}
[INFO ] 2019-10-31T22:38:07,050Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6308669252234892902). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=5ba26769-840d-4a5b-afd7-173b10d079e6, invocation_timestamp=2019-10-31T22:38:07.049Z, session_id=5ba26769-840d-4a5b-afd7-173b10d079e6, session_timestamp=2019-10-31T22:38:07.049Z}
[INFO ] 2019-10-31T22:38:07,071Z [Mock network] flow.[8600b09e-8b0e-4e37-998b-cc1dc3fd5bb0].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,131Z [Mock network] flow.[8600b09e-8b0e-4e37-998b-cc1dc3fd5bb0].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,177Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:38:07,267Z [Mock network] flow.[41a4bebc-9b8c-4f37-9ebf-8dbe6e27ec6f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,340Z [Mock network] flow.[41a4bebc-9b8c-4f37-9ebf-8dbe6e27ec6f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,345Z [Mock network] flow.[41a4bebc-9b8c-4f37-9ebf-8dbe6e27ec6f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,384Z [Mock network] flow.[41a4bebc-9b8c-4f37-9ebf-8dbe6e27ec6f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,501Z [Mock network] flow.[8600b09e-8b0e-4e37-998b-cc1dc3fd5bb0].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4552983736606711323). {}
[INFO ] 2019-10-31T22:38:07,526Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4552983736606711323). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=0e57ef63-da72-4658-a000-2005325d1578, invocation_timestamp=2019-10-31T22:38:07.525Z, session_id=0e57ef63-da72-4658-a000-2005325d1578, session_timestamp=2019-10-31T22:38:07.525Z}
[INFO ] 2019-10-31T22:38:07,538Z [Mock network] flow.[2416f3c5-10db-4a37-864b-13893c181cb1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,659Z [Mock network] flow.[2416f3c5-10db-4a37-864b-13893c181cb1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,661Z [Mock network] flow.[2416f3c5-10db-4a37-864b-13893c181cb1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,701Z [Mock network] flow.[2416f3c5-10db-4a37-864b-13893c181cb1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:07,891Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:07,892Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:07,896Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1cf9f5e8 {}
[INFO ] 2019-10-31T22:38:07,908Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:07,909Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:07,910Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:08,012Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:08,021Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:08,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:08,026Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:08,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:08,037Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:08,177Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:08,288Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:08,377Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:08,380Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:08,391Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:38:08,395Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:08,397Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:08,398Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:08,399Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:08,400Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:08,412Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6E4E10D17D84854CE75ED2FE02FE70BA3243C33FE4746079BA0CD1C611CE013F, not inserting the second time {}
[INFO ] 2019-10-31T22:38:08,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:08,453Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:08,455Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:08,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:08,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:08,457Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:08,463Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:08,464Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:08,490Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:08,497Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5ac607c8 {}
[INFO ] 2019-10-31T22:38:08,508Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:08,509Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:08,510Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:08,585Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:08,591Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:08,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:08,597Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:08,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:08,601Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:08,735Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:08,866Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:08,957Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:08,958Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:08,969Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:08,970Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:08,971Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:08,971Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:08,972Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:08,982Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D41924D48F985A70D103C74BFE20C5E6FD394A496EB0C8F5FEEF9F2530D19F45, not inserting the second time {}
[INFO ] 2019-10-31T22:38:08,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:08,987Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:09,003Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:09,004Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:09,005Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:09,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:09,011Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:09,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:09,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:09,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:09,016Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:09,016Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:09,018Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:09,019Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:09,036Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:09,048Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6df78eed {}
[INFO ] 2019-10-31T22:38:09,087Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:09,089Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:09,090Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:09,150Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:09,156Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:09,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,160Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:09,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,164Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,288Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:09,404Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:09,505Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:09,507Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:09,519Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:09,520Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:09,521Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:09,522Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:09,522Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:09,532Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8820DF74873D6BCA093415BA6087EA0E0F870CF2A37582D162547AEBF827FA8D, not inserting the second time {}
[INFO ] 2019-10-31T22:38:09,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:09,543Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:09,548Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:09,549Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,550Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:09,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,563Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:09,566Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:09,578Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:09,583Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,587Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:09,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:09,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:09,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:09,603Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:09,604Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:09,620Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:09,629Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3bf09042 {}
[INFO ] 2019-10-31T22:38:09,637Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:09,638Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:09,644Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:09,758Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:09,764Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:09,765Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:09,769Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:09,773Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:09,774Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:09,910Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:10,025Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:10,117Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:10,118Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:10,128Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:10,129Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:10,130Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:10,131Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:10,132Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:10,142Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1F120C9880E0C26063A6EEA151F4E209BA836393ED78C0EF91B622ADADF1F816, not inserting the second time {}
[INFO ] 2019-10-31T22:38:10,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:10,150Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:10,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,158Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:10,173Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:10,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,188Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,199Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:10,201Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,212Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:10,218Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,221Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,238Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:10,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:10,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,245Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:38:10,246Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:38:10,262Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:38:10,271Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@a91aa94 {}
[INFO ] 2019-10-31T22:38:10,277Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:38:10,278Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:10,278Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:10,385Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:38:10,420Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:38:10,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,427Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,431Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,432Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,551Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:38:10,670Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:38:10,761Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:38:10,762Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:38:10,772Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:38:10,773Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:10,773Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:10,774Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:10,775Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:38:10,784Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EF6F23577F4C1DDFE2F924BD8C380844F8230E840D87E46D82C9F05D091668F9, not inserting the second time {}
[INFO ] 2019-10-31T22:38:10,788Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:10,789Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,793Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572561488022) {}
[INFO ] 2019-10-31T22:38:10,794Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,795Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:10,802Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,806Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572561488593) {}
[INFO ] 2019-10-31T22:38:10,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,808Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,812Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,812Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:10,813Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572561489157) {}
[INFO ] 2019-10-31T22:38:10,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,819Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,824Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572561489765) {}
[INFO ] 2019-10-31T22:38:10,829Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,830Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:38:10,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:10,837Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,837Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:38:10,839Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572561490423) {}
[INFO ] 2019-10-31T22:38:10,839Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:10,840Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:10,840Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:10,841Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:10,842Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:10,842Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:10,843Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:38:10,843Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:38:10,913Z [Mock network] flow.[d12e2517-2bef-4abf-a650-205e8ba6b84e].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1673110455400656646). {}
[INFO ] 2019-10-31T22:38:10,984Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1673110455400656646). {invocation_id=7df41e00-bc0c-4665-ad13-a970afc89b5b, invocation_timestamp=2019-10-31T22:38:10.979Z, session_id=7df41e00-bc0c-4665-ad13-a970afc89b5b, session_timestamp=2019-10-31T22:38:10.979Z}
[INFO ] 2019-10-31T22:38:11,167Z [Mock network] flow.[d12e2517-2bef-4abf-a650-205e8ba6b84e].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4441141154313056513). {}
[INFO ] 2019-10-31T22:38:11,183Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4441141154313056513). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=bce487fc-bece-4972-be40-748d4140f5de, invocation_timestamp=2019-10-31T22:38:11.182Z, session_id=bce487fc-bece-4972-be40-748d4140f5de, session_timestamp=2019-10-31T22:38:11.182Z}
[INFO ] 2019-10-31T22:38:11,223Z [Mock network] flow.[d12e2517-2bef-4abf-a650-205e8ba6b84e].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=94721964915074221). {}
[INFO ] 2019-10-31T22:38:11,242Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=94721964915074221). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ac0a3329-c41e-4540-b55c-e84770d32741, invocation_timestamp=2019-10-31T22:38:11.241Z, session_id=ac0a3329-c41e-4540-b55c-e84770d32741, session_timestamp=2019-10-31T22:38:11.241Z}
[INFO ] 2019-10-31T22:38:11,336Z [Mock network] flow.[d6c5accb-9b93-43a7-95c1-81ad572185fa].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6074691233068353262). {}
[INFO ] 2019-10-31T22:38:11,373Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6074691233068353262). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c8ae6a38-9cc4-4dcc-b4bc-5487997b7b21, invocation_timestamp=2019-10-31T22:38:11.372Z, session_id=c8ae6a38-9cc4-4dcc-b4bc-5487997b7b21, session_timestamp=2019-10-31T22:38:11.372Z}
[INFO ] 2019-10-31T22:38:11,469Z [Mock network] flow.[bbf5a609-f28c-4390-aa9e-ba73ee524306].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=6013522078786383291). {}
[INFO ] 2019-10-31T22:38:11,505Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6013522078786383291). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=7c1ddc91-6af9-46e1-8187-b70fa345caa5, invocation_timestamp=2019-10-31T22:38:11.503Z, session_id=7c1ddc91-6af9-46e1-8187-b70fa345caa5, session_timestamp=2019-10-31T22:38:11.503Z}
[INFO ] 2019-10-31T22:38:11,515Z [Mock network] flow.[da08f9ad-538f-46da-ab69-bcb91b7f2143].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:11,559Z [Mock network] flow.[da08f9ad-538f-46da-ab69-bcb91b7f2143].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:11,606Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:38:11,624Z [Mock network] flow.[22e3510b-c7f4-4d25-ab7e-fefcda2a92f2].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5850369454794369757). {}
[INFO ] 2019-10-31T22:38:11,636Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5850369454794369757). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=1c136980-c4b5-4c7b-a2f6-e190db6e4807, invocation_timestamp=2019-10-31T22:38:11.635Z, session_id=1c136980-c4b5-4c7b-a2f6-e190db6e4807, session_timestamp=2019-10-31T22:38:11.635Z}
[INFO ] 2019-10-31T22:38:11,646Z [Mock network] flow.[40853fbf-1407-4f74-9e6b-ed43ceb36a53].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:11,679Z [Mock network] flow.[40853fbf-1407-4f74-9e6b-ed43ceb36a53].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:11,730Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:38:11,775Z [Mock network] flow.[22e3510b-c7f4-4d25-ab7e-fefcda2a92f2].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:11,802Z [Mock network] flow.[22e3510b-c7f4-4d25-ab7e-fefcda2a92f2].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:11,803Z [Mock network] flow.[22e3510b-c7f4-4d25-ab7e-fefcda2a92f2].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:11,826Z [Mock network] flow.[22e3510b-c7f4-4d25-ab7e-fefcda2a92f2].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:11,903Z [Mock network] flow.[40853fbf-1407-4f74-9e6b-ed43ceb36a53].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1473301164088743148). {}
[INFO ] 2019-10-31T22:38:11,916Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1473301164088743148). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=8ad5bf91-b5de-4ba5-b2f4-0dc6dccfc4a8, invocation_timestamp=2019-10-31T22:38:11.915Z, session_id=8ad5bf91-b5de-4ba5-b2f4-0dc6dccfc4a8, session_timestamp=2019-10-31T22:38:11.915Z}
[INFO ] 2019-10-31T22:38:11,929Z [Mock network] flow.[e7b5c659-8e3d-4701-8d55-244e196a1138].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:12,000Z [Mock network] flow.[e7b5c659-8e3d-4701-8d55-244e196a1138].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:12,002Z [Mock network] flow.[e7b5c659-8e3d-4701-8d55-244e196a1138].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:38:12,025Z [Mock network] flow.[e7b5c659-8e3d-4701-8d55-244e196a1138].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:58:48,515Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-80efe53e-8baf-4c47-9b9c-7a461ea42ff4.jar {}
[INFO ] 2019-10-31T22:58:48,552Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-65e5ddaa-0857-40a4-8f7a-083f58f39faa.jar {}
[INFO ] 2019-10-31T22:58:48,599Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-80efe53e-8baf-4c47-9b9c-7a461ea42ff4.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-65e5ddaa-0857-40a4-8f7a-083f58f39faa.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T22:58:48,644Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:58:48,654Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:58:48,673Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-80efe53e-8baf-4c47-9b9c-7a461ea42ff4.jar {}
[INFO ] 2019-10-31T22:58:48,693Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-65e5ddaa-0857-40a4-8f7a-083f58f39faa.jar {}
[INFO ] 2019-10-31T22:58:48,730Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T22:58:48,783Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T22:58:48,839Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T22:58:49,003Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@bcf9095 {}
[INFO ] 2019-10-31T22:58:49,843Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:58:49,907Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:49,913Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:52,544Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:53,165Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:58:53,168Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:53,180Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:53,296Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:53,299Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:53,610Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:58:53,784Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:58:53,899Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:58:53,906Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:58:54,005Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:58:54,146Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:58:54,151Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:58:54,154Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:54,156Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:54,159Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:58:54,233Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 17A99FCF1CEA52ACA53734CCDD466B1B3275E9C51C043EE7BD7B0EE57DB39BB7, not inserting the second time {}
[INFO ] 2019-10-31T22:58:54,326Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:54,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:54,359Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:54,361Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:54,363Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:54,365Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:54,371Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:58:54,373Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:58:54,403Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:58:54,416Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@45c4d5fe {}
[INFO ] 2019-10-31T22:58:54,431Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:58:54,433Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:54,435Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:54,603Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:54,624Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:58:54,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:54,644Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:54,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:54,659Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:54,850Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:58:54,984Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:58:55,080Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:58:55,089Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:58:55,112Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:58:55,115Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:58:55,117Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:55,118Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:55,120Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:58:55,135Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3BB50FB8C305530AA8B769D128F11DE81355699D5668088BF2D671484D8760D4, not inserting the second time {}
[INFO ] 2019-10-31T22:58:55,145Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:55,149Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:55,161Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:55,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:55,166Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:55,177Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:55,179Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:55,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:55,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:55,189Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:55,190Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:55,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:55,196Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:58:55,197Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:58:55,219Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:58:55,230Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@48cbc8c3 {}
[INFO ] 2019-10-31T22:58:55,242Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:58:55,244Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:55,246Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:55,396Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:55,423Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:58:55,425Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:55,429Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:55,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:55,436Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:55,577Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:58:55,705Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:58:55,808Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:58:55,812Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:58:55,836Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:58:55,839Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:58:55,842Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:55,844Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:55,846Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:58:55,883Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AD59CBBBE19C2329622A2618FE718D9DADB9DB3AF60900DB50A8165B96645FB7, not inserting the second time {}
[INFO ] 2019-10-31T22:58:55,899Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:55,907Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:55,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562733168) {}
[INFO ] 2019-10-31T22:58:55,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:55,933Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:55,961Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:55,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:55,969Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:55,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562734632) {}
[INFO ] 2019-10-31T22:58:56,003Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:56,007Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:56,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:56,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:56,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:56,027Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:56,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:56,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:56,031Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562735425) {}
[INFO ] 2019-10-31T22:58:57,073Z [Mock network] flow.[704f4c90-503b-4b91-b3d5-e6cdabea65a5].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4138272690662757371). {}
[INFO ] 2019-10-31T22:58:57,296Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4138272690662757371). {invocation_id=e8f5bd6b-3827-45e7-85ee-5de37591ef09, invocation_timestamp=2019-10-31T22:58:57.288Z, session_id=e8f5bd6b-3827-45e7-85ee-5de37591ef09, session_timestamp=2019-10-31T22:58:57.288Z}
[INFO ] 2019-10-31T22:58:57,651Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:58:57,653Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:58:57,660Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7bce4a80 {}
[INFO ] 2019-10-31T22:58:57,673Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:58:57,677Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:57,678Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:57,846Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:57,873Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:58:57,876Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:57,888Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:57,907Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:57,909Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:58,084Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:58:58,226Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:58:58,359Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:58:58,361Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:58:58,383Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:58:58,388Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:58:58,390Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:58:58,395Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:58,397Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:58,398Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:58:58,411Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 93B170842F1A4B00CCB7676E806FC4B6B0193ED8802EE73AB200E44C712D898C, not inserting the second time {}
[INFO ] 2019-10-31T22:58:58,420Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:58,430Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:58,433Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:58,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:58,436Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:58,438Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:58,443Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:58:58,445Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:58:58,480Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:58:58,503Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5799cfed {}
[INFO ] 2019-10-31T22:58:58,517Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:58:58,523Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:58,525Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:58,667Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:58,680Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:58:58,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:58,686Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:58,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:58,691Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:58,822Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:58:58,944Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:58:59,039Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:58:59,042Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:58:59,067Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:58:59,070Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:58:59,071Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:59,072Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:59,074Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:58:59,095Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9617665500000907379FBB08CC769364E1938B1BC4DD42EE457B2E58FE40D849, not inserting the second time {}
[INFO ] 2019-10-31T22:58:59,107Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:59,110Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:59,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:59,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:59,122Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:59,129Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:59,131Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:59,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:59,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:59,140Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:59,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:59,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:59,149Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:58:59,151Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:58:59,184Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:58:59,199Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4010aad9 {}
[INFO ] 2019-10-31T22:58:59,215Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:58:59,219Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:59,222Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:59,344Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:58:59,352Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:58:59,353Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,357Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:59,361Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,362Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,543Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:58:59,672Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:58:59,765Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:58:59,767Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:58:59,781Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:58:59,782Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:58:59,783Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:59,784Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:58:59,785Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:58:59,797Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 492ACBA85DC37BEBD28A59756B04A03977D1330B029D5C155C81275053474F7B, not inserting the second time {}
[INFO ] 2019-10-31T22:58:59,803Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:59,806Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:59,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562737876) {}
[INFO ] 2019-10-31T22:58:59,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,830Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:59,843Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:59,847Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:59,854Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562738682) {}
[INFO ] 2019-10-31T22:58:59,855Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,858Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:58:59,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,866Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,870Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:59,871Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,872Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:58:59,875Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562739353) {}
[INFO ] 2019-10-31T22:58:59,975Z [Mock network] flow.[a7850123-9a3b-4e1e-892a-9dcea58671b6].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-226756808944815920). {}
[INFO ] 2019-10-31T22:59:00,084Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-226756808944815920). {invocation_id=57a1a824-fe9c-4c23-a4e3-cbc0b364f947, invocation_timestamp=2019-10-31T22:59:00.083Z, session_id=57a1a824-fe9c-4c23-a4e3-cbc0b364f947, session_timestamp=2019-10-31T22:59:00.083Z}
[INFO ] 2019-10-31T22:59:00,343Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:00,346Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:00,358Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3cb8c004 {}
[INFO ] 2019-10-31T22:59:00,375Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:00,379Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:00,381Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:00,537Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:00,546Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:00,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:00,555Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:00,568Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:00,569Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:00,772Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:00,907Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:01,002Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:01,004Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:01,019Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:59:01,024Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:01,025Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:01,026Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:01,030Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:01,032Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:01,054Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 40F65406565F8AE1656B001A472FE200A29929C0572FD1400E6A89D3174A9858, not inserting the second time {}
[INFO ] 2019-10-31T22:59:01,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:01,071Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:01,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:01,076Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:01,077Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:01,078Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:01,088Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:01,092Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:01,113Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:01,128Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@8769863 {}
[INFO ] 2019-10-31T22:59:01,148Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:01,152Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:01,153Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:01,280Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:01,295Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:01,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:01,305Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:01,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:01,313Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:01,441Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:01,555Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:01,648Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:01,649Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:01,665Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:01,668Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:01,669Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:01,670Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:01,671Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:01,690Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0FD26BF1BC2CE600B859D4C685DA31C239104C4E13D501A28E5AF03817405F15, not inserting the second time {}
[INFO ] 2019-10-31T22:59:01,696Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:01,700Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:01,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:01,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:01,716Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:01,732Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:01,734Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:01,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:01,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:01,747Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:01,748Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:01,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:01,753Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:01,755Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:01,783Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:01,846Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6e08b89f {}
[INFO ] 2019-10-31T22:59:01,859Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:01,867Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:01,868Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:02,000Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:02,009Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:02,011Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,015Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:02,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,023Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,174Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:02,300Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:02,390Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:02,393Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:02,411Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:02,412Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:02,413Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:02,414Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:02,419Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:02,437Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 80561EA5046A4C63E65CBDB8632D6F615197B3FB6B5A88D0478B1081B5F85C7C, not inserting the second time {}
[INFO ] 2019-10-31T22:59:02,449Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:02,451Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:02,466Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562740547) {}
[INFO ] 2019-10-31T22:59:02,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,477Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:02,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:02,494Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:02,504Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562741297) {}
[INFO ] 2019-10-31T22:59:02,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,508Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:02,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,519Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:02,530Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[INFO ] 2019-10-31T22:59:02,536Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:02,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562742011) {}
[WARN ] 2019-10-31T22:59:02,629Z [Mock network] flow.[db351d75-c525-4992-9e17-4af9b80ab556].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 08DDC197E361132A71A3DC7D52D09578A3C6E1E86F8E0F090FCA636FD3BA97E4
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T22:59:02,749Z [Mock network] flow.[d2b66dcf-2b90-4cc9-b60d-db7d502623de].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4526179923403943947). {}
[INFO ] 2019-10-31T22:59:02,838Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4526179923403943947). {invocation_id=947c32a8-137b-4d4c-8c78-41db6018aed2, invocation_timestamp=2019-10-31T22:59:02.837Z, session_id=947c32a8-137b-4d4c-8c78-41db6018aed2, session_timestamp=2019-10-31T22:59:02.837Z}
[INFO ] 2019-10-31T22:59:03,147Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:03,150Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:03,156Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6b4ce0e0 {}
[INFO ] 2019-10-31T22:59:03,176Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:03,178Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:03,179Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:03,259Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:03,266Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:03,267Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:03,270Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:03,279Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:03,281Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:03,418Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:03,540Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:03,623Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:03,625Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:03,633Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:59:03,638Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:03,639Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:03,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:03,641Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:03,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:03,698Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1E66898BF628F6A7EFC9819AC6AB95FBB1C31F3120E56D640C960F3BA4578371, not inserting the second time {}
[INFO ] 2019-10-31T22:59:03,737Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:03,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:03,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:03,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:03,745Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:03,745Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:03,748Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:03,748Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:03,780Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:03,790Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@40ae8840 {}
[INFO ] 2019-10-31T22:59:03,808Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:03,810Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:03,811Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:03,912Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:03,918Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:03,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:03,923Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:03,926Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:03,926Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:04,061Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:04,186Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:04,273Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:04,275Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:04,286Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:04,288Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:04,288Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:04,289Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:04,290Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:04,301Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AC4EC0A8057B430CE15F94E720A13996DF568C3755A930E62F4C60666039C43C, not inserting the second time {}
[INFO ] 2019-10-31T22:59:04,306Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:04,308Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:04,314Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:04,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:04,321Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:04,328Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:04,329Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:04,332Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:04,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:04,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:04,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:04,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:04,338Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:04,339Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:04,350Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:04,356Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6d885b7e {}
[INFO ] 2019-10-31T22:59:04,367Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:04,369Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:04,370Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:04,491Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:04,501Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:04,502Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,506Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:04,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,509Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,639Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:04,752Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:04,836Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:04,838Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:04,853Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:04,856Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:04,857Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:04,858Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:04,859Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:04,878Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E808EEA0891E45732EA4A95A7F6289FDF666E183EDB218E8B8D6DDC89489CBA6, not inserting the second time {}
[INFO ] 2019-10-31T22:59:04,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:04,895Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:04,901Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:04,903Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,904Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:04,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,911Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:04,912Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:04,918Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:04,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,921Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:04,927Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,928Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:04,932Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,934Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:04,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:04,937Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:04,938Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:04,949Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:04,956Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@221ef2e8 {}
[INFO ] 2019-10-31T22:59:04,964Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:04,965Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:04,966Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:05,063Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:05,069Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:05,071Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,075Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:05,078Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,079Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,272Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:05,409Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:05,499Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:05,502Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:05,514Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:05,515Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:05,516Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:05,516Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:05,517Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:05,533Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CBE03DB6CAE910343587A535FDB359C0599CC6B9AAD736968FC1154FF3894A5D, not inserting the second time {}
[INFO ] 2019-10-31T22:59:05,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:05,539Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:05,549Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:05,550Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,551Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:05,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:05,558Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:05,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:05,566Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,568Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:05,573Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,573Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:05,575Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:05,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:05,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,587Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:05,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:05,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:05,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:05,602Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:05,603Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:05,614Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:05,620Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@69ddd0b5 {}
[INFO ] 2019-10-31T22:59:05,630Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:05,631Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:05,631Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:05,726Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:05,739Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:05,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:05,743Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:05,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:05,747Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:05,944Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:06,079Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:06,169Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:06,171Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:06,182Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:06,184Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:06,184Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:06,185Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:06,186Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:06,199Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 340946D0F72FE7B04B7EC16FB84C2916C7811E99E5209257F82B9AA9408EBB42, not inserting the second time {}
[INFO ] 2019-10-31T22:59:06,206Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:06,209Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:06,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562743267) {}
[INFO ] 2019-10-31T22:59:06,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,225Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:06,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:06,235Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:06,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562743919) {}
[INFO ] 2019-10-31T22:59:06,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,245Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:06,250Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,252Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:06,253Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:06,259Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562744502) {}
[INFO ] 2019-10-31T22:59:06,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,262Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:06,267Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,268Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:06,270Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:06,276Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562745071) {}
[INFO ] 2019-10-31T22:59:06,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,280Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:06,289Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,295Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:06,295Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:06,305Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562745739) {}
[INFO ] 2019-10-31T22:59:06,310Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:06,311Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:06,312Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:06,313Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:06,313Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:06,314Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:06,315Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:06,315Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:06,430Z [Mock network] flow.[0686aad7-353d-40a7-bae4-a264fac41db8].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8671216086840440391). {}
[INFO ] 2019-10-31T22:59:06,555Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8671216086840440391). {invocation_id=1e56be2b-7442-4b99-b6c2-338aa3944b5e, invocation_timestamp=2019-10-31T22:59:06.554Z, session_id=1e56be2b-7442-4b99-b6c2-338aa3944b5e, session_timestamp=2019-10-31T22:59:06.554Z}
[INFO ] 2019-10-31T22:59:06,725Z [Mock network] flow.[0686aad7-353d-40a7-bae4-a264fac41db8].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6424833524002138936). {}
[INFO ] 2019-10-31T22:59:06,738Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6424833524002138936). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=7e3bc583-550d-4e2f-bf0c-de714a935fd3, invocation_timestamp=2019-10-31T22:59:06.737Z, session_id=7e3bc583-550d-4e2f-bf0c-de714a935fd3, session_timestamp=2019-10-31T22:59:06.737Z}
[INFO ] 2019-10-31T22:59:06,793Z [Mock network] flow.[0686aad7-353d-40a7-bae4-a264fac41db8].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-783000745071778806). {}
[INFO ] 2019-10-31T22:59:06,823Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-783000745071778806). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f473e772-c8a8-4a79-9768-1573adbf23b5, invocation_timestamp=2019-10-31T22:59:06.822Z, session_id=f473e772-c8a8-4a79-9768-1573adbf23b5, session_timestamp=2019-10-31T22:59:06.822Z}
[INFO ] 2019-10-31T22:59:06,981Z [Mock network] flow.[278bc768-9de8-45f4-b8cc-698a23d271cb].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5020233538965452523). {}
[INFO ] 2019-10-31T22:59:07,021Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5020233538965452523). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=47cb71f0-ee07-4647-976a-d3a7c2b02fb8, invocation_timestamp=2019-10-31T22:59:07.020Z, session_id=47cb71f0-ee07-4647-976a-d3a7c2b02fb8, session_timestamp=2019-10-31T22:59:07.020Z}
[INFO ] 2019-10-31T22:59:07,212Z [Mock network] flow.[079ed289-cc0c-4503-831c-9a23cb88592d].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=6453351321823585933). {}
[INFO ] 2019-10-31T22:59:07,265Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6453351321823585933). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=4672618c-8319-47f6-b555-3991fc77c423, invocation_timestamp=2019-10-31T22:59:07.263Z, session_id=4672618c-8319-47f6-b555-3991fc77c423, session_timestamp=2019-10-31T22:59:07.263Z}
[INFO ] 2019-10-31T22:59:07,289Z [Mock network] flow.[2160f64d-1234-4b03-9305-a262a68c8aad].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:07,435Z [Mock network] flow.[2160f64d-1234-4b03-9305-a262a68c8aad].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:07,530Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:59:07,592Z [Mock network] flow.[960435ce-8908-4b2d-aa70-c0d5a19d99cf].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3570177795033863992). {}
[INFO ] 2019-10-31T22:59:07,633Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3570177795033863992). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=aca7e5ac-21d8-4336-9c73-a808e66b3212, invocation_timestamp=2019-10-31T22:59:07.632Z, session_id=aca7e5ac-21d8-4336-9c73-a808e66b3212, session_timestamp=2019-10-31T22:59:07.632Z}
[INFO ] 2019-10-31T22:59:07,651Z [Mock network] flow.[d2c8c05f-c6bd-4421-9b92-5ff2e072df8d].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:07,690Z [Mock network] flow.[d2c8c05f-c6bd-4421-9b92-5ff2e072df8d].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:07,786Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:59:07,863Z [Mock network] flow.[960435ce-8908-4b2d-aa70-c0d5a19d99cf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:07,892Z [Mock network] flow.[960435ce-8908-4b2d-aa70-c0d5a19d99cf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:07,894Z [Mock network] flow.[960435ce-8908-4b2d-aa70-c0d5a19d99cf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:07,919Z [Mock network] flow.[960435ce-8908-4b2d-aa70-c0d5a19d99cf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:08,052Z [Mock network] flow.[d2c8c05f-c6bd-4421-9b92-5ff2e072df8d].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1415409213994670934). {}
[INFO ] 2019-10-31T22:59:08,077Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1415409213994670934). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=301a71de-dde6-4d3a-939d-17ea6fffdd35, invocation_timestamp=2019-10-31T22:59:08.076Z, session_id=301a71de-dde6-4d3a-939d-17ea6fffdd35, session_timestamp=2019-10-31T22:59:08.076Z}
[INFO ] 2019-10-31T22:59:08,092Z [Mock network] flow.[b43c9d86-c530-4b31-aa5e-f50bdba55bf0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:08,157Z [Mock network] flow.[b43c9d86-c530-4b31-aa5e-f50bdba55bf0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:08,158Z [Mock network] flow.[b43c9d86-c530-4b31-aa5e-f50bdba55bf0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:08,192Z [Mock network] flow.[b43c9d86-c530-4b31-aa5e-f50bdba55bf0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:08,400Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:08,402Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:08,409Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4d8b4b93 {}
[INFO ] 2019-10-31T22:59:08,418Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:08,419Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:08,419Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:08,526Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:08,543Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:08,544Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:08,548Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:08,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:08,558Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:08,720Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:08,835Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:08,925Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:08,927Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:08,936Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T22:59:08,940Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:08,941Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:08,942Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:08,943Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:08,943Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:08,955Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C5A79B80242808F833B9D58312D6A60D5093E23DCCB818ACAB32630DAF6C925C, not inserting the second time {}
[INFO ] 2019-10-31T22:59:08,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:08,962Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:08,962Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:08,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:08,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:08,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:08,975Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:08,975Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:08,988Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:08,994Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7b5e84aa {}
[INFO ] 2019-10-31T22:59:09,003Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:09,004Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:09,005Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:09,066Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:09,071Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:09,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:09,075Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:09,078Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:09,078Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:09,195Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:09,331Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:09,419Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:09,420Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:09,432Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:09,433Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:09,434Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:09,434Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:09,435Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:09,448Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7CD0876C61EEA11A34DB86FFB3B85452ECC017CADC0EBE1C55279B036017DDB7, not inserting the second time {}
[INFO ] 2019-10-31T22:59:09,454Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:09,456Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:09,471Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:09,483Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:09,485Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:09,490Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:09,492Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:09,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:09,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:09,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:09,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:09,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:09,506Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:09,513Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:09,527Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:09,539Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4aa550b1 {}
[INFO ] 2019-10-31T22:59:09,545Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:09,546Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:09,547Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:09,604Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:09,610Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:09,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:09,613Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:09,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:09,616Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:09,739Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:09,877Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:09,963Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:09,964Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:09,974Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:09,975Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:09,976Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:09,976Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:09,977Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:09,991Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F903A4218BFD3E6C395E0C17957CE2E91F2404BCB7489704587A89DB3DF4D62F, not inserting the second time {}
[INFO ] 2019-10-31T22:59:09,996Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:09,997Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,002Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:10,003Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,004Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,011Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:10,013Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:10,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,020Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:10,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:10,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,032Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:10,033Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:10,043Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:10,048Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@530e7ca2 {}
[INFO ] 2019-10-31T22:59:10,056Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:10,057Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:10,057Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:10,114Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:10,119Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:10,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,123Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,125Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,126Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,267Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:10,400Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:10,510Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:10,512Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:10,527Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:10,528Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:10,529Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:10,529Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:10,530Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:10,540Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 61CD8EBABABC916E21E7CA02F5059FC96E237BD08445B8514382B4C8A74582DA, not inserting the second time {}
[INFO ] 2019-10-31T22:59:10,544Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:10,546Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:10,555Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,556Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,567Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,567Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:10,568Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:10,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,592Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,600Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:10,606Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,607Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:10,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:10,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:10,621Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T22:59:10,621Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T22:59:10,631Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T22:59:10,636Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1f939cb8 {}
[INFO ] 2019-10-31T22:59:10,642Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T22:59:10,643Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:10,644Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:10,719Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T22:59:10,725Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T22:59:10,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:10,729Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:10,731Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:10,732Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:10,846Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T22:59:10,962Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T22:59:11,051Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T22:59:11,053Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T22:59:11,063Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T22:59:11,064Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:11,065Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:11,065Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:11,066Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T22:59:11,077Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8DEB471000C3BB8F464CEDCF4BC32E1EDE0D40FCBA472FE9CDAB01F4FD25359F, not inserting the second time {}
[INFO ] 2019-10-31T22:59:11,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:11,082Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:11,087Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572562748544) {}
[INFO ] 2019-10-31T22:59:11,088Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,089Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:11,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:11,096Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:11,100Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572562749072) {}
[INFO ] 2019-10-31T22:59:11,100Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,101Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:11,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:11,107Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:11,111Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572562749611) {}
[INFO ] 2019-10-31T22:59:11,112Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,113Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:11,117Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:11,119Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:11,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572562750120) {}
[INFO ] 2019-10-31T22:59:11,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,124Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T22:59:11,128Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,129Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,131Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:11,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T22:59:11,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572562750726) {}
[INFO ] 2019-10-31T22:59:11,134Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:11,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:11,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:11,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:11,137Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:11,137Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:11,160Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T22:59:11,162Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T22:59:11,229Z [Mock network] flow.[969e0dc0-fd4d-4ddc-aadd-2f2b844f98e4].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3966696311173719524). {}
[INFO ] 2019-10-31T22:59:11,289Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3966696311173719524). {invocation_id=53389dd0-20c2-4bfd-b08d-3bdcbf9943d4, invocation_timestamp=2019-10-31T22:59:11.288Z, session_id=53389dd0-20c2-4bfd-b08d-3bdcbf9943d4, session_timestamp=2019-10-31T22:59:11.288Z}
[INFO ] 2019-10-31T22:59:11,425Z [Mock network] flow.[969e0dc0-fd4d-4ddc-aadd-2f2b844f98e4].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2040081002732281542). {}
[INFO ] 2019-10-31T22:59:11,448Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2040081002732281542). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f1167fb6-5ae7-4060-bd0f-10affe62fcc2, invocation_timestamp=2019-10-31T22:59:11.447Z, session_id=f1167fb6-5ae7-4060-bd0f-10affe62fcc2, session_timestamp=2019-10-31T22:59:11.447Z}
[INFO ] 2019-10-31T22:59:11,495Z [Mock network] flow.[969e0dc0-fd4d-4ddc-aadd-2f2b844f98e4].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1311395810307100894). {}
[INFO ] 2019-10-31T22:59:11,528Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1311395810307100894). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=38864f10-7d96-4edd-9696-e2e81b746cd1, invocation_timestamp=2019-10-31T22:59:11.527Z, session_id=38864f10-7d96-4edd-9696-e2e81b746cd1, session_timestamp=2019-10-31T22:59:11.527Z}
[INFO ] 2019-10-31T22:59:11,640Z [Mock network] flow.[9da90a69-4f42-4207-90ef-b1f06ac6a02d].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3278654632523316331). {}
[INFO ] 2019-10-31T22:59:11,679Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3278654632523316331). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=9e574a41-9944-4580-98f4-750f635a01c9, invocation_timestamp=2019-10-31T22:59:11.677Z, session_id=9e574a41-9944-4580-98f4-750f635a01c9, session_timestamp=2019-10-31T22:59:11.677Z}
[INFO ] 2019-10-31T22:59:11,776Z [Mock network] flow.[0ba0e707-4348-4b36-b032-c22bb2459e4b].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-4202479178010156554). {}
[INFO ] 2019-10-31T22:59:11,824Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4202479178010156554). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=30b33d4d-d142-4e9e-8653-54e5e67aaf32, invocation_timestamp=2019-10-31T22:59:11.823Z, session_id=30b33d4d-d142-4e9e-8653-54e5e67aaf32, session_timestamp=2019-10-31T22:59:11.823Z}
[INFO ] 2019-10-31T22:59:11,837Z [Mock network] flow.[75ab5eaa-32dd-45a1-a7a1-491b0bbb872a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:11,906Z [Mock network] flow.[75ab5eaa-32dd-45a1-a7a1-491b0bbb872a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:11,980Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:59:11,998Z [Mock network] flow.[284cfa16-e357-47f0-850d-a977cdc74d5e].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4050166621846375065). {}
[INFO ] 2019-10-31T22:59:12,010Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4050166621846375065). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=c6bd66b9-d1dc-4501-8abd-9d6d79311c48, invocation_timestamp=2019-10-31T22:59:12.009Z, session_id=c6bd66b9-d1dc-4501-8abd-9d6d79311c48, session_timestamp=2019-10-31T22:59:12.009Z}
[INFO ] 2019-10-31T22:59:12,018Z [Mock network] flow.[e7b321ba-6b29-40f6-a893-56cc4fbe1371].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:12,054Z [Mock network] flow.[e7b321ba-6b29-40f6-a893-56cc4fbe1371].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:12,099Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T22:59:12,132Z [Mock network] flow.[284cfa16-e357-47f0-850d-a977cdc74d5e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:12,156Z [Mock network] flow.[284cfa16-e357-47f0-850d-a977cdc74d5e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:12,160Z [Mock network] flow.[284cfa16-e357-47f0-850d-a977cdc74d5e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:12,184Z [Mock network] flow.[284cfa16-e357-47f0-850d-a977cdc74d5e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:12,273Z [Mock network] flow.[e7b321ba-6b29-40f6-a893-56cc4fbe1371].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4079890649493307157). {}
[INFO ] 2019-10-31T22:59:12,286Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4079890649493307157). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=b2db9d3d-117d-4b38-beca-fde7464f3cd2, invocation_timestamp=2019-10-31T22:59:12.285Z, session_id=b2db9d3d-117d-4b38-beca-fde7464f3cd2, session_timestamp=2019-10-31T22:59:12.285Z}
[INFO ] 2019-10-31T22:59:12,296Z [Mock network] flow.[538db707-d55a-445f-95c6-ea73f9fb3f32].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:12,331Z [Mock network] flow.[538db707-d55a-445f-95c6-ea73f9fb3f32].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:12,332Z [Mock network] flow.[538db707-d55a-445f-95c6-ea73f9fb3f32].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T22:59:12,349Z [Mock network] flow.[538db707-d55a-445f-95c6-ea73f9fb3f32].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:06,725Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-e613367c-5310-48bb-9184-f1f8112efba2.jar {}
[INFO ] 2019-10-31T23:11:06,745Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-4ee055ff-a6fb-47c8-b1ba-c0ea1b7ba391.jar {}
[INFO ] 2019-10-31T23:11:06,787Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e613367c-5310-48bb-9184-f1f8112efba2.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-4ee055ff-a6fb-47c8-b1ba-c0ea1b7ba391.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T23:11:06,824Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:06,829Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:06,844Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-e613367c-5310-48bb-9184-f1f8112efba2.jar {}
[INFO ] 2019-10-31T23:11:06,870Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-4ee055ff-a6fb-47c8-b1ba-c0ea1b7ba391.jar {}
[INFO ] 2019-10-31T23:11:06,940Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T23:11:07,007Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T23:11:07,074Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T23:11:07,266Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@46ab967a {}
[INFO ] 2019-10-31T23:11:08,107Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:08,169Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:08,174Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:10,617Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:11,250Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:11,253Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:11,265Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:11,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:11,373Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:11,756Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:11,938Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:12,064Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:12,076Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:12,190Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:11:12,348Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:12,354Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:12,361Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:12,364Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:12,368Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:12,437Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AB90C180A5711DDC5E0AF733DBFD45A378211477EF57B915A39AC03FCAF30EB6, not inserting the second time {}
[INFO ] 2019-10-31T23:11:12,551Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:12,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:12,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:12,583Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:12,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:12,587Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:12,593Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:12,595Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:12,618Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:12,631Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1c341eb6 {}
[INFO ] 2019-10-31T23:11:12,644Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:12,647Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:12,649Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:12,827Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:12,850Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:12,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:12,868Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:12,893Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:12,897Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:13,092Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:13,259Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:13,372Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:13,387Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:13,421Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:13,427Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:13,430Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:13,434Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:13,437Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:13,465Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0801AEC2635BFCEB8C2E7B23BAD1B65951F9F8AEEBB4563D3B95FC5C685EE195, not inserting the second time {}
[INFO ] 2019-10-31T23:11:13,482Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:13,488Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:13,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:13,522Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:13,528Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:13,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:13,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:13,569Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:13,573Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:13,575Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:13,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:13,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:13,589Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:13,591Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:13,632Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:13,653Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@62ec4a7c {}
[INFO ] 2019-10-31T23:11:13,671Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:13,673Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:13,675Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:13,844Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:13,865Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:13,871Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:13,877Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:13,888Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:13,890Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:14,077Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:14,218Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:14,317Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:14,319Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:14,341Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:14,344Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:14,345Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:14,346Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:14,348Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:14,373Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F02E39090411979A23F777C1E752D2BE13D2AA721C7D782EFC4D59B8665EC78A, not inserting the second time {}
[INFO ] 2019-10-31T23:11:14,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:14,391Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:14,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563471253) {}
[INFO ] 2019-10-31T23:11:14,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:14,412Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:14,421Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:14,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:14,425Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:14,438Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563472853) {}
[INFO ] 2019-10-31T23:11:14,452Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:14,460Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:14,470Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:14,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:14,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:14,478Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:14,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:14,482Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:14,483Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563473871) {}
[INFO ] 2019-10-31T23:11:15,626Z [Mock network] flow.[bf004b70-6ef5-41c9-9ea1-dabb9855f9c9].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=9211708238676093876). {}
[INFO ] 2019-10-31T23:11:15,879Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=9211708238676093876). {invocation_id=47722d32-1493-4f8e-8323-c56fd6561589, invocation_timestamp=2019-10-31T23:11:15.861Z, session_id=47722d32-1493-4f8e-8323-c56fd6561589, session_timestamp=2019-10-31T23:11:15.861Z}
[INFO ] 2019-10-31T23:11:16,246Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:16,248Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:16,255Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@686959b8 {}
[INFO ] 2019-10-31T23:11:16,268Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:16,270Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:16,271Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:16,425Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:16,433Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:16,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:16,439Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:16,450Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:16,451Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:16,620Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:16,761Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:16,863Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:16,865Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:16,888Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:11:16,899Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:16,902Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:16,905Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:16,906Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:16,907Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:16,932Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 29C00B138638380BCC5D478FD233B823209A30BB5E40490322806ABAC05C63AD, not inserting the second time {}
[INFO ] 2019-10-31T23:11:16,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:16,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:16,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:16,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:16,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:16,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:16,963Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:16,964Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:16,991Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:17,000Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@61854702 {}
[INFO ] 2019-10-31T23:11:17,012Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:17,014Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:17,015Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:17,143Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:17,151Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:17,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:17,157Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:17,162Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:17,163Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:17,347Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:17,473Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:17,563Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:17,565Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:17,580Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:17,582Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:17,583Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:17,585Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:17,586Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:17,599Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 818C7DD96D6CBAB717928296870946F563C9F9D1959FA5A1EB2D337972AAD71B, not inserting the second time {}
[INFO ] 2019-10-31T23:11:17,608Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:17,611Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:17,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:17,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:17,625Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:17,633Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:17,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:17,639Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:17,640Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:17,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:17,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:17,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:17,647Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:17,648Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:17,665Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:17,674Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3e3f353b {}
[INFO ] 2019-10-31T23:11:17,686Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:17,688Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:17,690Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:17,847Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:17,855Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:17,856Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:17,860Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:17,870Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:17,872Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:18,026Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:18,164Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:18,255Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:18,257Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:18,271Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:18,273Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:18,274Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:18,275Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:18,276Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:18,291Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 39AA45F0DF6D36760191650AF24AFB8AEB28C3B8E3DCB41E15D54D14A5CB8A89, not inserting the second time {}
[INFO ] 2019-10-31T23:11:18,306Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:18,309Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:18,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563476435) {}
[INFO ] 2019-10-31T23:11:18,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:18,336Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:18,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:18,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:18,361Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:18,372Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563477153) {}
[INFO ] 2019-10-31T23:11:18,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:18,385Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:18,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:18,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:18,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:18,416Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:18,421Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:18,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:18,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563477856) {}
[INFO ] 2019-10-31T23:11:18,644Z [Mock network] flow.[204f90fe-0990-4284-9371-d358cedd9d71].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4945925647321605403). {}
[INFO ] 2019-10-31T23:11:18,751Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4945925647321605403). {invocation_id=1a973ac1-0aa9-4741-beda-95ab64edb1be, invocation_timestamp=2019-10-31T23:11:18.749Z, session_id=1a973ac1-0aa9-4741-beda-95ab64edb1be, session_timestamp=2019-10-31T23:11:18.749Z}
[INFO ] 2019-10-31T23:11:19,037Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:19,043Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:19,056Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3c7128e1 {}
[INFO ] 2019-10-31T23:11:19,070Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:19,073Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:19,074Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:19,255Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:19,264Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:19,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:19,272Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:19,288Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:19,291Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:19,434Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:19,559Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:19,650Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:19,652Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:19,668Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:11:19,673Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:19,677Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:19,678Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:19,680Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:19,681Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:19,734Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AB57F7E2E8D83171A2EF434C76506A677D033F25EBCA4CA0FB34481164C0CBE7, not inserting the second time {}
[INFO ] 2019-10-31T23:11:19,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:19,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:19,757Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:19,759Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:19,760Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:19,761Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:19,764Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:19,765Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:19,799Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:19,814Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@143a040c {}
[INFO ] 2019-10-31T23:11:19,842Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:19,844Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:19,845Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:19,973Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:19,987Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:19,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:19,995Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:20,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:20,005Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:20,129Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:20,249Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:20,340Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:20,341Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:20,353Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:20,355Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:20,356Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:20,357Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:20,358Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:20,369Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 08F4D3E98B37983C8A992CF7D7E73FF46FC035ED8A1B9E4B6D76BFE0AC3333C3, not inserting the second time {}
[INFO ] 2019-10-31T23:11:20,377Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:20,384Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:20,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:20,403Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:20,405Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:20,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:20,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:20,436Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:20,437Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:20,438Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:20,440Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:20,441Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:20,443Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:20,444Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:20,467Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:20,480Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@36d60ea1 {}
[INFO ] 2019-10-31T23:11:20,492Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:20,499Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:20,500Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:20,610Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:20,617Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:20,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:20,621Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:20,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:20,629Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:20,845Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:20,983Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:21,083Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:21,086Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:21,104Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:21,105Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:21,107Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:21,110Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:21,112Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:21,130Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A346A12C626B02CC5A780A05CBA30C4553C94C2EBCE2CA77E3583BB2F4AB77F1, not inserting the second time {}
[INFO ] 2019-10-31T23:11:21,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:21,143Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:21,161Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563479266) {}
[INFO ] 2019-10-31T23:11:21,166Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:21,168Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:21,174Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:21,179Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:21,182Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:21,194Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563479989) {}
[INFO ] 2019-10-31T23:11:21,196Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:21,198Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:21,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:21,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:21,216Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:21,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:21,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[INFO ] 2019-10-31T23:11:21,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:21,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563480618) {}
[WARN ] 2019-10-31T23:11:21,304Z [Mock network] flow.[4637831c-b2b8-410b-979a-ce58a77f57ff].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 93C4ABBB5E82FDEDAF4CCAFD978C9942F0B9EEAC61FDE4BE913F9261270790B8
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T23:11:21,407Z [Mock network] flow.[17103779-58a6-40e5-abe3-51bf8a3a629c].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6387452203331069731). {}
[INFO ] 2019-10-31T23:11:21,483Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6387452203331069731). {invocation_id=acd9728c-2c35-4774-b441-c019518d5581, invocation_timestamp=2019-10-31T23:11:21.481Z, session_id=acd9728c-2c35-4774-b441-c019518d5581, session_timestamp=2019-10-31T23:11:21.481Z}
[INFO ] 2019-10-31T23:11:21,693Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:21,694Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:21,699Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@39a61f1f {}
[INFO ] 2019-10-31T23:11:21,709Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:21,711Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:21,711Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:21,864Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:21,873Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:21,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:21,878Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:21,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:21,888Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:22,022Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:22,163Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:22,254Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:22,256Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:22,264Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:11:22,270Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:22,271Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:22,272Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:22,273Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:22,274Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:22,285Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6336DE8999C2F8B3781B7CB53A8C72321797AD3FE3AF30D347CD58ECFF4212E6, not inserting the second time {}
[INFO ] 2019-10-31T23:11:22,295Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:22,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:22,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:22,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:22,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:22,301Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:22,305Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:22,305Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:22,332Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:22,343Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@39ebd6d {}
[INFO ] 2019-10-31T23:11:22,352Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:22,354Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:22,355Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:22,433Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:22,441Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:22,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:22,445Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:22,450Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:22,451Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:22,637Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:22,783Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:22,879Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:22,881Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:22,892Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:22,893Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:22,894Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:22,895Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:22,896Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:22,907Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 60655B47A709898BE04C620D45AB087C8EDE2371B05F211D1AEE01C3AF77D297, not inserting the second time {}
[INFO ] 2019-10-31T23:11:22,911Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:22,916Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:22,922Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:22,923Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:22,927Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:22,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:22,934Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:22,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:22,937Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:22,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:22,939Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:22,939Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:22,942Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:22,942Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:22,961Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:22,967Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3f1e74af {}
[INFO ] 2019-10-31T23:11:22,973Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:22,974Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:22,975Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:23,063Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:23,069Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:23,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,077Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:23,080Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,081Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,213Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:23,428Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:23,523Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:23,524Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:23,537Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:23,538Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:23,539Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:23,540Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:23,541Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:23,552Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BA1C824CA189C7CF0E615680F7150D24A1290FAAF7E0835606D4795D4EF7F867, not inserting the second time {}
[INFO ] 2019-10-31T23:11:23,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:23,559Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:23,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:23,566Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,569Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:23,578Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:23,584Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:23,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:23,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,592Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:23,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:23,602Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,602Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,603Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:23,604Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:23,606Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:23,607Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:23,618Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:23,624Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6f2f1701 {}
[INFO ] 2019-10-31T23:11:23,632Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:23,633Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:23,634Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:23,698Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:23,704Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:23,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:23,708Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:23,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:23,711Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:23,847Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:23,978Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:24,141Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:24,142Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:24,153Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:24,155Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:24,155Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:24,156Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:24,157Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:24,172Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 443B750EDEFFF2C2F5AE1D1490E05B4C90E50E968E96C706FFC2DABC816465F3, not inserting the second time {}
[INFO ] 2019-10-31T23:11:24,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:24,183Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:24,201Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,203Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:24,210Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,215Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:24,216Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,217Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:24,225Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,230Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:24,231Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,232Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,238Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,238Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:24,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:24,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,246Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:24,247Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:24,258Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:24,265Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1d1235d1 {}
[INFO ] 2019-10-31T23:11:24,271Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:24,272Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:24,272Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:24,335Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:24,341Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:24,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,345Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,348Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,348Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,483Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:24,664Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:24,755Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:24,757Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:24,768Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:24,769Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:24,770Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:24,771Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:24,772Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:24,783Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6A122A5F3E6EB1601625A9C0CFB0891EED0D945B89E7E76FC5C322D134CA06F2, not inserting the second time {}
[INFO ] 2019-10-31T23:11:24,788Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:24,790Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563481874) {}
[INFO ] 2019-10-31T23:11:24,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,799Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,804Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,805Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:24,806Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,811Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563482442) {}
[INFO ] 2019-10-31T23:11:24,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,817Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,826Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:24,830Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563483072) {}
[INFO ] 2019-10-31T23:11:24,837Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,838Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,844Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,846Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563483705) {}
[INFO ] 2019-10-31T23:11:24,853Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,854Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:24,859Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,863Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:24,863Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:24,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563484342) {}
[INFO ] 2019-10-31T23:11:24,875Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:24,878Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:24,879Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:24,881Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:24,882Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:24,883Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:24,886Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:24,887Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:24,974Z [Mock network] flow.[a03c974e-f3e0-4944-a00b-80128a91caca].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4222632244935732536). {}
[INFO ] 2019-10-31T23:11:25,048Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4222632244935732536). {invocation_id=042bb642-ea0c-4ba2-9dc3-2f50971b0196, invocation_timestamp=2019-10-31T23:11:25.047Z, session_id=042bb642-ea0c-4ba2-9dc3-2f50971b0196, session_timestamp=2019-10-31T23:11:25.047Z}
[INFO ] 2019-10-31T23:11:25,300Z [Mock network] flow.[a03c974e-f3e0-4944-a00b-80128a91caca].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1104903402376198269). {}
[INFO ] 2019-10-31T23:11:25,325Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1104903402376198269). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=4ab07152-e984-44c9-bc61-048a221204b6, invocation_timestamp=2019-10-31T23:11:25.324Z, session_id=4ab07152-e984-44c9-bc61-048a221204b6, session_timestamp=2019-10-31T23:11:25.324Z}
[INFO ] 2019-10-31T23:11:25,372Z [Mock network] flow.[a03c974e-f3e0-4944-a00b-80128a91caca].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8663416843448068383). {}
[INFO ] 2019-10-31T23:11:25,395Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8663416843448068383). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1943a735-5f42-4141-825a-827d3f5c5d1f, invocation_timestamp=2019-10-31T23:11:25.394Z, session_id=1943a735-5f42-4141-825a-827d3f5c5d1f, session_timestamp=2019-10-31T23:11:25.394Z}
[INFO ] 2019-10-31T23:11:25,548Z [Mock network] flow.[ce935bca-a746-45f8-9951-2bb3df84fec4].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8591370520826386130). {}
[INFO ] 2019-10-31T23:11:25,575Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8591370520826386130). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=dfcabbeb-b39e-44fc-ad79-e3836c69b1b3, invocation_timestamp=2019-10-31T23:11:25.574Z, session_id=dfcabbeb-b39e-44fc-ad79-e3836c69b1b3, session_timestamp=2019-10-31T23:11:25.574Z}
[INFO ] 2019-10-31T23:11:25,728Z [Mock network] flow.[9a9c37fe-bb5d-4421-97b1-06ddbe933b99].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-4743080190781043212). {}
[INFO ] 2019-10-31T23:11:25,775Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4743080190781043212). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=3979ada4-2af2-46d0-afb9-637a9adc64e5, invocation_timestamp=2019-10-31T23:11:25.773Z, session_id=3979ada4-2af2-46d0-afb9-637a9adc64e5, session_timestamp=2019-10-31T23:11:25.773Z}
[INFO ] 2019-10-31T23:11:25,797Z [Mock network] flow.[476b211c-b344-483a-9120-1e623bcdfefb].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:25,895Z [Mock network] flow.[476b211c-b344-483a-9120-1e623bcdfefb].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,029Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:11:26,079Z [Mock network] flow.[0df40c12-8cb4-4754-86c2-a124adda433a].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=823265591361679185). {}
[INFO ] 2019-10-31T23:11:26,120Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=823265591361679185). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=4592f76c-14fd-4a58-a5a2-51cc7063c8c7, invocation_timestamp=2019-10-31T23:11:26.119Z, session_id=4592f76c-14fd-4a58-a5a2-51cc7063c8c7, session_timestamp=2019-10-31T23:11:26.119Z}
[INFO ] 2019-10-31T23:11:26,137Z [Mock network] flow.[e1168562-5efb-437f-98d1-0e24beaade1d].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,203Z [Mock network] flow.[e1168562-5efb-437f-98d1-0e24beaade1d].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,284Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:11:26,367Z [Mock network] flow.[0df40c12-8cb4-4754-86c2-a124adda433a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,406Z [Mock network] flow.[0df40c12-8cb4-4754-86c2-a124adda433a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,408Z [Mock network] flow.[0df40c12-8cb4-4754-86c2-a124adda433a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,439Z [Mock network] flow.[0df40c12-8cb4-4754-86c2-a124adda433a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,556Z [Mock network] flow.[e1168562-5efb-437f-98d1-0e24beaade1d].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8563485847129207216). {}
[INFO ] 2019-10-31T23:11:26,570Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8563485847129207216). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=170e50ec-b81d-4c12-8e92-50bbdc17f3a9, invocation_timestamp=2019-10-31T23:11:26.569Z, session_id=170e50ec-b81d-4c12-8e92-50bbdc17f3a9, session_timestamp=2019-10-31T23:11:26.569Z}
[INFO ] 2019-10-31T23:11:26,581Z [Mock network] flow.[e1650fc5-19b4-467c-a944-30f5a87b38d7].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,613Z [Mock network] flow.[e1650fc5-19b4-467c-a944-30f5a87b38d7].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,615Z [Mock network] flow.[e1650fc5-19b4-467c-a944-30f5a87b38d7].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,642Z [Mock network] flow.[e1650fc5-19b4-467c-a944-30f5a87b38d7].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:26,868Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:26,871Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:26,878Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3cbdacf8 {}
[INFO ] 2019-10-31T23:11:26,888Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:26,889Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:26,890Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:26,977Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:26,984Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:26,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:26,990Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:26,996Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:26,997Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:27,115Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:27,260Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:27,350Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:27,353Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:27,363Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:11:27,367Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:27,369Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:27,370Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:27,371Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:27,372Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:27,388Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 21B02F468B127B546E659F48F732EF245448B1C4A65C707C26907DC6B94B7CE7, not inserting the second time {}
[INFO ] 2019-10-31T23:11:27,392Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:27,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:27,397Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:27,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:27,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:27,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:27,402Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:27,404Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:27,421Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:27,429Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@dc89ac8 {}
[INFO ] 2019-10-31T23:11:27,436Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:27,437Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:27,438Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:27,529Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:27,539Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:27,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:27,545Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:27,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:27,548Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:27,674Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:27,790Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:27,908Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:27,910Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:27,923Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:27,924Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:27,925Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:27,926Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:27,927Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:27,945Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8D63E086F576D68751C60D3BCD992E6025040C3AEC98BC6EE2574BDFB6D51F4E, not inserting the second time {}
[INFO ] 2019-10-31T23:11:27,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:27,963Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:27,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:27,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:27,970Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:27,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:27,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:27,979Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:27,979Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:27,980Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:27,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:27,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:27,983Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:27,984Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:27,999Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:28,009Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@524f5ab5 {}
[INFO ] 2019-10-31T23:11:28,024Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:28,025Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:28,026Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:28,099Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:28,105Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:28,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,110Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:28,112Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,113Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,255Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:28,378Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:28,470Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:28,471Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:28,482Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:28,484Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:28,485Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:28,485Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:28,486Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:28,496Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 127421747F366552E478B5FA9E521DFAFB5C3243C670CF5C31C13C51E84A54ED, not inserting the second time {}
[INFO ] 2019-10-31T23:11:28,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:28,502Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:28,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:28,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,512Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:28,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,524Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:28,529Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:28,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:28,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,543Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:28,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:28,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,558Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:28,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:28,562Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:28,563Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:28,603Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:28,611Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@37bb1930 {}
[INFO ] 2019-10-31T23:11:28,621Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:28,622Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:28,623Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:28,731Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:28,738Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:28,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:28,742Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:28,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:28,747Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:28,874Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:28,984Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:29,077Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:29,078Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:29,089Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:29,091Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:29,091Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:29,092Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:29,093Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:29,103Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6E8F1181D41FECCA226FBCA659AFDFEB49EE2D44C2A72CD671FEBEE0EAEECD37, not inserting the second time {}
[INFO ] 2019-10-31T23:11:29,107Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:29,108Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:29,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,121Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,126Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,127Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:29,128Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:29,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,135Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,140Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:29,142Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:29,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,149Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,154Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:29,158Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,159Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,160Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:29,160Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,162Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:11:29,163Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:11:29,174Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:11:29,180Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@70973b53 {}
[INFO ] 2019-10-31T23:11:29,188Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:11:29,189Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:29,189Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:29,255Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:11:29,261Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:11:29,262Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,308Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,315Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,431Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:11:29,547Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:11:29,635Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:11:29,636Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:11:29,647Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:11:29,648Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:29,648Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:29,649Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:29,650Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:11:29,660Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 56B598289725DF807092AE6263301F8AC81A54B2F7E847675267B91A694C2A24, not inserting the second time {}
[INFO ] 2019-10-31T23:11:29,664Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:29,665Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,674Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563486986) {}
[INFO ] 2019-10-31T23:11:29,675Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,686Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:29,694Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563487540) {}
[INFO ] 2019-10-31T23:11:29,700Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,701Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:29,709Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,714Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563488106) {}
[INFO ] 2019-10-31T23:11:29,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,716Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,721Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,726Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,731Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563488739) {}
[INFO ] 2019-10-31T23:11:29,731Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,733Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:11:29,738Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:29,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:11:29,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563489262) {}
[INFO ] 2019-10-31T23:11:29,745Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:29,745Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:29,746Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:29,747Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:29,747Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:29,748Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:29,749Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:11:29,750Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:11:29,804Z [Mock network] flow.[e16bfb14-2ce4-4502-94f5-091b2e0753c9].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7049156723535689038). {}
[INFO ] 2019-10-31T23:11:29,867Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7049156723535689038). {invocation_id=639b1e64-db1c-42ce-b8d3-fa94273aeaa9, invocation_timestamp=2019-10-31T23:11:29.864Z, session_id=639b1e64-db1c-42ce-b8d3-fa94273aeaa9, session_timestamp=2019-10-31T23:11:29.864Z}
[INFO ] 2019-10-31T23:11:30,039Z [Mock network] flow.[e16bfb14-2ce4-4502-94f5-091b2e0753c9].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6541304872859495593). {}
[INFO ] 2019-10-31T23:11:30,048Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6541304872859495593). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=061abcfc-4985-46d4-8c86-963e58ca2beb, invocation_timestamp=2019-10-31T23:11:30.048Z, session_id=061abcfc-4985-46d4-8c86-963e58ca2beb, session_timestamp=2019-10-31T23:11:30.048Z}
[INFO ] 2019-10-31T23:11:30,084Z [Mock network] flow.[e16bfb14-2ce4-4502-94f5-091b2e0753c9].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4073412827199428607). {}
[INFO ] 2019-10-31T23:11:30,106Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4073412827199428607). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=99c013a9-5f22-45bd-88be-b639348d3bcd, invocation_timestamp=2019-10-31T23:11:30.105Z, session_id=99c013a9-5f22-45bd-88be-b639348d3bcd, session_timestamp=2019-10-31T23:11:30.105Z}
[INFO ] 2019-10-31T23:11:30,210Z [Mock network] flow.[35a5e817-92e5-46ac-9c43-2445add9372a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6210635833762387950). {}
[INFO ] 2019-10-31T23:11:30,236Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6210635833762387950). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1d1bcbbc-4f8f-4528-9fc3-3b0aa02193e0, invocation_timestamp=2019-10-31T23:11:30.236Z, session_id=1d1bcbbc-4f8f-4528-9fc3-3b0aa02193e0, session_timestamp=2019-10-31T23:11:30.236Z}
[INFO ] 2019-10-31T23:11:30,314Z [Mock network] flow.[0daeaf9c-acb7-443a-9471-0b2a3d903454].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=8911592461041879284). {}
[INFO ] 2019-10-31T23:11:30,375Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8911592461041879284). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=e827b503-1930-4c1e-8b63-2d4b5c1b2bd9, invocation_timestamp=2019-10-31T23:11:30.374Z, session_id=e827b503-1930-4c1e-8b63-2d4b5c1b2bd9, session_timestamp=2019-10-31T23:11:30.374Z}
[INFO ] 2019-10-31T23:11:30,393Z [Mock network] flow.[feb4d0ad-be8a-4515-9e73-e975a3252588].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,433Z [Mock network] flow.[feb4d0ad-be8a-4515-9e73-e975a3252588].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,486Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:11:30,504Z [Mock network] flow.[520494c1-74ee-4a34-9200-4e35e4ce84d5].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5424321745820065559). {}
[INFO ] 2019-10-31T23:11:30,522Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5424321745820065559). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=89c8cfa8-587f-43d5-8ea3-e3580a5a4b88, invocation_timestamp=2019-10-31T23:11:30.521Z, session_id=89c8cfa8-587f-43d5-8ea3-e3580a5a4b88, session_timestamp=2019-10-31T23:11:30.521Z}
[INFO ] 2019-10-31T23:11:30,531Z [Mock network] flow.[4bb6afbe-2280-4ee6-a2ee-11b483b90985].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,573Z [Mock network] flow.[4bb6afbe-2280-4ee6-a2ee-11b483b90985].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,612Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:11:30,654Z [Mock network] flow.[520494c1-74ee-4a34-9200-4e35e4ce84d5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,714Z [Mock network] flow.[520494c1-74ee-4a34-9200-4e35e4ce84d5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,716Z [Mock network] flow.[520494c1-74ee-4a34-9200-4e35e4ce84d5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,748Z [Mock network] flow.[520494c1-74ee-4a34-9200-4e35e4ce84d5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,832Z [Mock network] flow.[4bb6afbe-2280-4ee6-a2ee-11b483b90985].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4799040141620039400). {}
[INFO ] 2019-10-31T23:11:30,855Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4799040141620039400). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=0770ba0f-fc4d-4752-ab3c-857888ce4f37, invocation_timestamp=2019-10-31T23:11:30.854Z, session_id=0770ba0f-fc4d-4752-ab3c-857888ce4f37, session_timestamp=2019-10-31T23:11:30.854Z}
[INFO ] 2019-10-31T23:11:30,865Z [Mock network] flow.[e5a93e73-113d-49c3-8e2e-4c7e31a4c8e8].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,918Z [Mock network] flow.[e5a93e73-113d-49c3-8e2e-4c7e31a4c8e8].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,920Z [Mock network] flow.[e5a93e73-113d-49c3-8e2e-4c7e31a4c8e8].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:11:30,947Z [Mock network] flow.[e5a93e73-113d-49c3-8e2e-4c7e31a4c8e8].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:15:46,411Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-7975b320-0a04-4907-91ea-f234f4a82cf7.jar {}
[INFO ] 2019-10-31T23:15:46,432Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-48beff02-198f-4bd0-bbc5-e61c5fe297d2.jar {}
[INFO ] 2019-10-31T23:15:46,478Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-7975b320-0a04-4907-91ea-f234f4a82cf7.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-48beff02-198f-4bd0-bbc5-e61c5fe297d2.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T23:15:46,526Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:15:46,535Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:15:46,551Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-7975b320-0a04-4907-91ea-f234f4a82cf7.jar {}
[INFO ] 2019-10-31T23:15:46,565Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-48beff02-198f-4bd0-bbc5-e61c5fe297d2.jar {}
[INFO ] 2019-10-31T23:15:46,635Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T23:15:46,713Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T23:15:46,760Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T23:15:46,960Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@73805ba8 {}
[INFO ] 2019-10-31T23:15:47,782Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:15:47,882Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:47,887Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:50,457Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:51,374Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:15:51,377Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:51,390Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:51,506Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:51,510Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:51,840Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:15:52,022Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:15:52,154Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:15:52,166Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:15:52,287Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:15:52,436Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:15:52,441Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:15:52,444Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:52,446Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:52,449Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:15:52,505Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E30B800653928A705D36D230DCD4C722B45A6747F756273116DBA5AA6819CE3D, not inserting the second time {}
[INFO ] 2019-10-31T23:15:52,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:52,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:52,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:52,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:52,664Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:52,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:52,676Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:15:52,683Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:15:52,728Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:15:52,760Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4dc514e8 {}
[INFO ] 2019-10-31T23:15:52,792Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:15:52,799Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:52,803Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:53,012Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:53,033Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:15:53,041Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:53,053Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:53,068Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:53,072Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:53,234Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:15:53,391Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:15:53,504Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:15:53,507Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:15:53,531Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:15:53,536Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:15:53,539Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:53,543Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:53,545Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:15:53,572Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C5956D757B0EE9D99270EB2EF268D0FB2E11B088B60C3310B7058D7E7938CFF1, not inserting the second time {}
[INFO ] 2019-10-31T23:15:53,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:53,592Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:53,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:53,622Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:53,629Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:53,655Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:53,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:53,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:53,673Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:53,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:53,680Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:53,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:53,690Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:15:53,693Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:15:53,735Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:15:53,753Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@491b2968 {}
[INFO ] 2019-10-31T23:15:53,778Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:15:53,784Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:53,788Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:53,945Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:53,968Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:15:53,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:53,981Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:53,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:53,996Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:54,163Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:15:54,336Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:15:54,430Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:15:54,433Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:15:54,448Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:15:54,450Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:15:54,452Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:54,454Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:54,455Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:15:54,469Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E270955959D8C0E4ED3D06529AF1C51F354C699F8AF58EE413572CC0A3211F64, not inserting the second time {}
[INFO ] 2019-10-31T23:15:54,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:54,486Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:54,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563751377) {}
[INFO ] 2019-10-31T23:15:54,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:54,504Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:54,525Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:54,528Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:54,534Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:54,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563753041) {}
[INFO ] 2019-10-31T23:15:54,563Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:54,567Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:54,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:54,584Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:54,588Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:54,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:54,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:54,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:54,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563753970) {}
[INFO ] 2019-10-31T23:15:55,632Z [Mock network] flow.[4858452a-8972-4a8f-adbe-2e8c09533403].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5765566313512595700). {}
[INFO ] 2019-10-31T23:15:55,809Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5765566313512595700). {invocation_id=ccd57242-a608-43f7-8b89-5b93668e4002, invocation_timestamp=2019-10-31T23:15:55.802Z, session_id=ccd57242-a608-43f7-8b89-5b93668e4002, session_timestamp=2019-10-31T23:15:55.802Z}
[INFO ] 2019-10-31T23:15:56,171Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:15:56,173Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:15:56,189Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@537e1869 {}
[INFO ] 2019-10-31T23:15:56,209Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:15:56,214Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:56,215Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:56,450Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:56,469Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:15:56,471Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:56,475Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:56,520Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:56,522Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:56,695Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:15:56,851Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:15:56,948Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:15:56,951Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:15:56,962Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:15:56,969Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:15:56,971Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:15:56,973Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:56,974Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:56,975Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:15:56,991Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7BE31CE2423D9A3717826804E0121E50141B025B7672787F9A01EF948B2BF1B3, not inserting the second time {}
[INFO ] 2019-10-31T23:15:56,998Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:57,004Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:57,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:57,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:57,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:57,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:57,024Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:15:57,025Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:15:57,045Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:15:57,054Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4b9bbe80 {}
[INFO ] 2019-10-31T23:15:57,065Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:15:57,067Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:57,069Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:57,232Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:57,242Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:15:57,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:57,248Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:57,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:57,256Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:57,395Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:15:57,523Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:15:57,609Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:15:57,612Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:15:57,632Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:15:57,635Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:15:57,636Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:57,638Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:57,639Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:15:57,659Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F08EE1A6D0325582AF2524309A219C4998264CC38000D6DEB5BFA134440ECE37, not inserting the second time {}
[INFO ] 2019-10-31T23:15:57,667Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:57,677Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:57,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:57,696Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:57,700Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:57,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:57,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:57,731Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:57,733Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:57,735Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:57,736Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:57,737Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:57,743Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:15:57,745Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:15:57,761Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:15:57,770Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@413467d2 {}
[INFO ] 2019-10-31T23:15:57,782Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:15:57,784Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:57,785Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:57,944Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:57,960Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:15:57,962Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:57,968Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:57,980Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:57,981Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:58,127Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:15:58,247Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:15:58,345Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:15:58,347Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:15:58,362Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:15:58,364Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:15:58,365Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:58,366Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:58,367Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:15:58,381Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F237DEF34FDA00FCA3B0BC9B332C6B8B975A1F8522D656349BCC635E6620D572, not inserting the second time {}
[INFO ] 2019-10-31T23:15:58,387Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:58,389Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:58,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563756471) {}
[INFO ] 2019-10-31T23:15:58,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:58,417Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:58,440Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:58,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:58,446Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:58,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563757243) {}
[INFO ] 2019-10-31T23:15:58,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:58,469Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:58,489Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:58,490Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:58,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:58,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:58,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:58,502Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:58,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563757962) {}
[INFO ] 2019-10-31T23:15:58,687Z [Mock network] flow.[87fd666b-6004-4171-a3a2-41f90385822c].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4104244838550939937). {}
[INFO ] 2019-10-31T23:15:58,800Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4104244838550939937). {invocation_id=640537cb-30b2-49fe-a331-5d90aaa691a1, invocation_timestamp=2019-10-31T23:15:58.799Z, session_id=640537cb-30b2-49fe-a331-5d90aaa691a1, session_timestamp=2019-10-31T23:15:58.799Z}
[INFO ] 2019-10-31T23:15:59,011Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:15:59,012Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:15:59,025Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@776f34a1 {}
[INFO ] 2019-10-31T23:15:59,050Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:15:59,052Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:59,053Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:59,198Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:59,209Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:15:59,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:15:59,216Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:59,225Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:15:59,226Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:15:59,367Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:15:59,485Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:15:59,583Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:15:59,585Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:15:59,606Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:15:59,613Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:15:59,614Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:15:59,615Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:59,617Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:15:59,618Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:15:59,630Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 179A857E1FE22AAE48E92B53B96018FA04BF195A901E7B8FE0EFC35EA10E143A, not inserting the second time {}
[INFO ] 2019-10-31T23:15:59,640Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:15:59,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:59,653Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:15:59,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:15:59,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:15:59,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:15:59,664Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:15:59,669Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:15:59,698Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:15:59,714Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6cd02a22 {}
[INFO ] 2019-10-31T23:15:59,725Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:15:59,727Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:59,728Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:59,844Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:15:59,856Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:15:59,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:15:59,863Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:15:59,869Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:15:59,872Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:16:00,004Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:00,144Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:00,240Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:00,242Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:00,255Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:00,257Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:00,257Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:00,259Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:00,260Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:00,324Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BDB0CBE694E0B560F4D815EB8758EC8444C6BE4C2A5C4D5AD4736BCDAA2E0E33, not inserting the second time {}
[INFO ] 2019-10-31T23:16:00,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:16:00,333Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:00,348Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:16:00,350Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:16:00,352Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:00,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:16:00,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:16:00,375Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:00,382Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:16:00,383Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:16:00,384Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:00,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:16:00,388Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:00,389Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:00,409Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:16:00,423Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2d8664a0 {}
[INFO ] 2019-10-31T23:16:00,433Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:00,434Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:00,435Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:00,504Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:00,511Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:00,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:00,517Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:00,520Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:00,522Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:00,663Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:00,779Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:00,867Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:00,870Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:00,890Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:00,893Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:00,894Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:00,896Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:00,899Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:00,912Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5326BF063859D9E4BE2151DB4793FB7732F8935B76ED6CF2D2EE4025DAFD613D, not inserting the second time {}
[INFO ] 2019-10-31T23:16:00,922Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:16:00,927Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:00,939Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563759211) {}
[INFO ] 2019-10-31T23:16:00,943Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:00,949Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:00,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:00,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:16:00,972Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:00,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563759857) {}
[INFO ] 2019-10-31T23:16:00,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:00,991Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:01,004Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:01,006Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:01,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:01,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:01,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[INFO ] 2019-10-31T23:16:01,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:01,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563760513) {}
[WARN ] 2019-10-31T23:16:01,102Z [Mock network] flow.[42a088dd-4acd-48b1-b455-adeab21d4666].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: 975D8DC9F1F5AA3B09936EC8FE79C1B72B95893D7B8B7BD4BB112BB9B6FEF3F9
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T23:16:01,206Z [Mock network] flow.[46a97445-7aac-4894-a7b1-dc38557d5ac8].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1626361223418564443). {}
[INFO ] 2019-10-31T23:16:01,269Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1626361223418564443). {invocation_id=60ccd1e7-63ea-4b97-8b39-be97e1d5e374, invocation_timestamp=2019-10-31T23:16:01.268Z, session_id=60ccd1e7-63ea-4b97-8b39-be97e1d5e374, session_timestamp=2019-10-31T23:16:01.268Z}
[INFO ] 2019-10-31T23:16:01,491Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:01,497Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:01,507Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@18a1c073 {}
[INFO ] 2019-10-31T23:16:01,535Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:01,537Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:01,537Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:01,643Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:01,650Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:01,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:01,655Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:01,667Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:01,670Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:01,811Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:01,921Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:02,005Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:02,007Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:02,020Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:16:02,025Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:02,027Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:02,028Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:02,029Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:02,030Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:02,047Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 33181B083FBA1EC779789290E861CE1C5581E5110D8AE38A46CFD7FF612B571B, not inserting the second time {}
[INFO ] 2019-10-31T23:16:02,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:02,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:02,076Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:02,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:02,080Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:02,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:02,083Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:02,086Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:02,109Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:16:02,125Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@480ddaf5 {}
[INFO ] 2019-10-31T23:16:02,140Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:02,142Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:02,143Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:02,264Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:02,272Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:02,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:02,278Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:02,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:02,282Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:02,411Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:02,532Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:02,631Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:02,632Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:02,645Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:02,647Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:02,648Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:02,649Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:02,649Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:02,661Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F444FA64B091531132390C9AFCAF57A919291F8996BD86420B047FF06B9E689F, not inserting the second time {}
[INFO ] 2019-10-31T23:16:02,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:02,670Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:02,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:02,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:02,680Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:02,687Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:02,688Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:02,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:02,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:02,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:02,694Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:02,695Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:02,697Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:02,698Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:02,710Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:16:02,717Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4c911f04 {}
[INFO ] 2019-10-31T23:16:02,728Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:02,729Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:02,730Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:02,816Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:02,823Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:02,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:02,828Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:02,832Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:02,833Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:02,956Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:03,201Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:03,296Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:03,301Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:03,318Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:03,319Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:03,320Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:03,321Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:03,323Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:03,338Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 61755A079F57DFF578DB4E43C7377C2BEA65F2083C879ED455BDE405D1FE83A5, not inserting the second time {}
[INFO ] 2019-10-31T23:16:03,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:03,355Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:03,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:03,372Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:03,375Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:03,387Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:03,395Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:03,397Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:03,411Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:03,413Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:03,415Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:03,421Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:03,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:03,426Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:03,427Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:03,428Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:03,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:03,430Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:03,432Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:03,433Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:03,450Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:16:03,463Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3971f028 {}
[INFO ] 2019-10-31T23:16:03,476Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:03,477Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:03,478Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:03,553Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:03,560Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:03,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:03,564Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:03,567Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:03,569Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:03,711Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:03,877Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:03,979Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:03,980Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:03,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:03,994Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:03,995Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:03,996Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:03,997Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:04,008Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F2CCF5551735183512187573BB67BEF78BBE975AE219B4146AA26B0080462301, not inserting the second time {}
[INFO ] 2019-10-31T23:16:04,013Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:04,015Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:04,031Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,033Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,044Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:04,053Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:04,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,066Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:04,083Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,090Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:04,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,093Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,099Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,100Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,104Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:04,105Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:04,107Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,109Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:04,110Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:04,122Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:16:04,128Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@57d25a4 {}
[INFO ] 2019-10-31T23:16:04,136Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:04,138Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:04,138Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:04,203Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:04,210Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:04,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,215Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,218Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,219Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,344Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:04,518Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:04,609Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:04,610Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:04,622Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:04,623Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:04,624Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:04,625Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:04,626Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:04,636Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B8FBA088A25A7546861F2F65610D52CB6E673DB84165FCC099C29A04851009D2, not inserting the second time {}
[INFO ] 2019-10-31T23:16:04,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:04,643Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563761652) {}
[INFO ] 2019-10-31T23:16:04,661Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,663Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:04,682Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,694Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563762274) {}
[INFO ] 2019-10-31T23:16:04,695Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,698Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:04,717Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563762825) {}
[INFO ] 2019-10-31T23:16:04,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,728Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,735Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,736Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,738Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563763561) {}
[INFO ] 2019-10-31T23:16:04,745Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,746Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:04,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,756Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:04,757Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,758Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,759Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:04,759Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563764211) {}
[INFO ] 2019-10-31T23:16:04,764Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:04,769Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:04,770Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:04,771Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:04,771Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:04,772Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:04,773Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:04,774Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:04,872Z [Mock network] flow.[46c7267b-0836-4fbf-a91f-695977b8899f].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6965828434942426422). {}
[INFO ] 2019-10-31T23:16:04,940Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6965828434942426422). {invocation_id=ec10a6eb-8ccf-4e7a-a32d-5431ee11685b, invocation_timestamp=2019-10-31T23:16:04.939Z, session_id=ec10a6eb-8ccf-4e7a-a32d-5431ee11685b, session_timestamp=2019-10-31T23:16:04.939Z}
[INFO ] 2019-10-31T23:16:05,174Z [Mock network] flow.[46c7267b-0836-4fbf-a91f-695977b8899f].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6128508046129811408). {}
[INFO ] 2019-10-31T23:16:05,196Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6128508046129811408). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=319f03b0-7460-42e9-8074-133f2b78c77c, invocation_timestamp=2019-10-31T23:16:05.195Z, session_id=319f03b0-7460-42e9-8074-133f2b78c77c, session_timestamp=2019-10-31T23:16:05.195Z}
[INFO ] 2019-10-31T23:16:05,246Z [Mock network] flow.[46c7267b-0836-4fbf-a91f-695977b8899f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5173480453562259369). {}
[INFO ] 2019-10-31T23:16:05,271Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5173480453562259369). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=381962a5-359f-464f-b3ae-8fb79aaf6802, invocation_timestamp=2019-10-31T23:16:05.270Z, session_id=381962a5-359f-464f-b3ae-8fb79aaf6802, session_timestamp=2019-10-31T23:16:05.270Z}
[INFO ] 2019-10-31T23:16:05,388Z [Mock network] flow.[7e68093d-2f0b-494e-aa03-2adf26d30484].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4627889674749843264). {}
[INFO ] 2019-10-31T23:16:05,429Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4627889674749843264). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=7232ae84-d0ff-49af-a771-35e1f80dceeb, invocation_timestamp=2019-10-31T23:16:05.429Z, session_id=7232ae84-d0ff-49af-a771-35e1f80dceeb, session_timestamp=2019-10-31T23:16:05.429Z}
[INFO ] 2019-10-31T23:16:05,692Z [Mock network] flow.[6bfaa0d7-567a-42da-afde-be8a4596a26c].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-1846369789182783326). {}
[INFO ] 2019-10-31T23:16:05,765Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1846369789182783326). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=18e6cf0c-e2ea-47f6-a433-9e74c6f4fcf3, invocation_timestamp=2019-10-31T23:16:05.763Z, session_id=18e6cf0c-e2ea-47f6-a433-9e74c6f4fcf3, session_timestamp=2019-10-31T23:16:05.763Z}
[INFO ] 2019-10-31T23:16:05,795Z [Mock network] flow.[85fc0106-cf8c-46b3-91a7-f4f1ee68fff0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:05,877Z [Mock network] flow.[85fc0106-cf8c-46b3-91a7-f4f1ee68fff0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,016Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:16:06,074Z [Mock network] flow.[4dda248b-a812-4f04-9cd6-c93050e38a69].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-893453734161457376). {}
[INFO ] 2019-10-31T23:16:06,122Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-893453734161457376). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=e53e55c1-55cc-4005-a1f0-6e3582876eb1, invocation_timestamp=2019-10-31T23:16:06.121Z, session_id=e53e55c1-55cc-4005-a1f0-6e3582876eb1, session_timestamp=2019-10-31T23:16:06.121Z}
[INFO ] 2019-10-31T23:16:06,139Z [Mock network] flow.[9239c52c-7ce5-4e79-9599-669af6a8db88].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,208Z [Mock network] flow.[9239c52c-7ce5-4e79-9599-669af6a8db88].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,266Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:16:06,385Z [Mock network] flow.[4dda248b-a812-4f04-9cd6-c93050e38a69].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,417Z [Mock network] flow.[4dda248b-a812-4f04-9cd6-c93050e38a69].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,419Z [Mock network] flow.[4dda248b-a812-4f04-9cd6-c93050e38a69].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,445Z [Mock network] flow.[4dda248b-a812-4f04-9cd6-c93050e38a69].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,556Z [Mock network] flow.[9239c52c-7ce5-4e79-9599-669af6a8db88].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7087485815559886883). {}
[INFO ] 2019-10-31T23:16:06,580Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7087485815559886883). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=96bf2d78-0c01-48ea-9324-c68088a2a46f, invocation_timestamp=2019-10-31T23:16:06.579Z, session_id=96bf2d78-0c01-48ea-9324-c68088a2a46f, session_timestamp=2019-10-31T23:16:06.579Z}
[INFO ] 2019-10-31T23:16:06,591Z [Mock network] flow.[c62c3bbb-caac-4fc0-baf5-f61955821c09].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,664Z [Mock network] flow.[c62c3bbb-caac-4fc0-baf5-f61955821c09].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,666Z [Mock network] flow.[c62c3bbb-caac-4fc0-baf5-f61955821c09].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,706Z [Mock network] flow.[c62c3bbb-caac-4fc0-baf5-f61955821c09].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:06,891Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:06,893Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:06,899Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@796aaebb {}
[INFO ] 2019-10-31T23:16:06,907Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:06,908Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:06,909Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:07,030Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:07,037Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:07,038Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:07,042Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:07,053Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:07,054Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:07,194Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:07,317Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:07,403Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:07,405Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:07,416Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:16:07,420Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:07,421Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:07,422Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:07,422Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:07,423Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:07,442Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 42349E3C0F7092AFB1627DBCBB9DD0B23DC325A9E952E667D3ACDF8474E4CDC1, not inserting the second time {}
[INFO ] 2019-10-31T23:16:07,448Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:07,453Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:07,454Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:07,455Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:07,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:07,457Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:07,461Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:07,461Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:07,480Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:16:07,492Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1688ea3a {}
[INFO ] 2019-10-31T23:16:07,504Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:07,506Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:07,506Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:07,605Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:07,618Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:07,619Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:07,623Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:07,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:07,627Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:07,789Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:07,907Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:07,998Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:07,999Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:08,015Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:08,017Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:08,017Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:08,018Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:08,019Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:08,038Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 06B6A66412AC9D8836BABE572ECDF72EAB0A8D52674495CABFCDD368722B2157, not inserting the second time {}
[INFO ] 2019-10-31T23:16:08,042Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:08,046Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:08,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:08,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:08,066Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:08,078Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:08,080Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:08,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:08,084Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:08,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:08,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:08,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:08,089Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:08,089Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:08,100Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:16:08,107Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@68888321 {}
[INFO ] 2019-10-31T23:16:08,116Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:08,117Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:08,118Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:08,179Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:08,185Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:08,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,190Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:08,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,193Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,336Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:08,483Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:08,572Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:08,574Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:08,590Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:08,591Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:08,592Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:08,592Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:08,593Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:08,603Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B0D71F2041C06DDDDB9641945CCA1F2DFCD35E083A90919FEB8FD31C2ABD7BED, not inserting the second time {}
[INFO ] 2019-10-31T23:16:08,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:08,610Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:08,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:08,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,617Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:08,622Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:08,625Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:08,630Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:08,631Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,632Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:08,637Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,638Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,640Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:08,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:08,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:08,645Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:08,646Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:08,656Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:16:08,663Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@415f39c7 {}
[INFO ] 2019-10-31T23:16:08,672Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:08,673Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:08,674Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:08,740Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:08,746Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:08,747Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:08,751Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:08,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:08,755Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:08,895Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:09,013Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:09,127Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:09,128Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:09,139Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:09,140Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:09,140Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:09,141Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:09,142Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:09,152Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A46EC6ABE315B8A5B250A4B2D51FC09005EE53100FE5CADAEFA318E58B56A12C, not inserting the second time {}
[INFO ] 2019-10-31T23:16:09,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:09,157Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:09,164Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,165Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,176Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:09,178Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,182Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:09,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,185Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,190Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,191Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:09,193Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,197Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:09,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,200Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,204Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,205Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:09,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,210Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:09,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,213Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:16:09,214Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:16:09,225Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:16:09,231Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@53b2b928 {}
[INFO ] 2019-10-31T23:16:09,240Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:16:09,241Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:09,241Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:09,337Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:16:09,343Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:16:09,344Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,346Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,349Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,357Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,488Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:16:09,594Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:16:09,686Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:16:09,688Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:16:09,698Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:16:09,699Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:09,700Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:09,700Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:09,701Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:16:09,711Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6A71CAA739600BA3CCDE41B862B1950147BB44A9F808FC38B6EB51BA1F914680, not inserting the second time {}
[INFO ] 2019-10-31T23:16:09,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:09,716Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,721Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572563767038) {}
[INFO ] 2019-10-31T23:16:09,722Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,723Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:09,730Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,734Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572563767619) {}
[INFO ] 2019-10-31T23:16:09,735Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,736Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,740Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:09,742Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572563768187) {}
[INFO ] 2019-10-31T23:16:09,747Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,749Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,755Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,782Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572563768747) {}
[INFO ] 2019-10-31T23:16:09,784Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,787Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:16:09,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,792Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,795Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:09,795Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:16:09,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572563769344) {}
[INFO ] 2019-10-31T23:16:09,798Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:09,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:09,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:09,800Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:09,801Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:09,801Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:09,802Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:16:09,802Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:16:09,863Z [Mock network] flow.[55f82676-1084-476a-9a51-3db22ced42d4].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5455514005406948871). {}
[INFO ] 2019-10-31T23:16:09,919Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5455514005406948871). {invocation_id=8496b973-8569-42b4-9894-f569ced211ff, invocation_timestamp=2019-10-31T23:16:09.914Z, session_id=8496b973-8569-42b4-9894-f569ced211ff, session_timestamp=2019-10-31T23:16:09.914Z}
[INFO ] 2019-10-31T23:16:10,087Z [Mock network] flow.[55f82676-1084-476a-9a51-3db22ced42d4].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8478764843238102246). {}
[INFO ] 2019-10-31T23:16:10,104Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8478764843238102246). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=601ea067-9c22-4d88-a16c-5568bbd78123, invocation_timestamp=2019-10-31T23:16:10.103Z, session_id=601ea067-9c22-4d88-a16c-5568bbd78123, session_timestamp=2019-10-31T23:16:10.103Z}
[INFO ] 2019-10-31T23:16:10,146Z [Mock network] flow.[55f82676-1084-476a-9a51-3db22ced42d4].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2503134516393769116). {}
[INFO ] 2019-10-31T23:16:10,167Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2503134516393769116). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5825f238-d956-4889-b07a-c00c26427969, invocation_timestamp=2019-10-31T23:16:10.167Z, session_id=5825f238-d956-4889-b07a-c00c26427969, session_timestamp=2019-10-31T23:16:10.167Z}
[INFO ] 2019-10-31T23:16:10,313Z [Mock network] flow.[927da034-b07f-4f18-a1dd-7b658fa12315].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1282493791849150874). {}
[INFO ] 2019-10-31T23:16:10,353Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1282493791849150874). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1423f053-5d3c-4fb3-be24-2ab26bc3ea78, invocation_timestamp=2019-10-31T23:16:10.352Z, session_id=1423f053-5d3c-4fb3-be24-2ab26bc3ea78, session_timestamp=2019-10-31T23:16:10.352Z}
[INFO ] 2019-10-31T23:16:10,423Z [Mock network] flow.[a32e0401-9803-4a54-ad62-af8dfbccf789].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=4199070054832973359). {}
[INFO ] 2019-10-31T23:16:10,462Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4199070054832973359). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=b4780f77-bdfc-4578-8f6f-9cbea5f8b1c0, invocation_timestamp=2019-10-31T23:16:10.461Z, session_id=b4780f77-bdfc-4578-8f6f-9cbea5f8b1c0, session_timestamp=2019-10-31T23:16:10.461Z}
[INFO ] 2019-10-31T23:16:10,474Z [Mock network] flow.[e263ef85-dcf1-413f-a9bb-092f2fb94edb].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:10,522Z [Mock network] flow.[e263ef85-dcf1-413f-a9bb-092f2fb94edb].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:10,573Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:16:10,590Z [Mock network] flow.[77b5ae57-70f2-41a1-a0b7-2397c78d7042].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5205105684167045038). {}
[INFO ] 2019-10-31T23:16:10,633Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5205105684167045038). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=47c0f454-289e-4c80-af5e-7f7cb8a0a2d2, invocation_timestamp=2019-10-31T23:16:10.632Z, session_id=47c0f454-289e-4c80-af5e-7f7cb8a0a2d2, session_timestamp=2019-10-31T23:16:10.632Z}
[INFO ] 2019-10-31T23:16:10,644Z [Mock network] flow.[570862f2-b15b-464b-8155-bd8bfe1fac44].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:10,699Z [Mock network] flow.[570862f2-b15b-464b-8155-bd8bfe1fac44].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:10,739Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:16:10,781Z [Mock network] flow.[77b5ae57-70f2-41a1-a0b7-2397c78d7042].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:10,812Z [Mock network] flow.[77b5ae57-70f2-41a1-a0b7-2397c78d7042].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:10,814Z [Mock network] flow.[77b5ae57-70f2-41a1-a0b7-2397c78d7042].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:10,846Z [Mock network] flow.[77b5ae57-70f2-41a1-a0b7-2397c78d7042].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:10,950Z [Mock network] flow.[570862f2-b15b-464b-8155-bd8bfe1fac44].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5909584090828307574). {}
[INFO ] 2019-10-31T23:16:10,984Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5909584090828307574). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=d856235b-5f94-4039-9073-81f1a5369bdd, invocation_timestamp=2019-10-31T23:16:10.983Z, session_id=d856235b-5f94-4039-9073-81f1a5369bdd, session_timestamp=2019-10-31T23:16:10.983Z}
[INFO ] 2019-10-31T23:16:10,999Z [Mock network] flow.[e7ea001f-af09-4a16-bae5-d95b13f9d153].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:11,070Z [Mock network] flow.[e7ea001f-af09-4a16-bae5-d95b13f9d153].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:11,072Z [Mock network] flow.[e7ea001f-af09-4a16-bae5-d95b13f9d153].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:16:11,106Z [Mock network] flow.[e7ea001f-af09-4a16-bae5-d95b13f9d153].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:31:45,714Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/test/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-b60183af-dfb2-4586-8bc6-ccf5b305652b.jar {}
[INFO ] 2019-10-31T23:31:45,755Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.dz0189 in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/classes/kotlin/main/com/dz0189: build/tmp/generated-test-cordapps/com.dz0189-04794743-f7f0-4641-a20b-627497b99344.jar {}
[INFO ] 2019-10-31T23:31:45,805Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-b60183af-dfb2-4586-8bc6-ccf5b305652b.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-04794743-f7f0-4641-a20b-627497b99344.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar, rootPackageName=com.dz0189), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-10-31T23:31:45,853Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:31:45,862Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:31:45,888Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-b60183af-dfb2-4586-8bc6-ccf5b305652b.jar {}
[INFO ] 2019-10-31T23:31:45,914Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-workflows/build/tmp/generated-test-cordapps/com.dz0189-04794743-f7f0-4641-a20b-627497b99344.jar {}
[INFO ] 2019-10-31T23:31:45,944Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts-new/build/libs/dz0189-contracts-new.jar {}
[INFO ] 2019-10-31T23:31:45,994Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/dz0189-contracts/build/libs/dz0189-contracts.jar {}
[INFO ] 2019-10-31T23:31:46,056Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-10-31T23:31:46,209Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2107c4b0 {}
[INFO ] 2019-10-31T23:31:47,046Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:31:47,108Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:47,113Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:49,754Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:50,376Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:31:50,378Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:50,390Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:50,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:50,496Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:50,800Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:31:50,945Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:31:51,053Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:31:51,060Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:31:51,172Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:31:51,330Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:31:51,335Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:31:51,344Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:51,349Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:51,354Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:31:51,435Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 03826B6DE03F62AD75E58D57A994D16DA40CFABAFE0DB6716AC6208042ECCE2A, not inserting the second time {}
[INFO ] 2019-10-31T23:31:51,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:51,596Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:51,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:51,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:51,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:51,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:51,622Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:31:51,628Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:31:51,671Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:31:51,702Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@183c6b20 {}
[INFO ] 2019-10-31T23:31:51,729Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:31:51,741Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:51,743Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:51,985Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:52,006Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:31:52,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:52,027Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:52,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:52,038Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:52,202Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:31:52,337Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:31:52,429Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:31:52,432Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:31:52,458Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:31:52,464Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:31:52,467Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:52,469Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:52,473Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:31:52,494Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 10F931EC92BCC7F5165AF017DFEAFFDC6B748C9D9F0233314B461801DCD2C900, not inserting the second time {}
[INFO ] 2019-10-31T23:31:52,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:52,504Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:52,524Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:52,526Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:52,532Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:52,543Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:52,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:52,550Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:52,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:52,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:52,555Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:52,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:52,560Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:31:52,561Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:31:52,580Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:31:52,590Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c2e94b3 {}
[INFO ] 2019-10-31T23:31:52,602Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:31:52,604Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:52,605Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:52,731Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:52,752Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:31:52,755Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:52,766Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:52,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:52,778Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:52,942Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:31:53,092Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:31:53,193Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:31:53,196Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:31:53,219Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:31:53,226Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:31:53,228Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:53,230Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:53,232Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:31:53,260Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7DF0214E41543E0E3D9733608D1EA110B6B500F8F73BF2A6C4BE53AD391BA709, not inserting the second time {}
[INFO ] 2019-10-31T23:31:53,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:53,287Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:53,307Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564710378) {}
[INFO ] 2019-10-31T23:31:53,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:53,315Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:53,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:53,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:53,350Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:53,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564712014) {}
[INFO ] 2019-10-31T23:31:53,392Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:53,398Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:53,417Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:53,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:53,427Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:53,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:53,431Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:53,432Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:53,433Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564712755) {}
[INFO ] 2019-10-31T23:31:54,396Z [Mock network] flow.[0bf22c6e-e524-4bda-a1de-eaf4e1c3bb41].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7151905298114691681). {}
[INFO ] 2019-10-31T23:31:54,590Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7151905298114691681). {invocation_id=d10b0ee9-51df-4835-b8a7-108938c0d29d, invocation_timestamp=2019-10-31T23:31:54.582Z, session_id=d10b0ee9-51df-4835-b8a7-108938c0d29d, session_timestamp=2019-10-31T23:31:54.582Z}
[INFO ] 2019-10-31T23:31:54,989Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:31:54,991Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:31:54,998Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@9585b4a {}
[INFO ] 2019-10-31T23:31:55,013Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:31:55,014Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:55,015Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:55,165Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:55,173Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:31:55,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:55,179Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:55,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:55,193Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:55,334Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:31:55,466Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:31:55,567Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:31:55,568Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:31:55,592Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:31:55,598Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:31:55,601Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:31:55,603Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:55,604Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:55,605Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:31:55,628Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CFC01F117F0702C4414A7E3ACD781C5B3C923032FEE4B1058D1EF32D22B1D16F, not inserting the second time {}
[INFO ] 2019-10-31T23:31:55,636Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:55,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:55,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:55,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:55,646Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:55,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:55,652Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:31:55,654Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:31:55,684Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:31:55,698Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4631243b {}
[INFO ] 2019-10-31T23:31:55,718Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:31:55,721Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:55,722Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:55,906Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:55,917Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:31:55,918Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:55,923Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:55,932Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:55,933Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:56,076Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:31:56,235Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:31:56,334Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:31:56,338Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:31:56,356Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:31:56,359Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:31:56,360Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:56,361Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:56,363Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:31:56,382Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 51156FC5921C286953BE572D4D25F0CE81D5988BAF07B566B6C9866BD8CF2E9D, not inserting the second time {}
[INFO ] 2019-10-31T23:31:56,389Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:56,393Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:56,408Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:56,416Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:56,422Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:56,430Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:56,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:56,441Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:56,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:56,443Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:56,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:56,445Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:56,451Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:31:56,452Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:31:56,477Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:31:56,486Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@53fa09cf {}
[INFO ] 2019-10-31T23:31:56,499Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:31:56,501Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:56,502Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:56,654Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:56,667Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:31:56,672Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:56,676Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:56,686Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:56,689Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:56,845Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:31:56,976Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:31:57,070Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:31:57,071Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:31:57,089Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:31:57,091Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:31:57,092Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:57,093Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:57,095Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:31:57,109Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 64E37F0DC74073E3ABE1CB01A0EBD24D04309044F03B8D66BB179D7472C3C3C5, not inserting the second time {}
[INFO ] 2019-10-31T23:31:57,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:57,117Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:57,125Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564715175) {}
[INFO ] 2019-10-31T23:31:57,127Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:57,129Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:57,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:57,143Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:57,145Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:57,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564715918) {}
[INFO ] 2019-10-31T23:31:57,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:57,155Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:57,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:57,164Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:57,168Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:57,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:57,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:57,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:57,172Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564716672) {}
[INFO ] 2019-10-31T23:31:57,316Z [Mock network] flow.[cf491bc7-3acd-4d1e-b3ae-b98a7266dff9].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2112507011219707355). {}
[INFO ] 2019-10-31T23:31:57,481Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2112507011219707355). {invocation_id=c75b6c3c-e32d-4742-91eb-335708ce0513, invocation_timestamp=2019-10-31T23:31:57.480Z, session_id=c75b6c3c-e32d-4742-91eb-335708ce0513, session_timestamp=2019-10-31T23:31:57.480Z}
[INFO ] 2019-10-31T23:31:57,708Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:31:57,710Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:31:57,723Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7f5cee81 {}
[INFO ] 2019-10-31T23:31:57,744Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:31:57,745Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:57,747Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:57,867Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:57,874Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:31:57,875Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:57,879Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:57,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:57,887Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:58,010Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:31:58,143Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:31:58,239Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:31:58,241Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:31:58,256Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:31:58,261Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:31:58,262Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:31:58,268Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:58,272Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:58,273Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:31:58,290Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 21023668570D40BE04E590305197A986860CC7B5927B536CF84E946113814E45, not inserting the second time {}
[INFO ] 2019-10-31T23:31:58,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:58,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:58,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:58,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:58,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:58,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:58,324Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:31:58,325Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:31:58,351Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:31:58,364Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@204b79dd {}
[INFO ] 2019-10-31T23:31:58,382Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:31:58,383Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:58,384Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:58,537Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:58,544Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:31:58,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:58,548Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:58,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:58,553Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:58,673Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:31:58,791Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:31:58,885Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:31:58,887Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:31:58,899Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:31:58,901Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:31:58,902Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:58,903Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:58,904Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:31:58,915Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2683C76A5518C4B0BBAD2510CDA59C7FADA188BDDF27975C013CE9BD8A3C8FE2, not inserting the second time {}
[INFO ] 2019-10-31T23:31:58,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:58,925Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:58,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:58,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:58,938Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:58,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:58,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:58,970Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:58,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:58,972Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:58,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:58,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:58,976Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:31:58,979Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:31:59,002Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:31:59,010Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c535f12 {}
[INFO ] 2019-10-31T23:31:59,021Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:31:59,022Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:59,023Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:59,110Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:31:59,123Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:31:59,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,129Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:59,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,135Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,263Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:31:59,436Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:31:59,522Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:31:59,525Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:31:59,544Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:31:59,546Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:31:59,547Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:59,548Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:31:59,554Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:31:59,570Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 65D97BE879DB41688881B72B59F886BE4B01E32522773B5AADF1566936FC325D, not inserting the second time {}
[INFO ] 2019-10-31T23:31:59,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:59,589Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:59,602Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564717875) {}
[INFO ] 2019-10-31T23:31:59,606Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,609Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:59,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:59,627Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:59,638Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564718545) {}
[INFO ] 2019-10-31T23:31:59,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,645Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:31:59,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:59,674Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,675Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[INFO ] 2019-10-31T23:31:59,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:31:59,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564719124) {}
[WARN ] 2019-10-31T23:31:59,741Z [Mock network] flow.[a8e0a5be-001e-418d-9f74-cd8152a42725].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.dz0189.issue.AssetContract, transaction: D918B4F7DFD84AA8759ED50BCF00DA08DC1515ABD1AFA62ED607E275E88175A4
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:76) ~[main/:?]
	at com.dz0189.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.dz0189.issue.AssetContract.verifyIssue(AssetContract.kt:90) ~[dz0189-contracts.jar:?]
	at com.dz0189.issue.AssetContract.verify(AssetContract.kt:29) ~[dz0189-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-10-31T23:31:59,855Z [Mock network] flow.[f5c5d067-474b-44a1-9e07-cf7e757df664].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8868051853605884119). {}
[INFO ] 2019-10-31T23:31:59,940Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8868051853605884119). {invocation_id=0a046300-14a6-4360-8bf3-46b6a903c909, invocation_timestamp=2019-10-31T23:31:59.939Z, session_id=0a046300-14a6-4360-8bf3-46b6a903c909, session_timestamp=2019-10-31T23:31:59.939Z}
[INFO ] 2019-10-31T23:32:00,143Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:00,148Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:00,157Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4ceab3f7 {}
[INFO ] 2019-10-31T23:32:00,172Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:00,173Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:00,174Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:00,353Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:00,361Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:00,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:00,365Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:00,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:00,375Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:00,521Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:00,653Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:00,739Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:00,741Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:00,749Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:32:00,753Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:00,754Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:00,755Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:00,755Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:00,756Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:00,767Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2B6C4B80889AC7EE55022AFFE88F4B421BF622C8D46F42BC43D2688A33CD6BAB, not inserting the second time {}
[INFO ] 2019-10-31T23:32:00,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:00,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:00,776Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:00,777Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:00,778Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:00,779Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:00,783Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:00,784Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:00,796Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:32:00,802Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7dc583ed {}
[INFO ] 2019-10-31T23:32:00,816Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:00,818Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:00,818Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:00,913Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:00,920Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:00,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:00,924Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:00,928Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:00,928Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:01,151Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:01,287Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:01,394Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:01,395Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:01,414Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:01,416Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:01,416Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:01,417Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:01,418Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:01,433Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 33F52FCE7DDC46B54D29E6A1C3581991A245AF1E1B852C0BEDFFB8FB63FFF427, not inserting the second time {}
[INFO ] 2019-10-31T23:32:01,437Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:01,439Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:01,459Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:01,460Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:01,463Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:01,471Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:01,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:01,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:01,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:01,478Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:01,480Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:01,480Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:01,484Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:01,484Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:01,506Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:32:01,520Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@12483b96 {}
[INFO ] 2019-10-31T23:32:01,532Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:01,533Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:01,534Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:01,643Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:01,653Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:01,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:01,658Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:01,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:01,662Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:01,805Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:02,037Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:02,141Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:02,143Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:02,156Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:02,157Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:02,160Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:02,161Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:02,161Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:02,174Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E1D5AE525DA44289BA1C34772BB8CBFCAF4D5D0B716EBBE5310A2EB8E16F0080, not inserting the second time {}
[INFO ] 2019-10-31T23:32:02,180Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:02,181Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:02,197Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:02,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:02,206Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:02,214Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:02,217Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:02,221Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:02,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:02,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:02,235Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:02,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:02,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:02,251Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:02,251Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:02,252Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:02,253Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:02,253Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:02,256Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:02,257Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:02,278Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:32:02,292Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6be48324 {}
[INFO ] 2019-10-31T23:32:02,300Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:02,301Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:02,302Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:02,419Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:02,426Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:02,426Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:02,431Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:02,434Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:02,435Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:02,574Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:02,809Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:02,898Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:02,899Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:02,910Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:02,914Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:02,915Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:02,916Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:02,916Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:02,930Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C4C137B9F2D94871DF96F2FA8DF7F5AFFC0F2EDD74F8FF0025EA33E1866B3919, not inserting the second time {}
[INFO ] 2019-10-31T23:32:02,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:02,936Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:02,950Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:02,954Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:02,964Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:02,972Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:02,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:02,975Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:02,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:02,985Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:02,987Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:02,997Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:02,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:03,001Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:03,009Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:03,011Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:03,021Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:03,026Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:03,027Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:03,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:03,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:03,031Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:03,037Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:03,038Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:03,056Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:32:03,065Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@22d4f4c2 {}
[INFO ] 2019-10-31T23:32:03,072Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:03,073Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:03,074Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:03,165Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:03,178Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:03,179Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,183Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,187Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,337Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:03,667Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:03,760Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:03,762Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:03,782Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:03,785Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:03,787Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:03,788Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:03,789Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:03,802Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F15F0356E4AE617DB3268A87582C03CA1F45E81DB5FBD5D7E5F9BA46771056EA, not inserting the second time {}
[INFO ] 2019-10-31T23:32:03,809Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:03,816Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564720362) {}
[INFO ] 2019-10-31T23:32:03,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,827Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:03,841Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564720921) {}
[INFO ] 2019-10-31T23:32:03,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,851Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,858Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:03,864Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564721654) {}
[INFO ] 2019-10-31T23:32:03,875Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,876Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:03,889Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,903Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564722426) {}
[INFO ] 2019-10-31T23:32:03,906Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,908Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:03,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:03,920Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,923Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:03,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564723179) {}
[INFO ] 2019-10-31T23:32:03,936Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:03,937Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:03,939Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:03,940Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:03,941Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:03,941Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:03,942Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:03,943Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:04,076Z [Mock network] flow.[5f460676-84b0-4543-bc11-868192f73720].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4516848815082372572). {}
[INFO ] 2019-10-31T23:32:04,182Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4516848815082372572). {invocation_id=a097937d-a01f-4f24-8e35-5e81da213118, invocation_timestamp=2019-10-31T23:32:04.181Z, session_id=a097937d-a01f-4f24-8e35-5e81da213118, session_timestamp=2019-10-31T23:32:04.181Z}
[INFO ] 2019-10-31T23:32:04,456Z [Mock network] flow.[5f460676-84b0-4543-bc11-868192f73720].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5606737329129591193). {}
[INFO ] 2019-10-31T23:32:04,478Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5606737329129591193). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=7aa4c8d4-cda7-478c-99bc-e0ffde9757e0, invocation_timestamp=2019-10-31T23:32:04.477Z, session_id=7aa4c8d4-cda7-478c-99bc-e0ffde9757e0, session_timestamp=2019-10-31T23:32:04.477Z}
[INFO ] 2019-10-31T23:32:04,545Z [Mock network] flow.[5f460676-84b0-4543-bc11-868192f73720].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3554002698039430647). {}
[INFO ] 2019-10-31T23:32:04,566Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3554002698039430647). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5f50c1af-e43c-4e64-bb75-3405e44550d5, invocation_timestamp=2019-10-31T23:32:04.563Z, session_id=5f50c1af-e43c-4e64-bb75-3405e44550d5, session_timestamp=2019-10-31T23:32:04.563Z}
[INFO ] 2019-10-31T23:32:04,739Z [Mock network] flow.[0ed8c095-b92d-426b-bd3a-5cab36351dbf].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7611428257706851275). {}
[INFO ] 2019-10-31T23:32:04,775Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7611428257706851275). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=4f68f938-15e9-437c-bdfb-6ebf78b27565, invocation_timestamp=2019-10-31T23:32:04.775Z, session_id=4f68f938-15e9-437c-bdfb-6ebf78b27565, session_timestamp=2019-10-31T23:32:04.775Z}
[INFO ] 2019-10-31T23:32:04,954Z [Mock network] flow.[5fa9ff45-4786-455d-b14a-3d4c445aaf4a].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-367775320554040730). {}
[INFO ] 2019-10-31T23:32:05,002Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-367775320554040730). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=329efc01-7cde-4688-8dfd-3b48482729b5, invocation_timestamp=2019-10-31T23:32:05Z, session_id=329efc01-7cde-4688-8dfd-3b48482729b5, session_timestamp=2019-10-31T23:32:05Z}
[INFO ] 2019-10-31T23:32:05,023Z [Mock network] flow.[e021c38a-fb25-4a9b-bda0-96fdb8b6c353].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,135Z [Mock network] flow.[e021c38a-fb25-4a9b-bda0-96fdb8b6c353].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,294Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:32:05,349Z [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=33807235970069878). {}
[INFO ] 2019-10-31T23:32:05,382Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=33807235970069878). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=02d52066-eea5-45b4-a839-632e50010f66, invocation_timestamp=2019-10-31T23:32:05.380Z, session_id=02d52066-eea5-45b4-a839-632e50010f66, session_timestamp=2019-10-31T23:32:05.380Z}
[INFO ] 2019-10-31T23:32:05,402Z [Mock network] flow.[44768518-ab54-46f0-9b10-314407571c50].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,459Z [Mock network] flow.[44768518-ab54-46f0-9b10-314407571c50].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,549Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:32:05,626Z [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,662Z [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,663Z [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,691Z [Mock network] flow.[ab3f8b59-f781-4ddf-a881-5b088e3d40e1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,822Z [Mock network] flow.[44768518-ab54-46f0-9b10-314407571c50].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2421962775378517487). {}
[INFO ] 2019-10-31T23:32:05,846Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2421962775378517487). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=b8a691d5-6d57-4f2d-ae70-f236679b114a, invocation_timestamp=2019-10-31T23:32:05.845Z, session_id=b8a691d5-6d57-4f2d-ae70-f236679b114a, session_timestamp=2019-10-31T23:32:05.845Z}
[INFO ] 2019-10-31T23:32:05,858Z [Mock network] flow.[30e00467-b5f1-42a2-85b5-c90eee7248ed].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,925Z [Mock network] flow.[30e00467-b5f1-42a2-85b5-c90eee7248ed].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,927Z [Mock network] flow.[30e00467-b5f1-42a2-85b5-c90eee7248ed].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:05,967Z [Mock network] flow.[30e00467-b5f1-42a2-85b5-c90eee7248ed].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:06,178Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:06,180Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:06,184Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6e31bfdf {}
[INFO ] 2019-10-31T23:32:06,192Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:06,193Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:06,193Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:06,286Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:06,297Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:06,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:06,303Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:06,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:06,312Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:06,454Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:06,624Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:06,716Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:06,717Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:06,726Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-10-31T23:32:06,729Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:06,731Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:06,732Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:06,732Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:06,733Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:06,747Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 04F328489330DCCF7AC880C7BE634137336FBBF7E6E9420E9946C526D4515580, not inserting the second time {}
[INFO ] 2019-10-31T23:32:06,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:06,762Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:06,763Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:06,764Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:06,765Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:06,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:06,770Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:06,771Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:06,790Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:32:06,799Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2e589079 {}
[INFO ] 2019-10-31T23:32:06,807Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:06,808Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:06,808Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:06,902Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:06,911Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:06,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:06,918Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:06,920Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:06,921Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:07,051Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:07,527Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:07,612Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:07,614Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:07,628Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:07,629Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:07,630Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:07,630Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:07,631Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:07,646Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7BDDFD473114521EAA93CE16F85AED56C7D53099DA876A5A77FF0E279E4F5853, not inserting the second time {}
[INFO ] 2019-10-31T23:32:07,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:07,653Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:07,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:07,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:07,660Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:07,664Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:07,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:07,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:07,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:07,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:07,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:07,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:07,672Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:07,673Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:07,683Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:32:07,688Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7047f758 {}
[INFO ] 2019-10-31T23:32:07,703Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:07,704Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:07,705Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:07,761Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:07,766Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:07,767Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:07,770Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:07,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:07,772Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:07,909Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:08,048Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:08,136Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:08,138Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:08,148Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:08,149Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:08,150Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:08,150Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:08,151Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:08,161Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A848DE9DFB94470950C3A8E3479B5CD7CB1A14982B9A79B481FB2A07B8DE0B3B, not inserting the second time {}
[INFO ] 2019-10-31T23:32:08,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:08,166Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,177Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:08,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,180Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:08,193Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,204Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:08,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,209Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,216Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,218Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,221Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:08,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:08,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,226Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:08,226Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:08,242Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:32:08,249Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c017680 {}
[INFO ] 2019-10-31T23:32:08,260Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:08,261Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:08,262Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:08,351Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:08,359Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:08,359Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,362Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,366Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,367Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,533Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:08,663Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:08,756Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:08,758Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:08,772Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:08,773Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:08,774Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:08,775Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:08,775Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:08,789Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B35736E26B6D12808DA0F2CAAAE34239F9D2916473C134EA9EF2CEAE88794635, not inserting the second time {}
[INFO ] 2019-10-31T23:32:08,793Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:08,795Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:08,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,802Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,806Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:08,808Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,812Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:08,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,814Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,820Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:08,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,825Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,833Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:08,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,835Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:08,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:08,837Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-10-31T23:32:08,838Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-10-31T23:32:08,848Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-10-31T23:32:08,853Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@ca80381 {}
[INFO ] 2019-10-31T23:32:08,860Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-10-31T23:32:08,861Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:08,861Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:08,915Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-10-31T23:32:08,921Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-10-31T23:32:08,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:08,924Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:08,926Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:08,927Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,069Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DBB0E3491ABF8B5199CF7593E47DD0938EE33D396121693270372416691BA9F9 {}
[INFO ] 2019-10-31T23:32:09,186Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 8FF2EBB62637D140C92B99E344DDD7373CA466743E81B449A32B365F28EB0B47 {}
[INFO ] 2019-10-31T23:32:09,278Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-10-31T23:32:09,280Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-10-31T23:32:09,290Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Seller to initiate com.dz0189.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-10-31T23:32:09,291Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:09,292Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:09,293Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:09,293Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-10-31T23:32:09,305Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 54E781D1A147D7DC547FA7817AB2EFC57C4C8A2E552621719AB75F275F57BAFE, not inserting the second time {}
[INFO ] 2019-10-31T23:32:09,308Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:09,309Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:09,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572564726298) {}
[INFO ] 2019-10-31T23:32:09,314Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,315Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:09,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,323Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:09,324Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:09,328Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572564726912) {}
[INFO ] 2019-10-31T23:32:09,329Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,330Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:09,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:09,336Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:09,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572564727767) {}
[INFO ] 2019-10-31T23:32:09,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,341Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:09,345Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,346Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:09,347Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:09,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572564728359) {}
[INFO ] 2019-10-31T23:32:09,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,353Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-10-31T23:32:09,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,358Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:09,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,361Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,361Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-10-31T23:32:09,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572564728921) {}
[INFO ] 2019-10-31T23:32:09,363Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:09,363Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:09,364Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:09,365Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:09,365Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:09,366Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:09,366Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.dz0189.flow.AssetTradeFlow$Buyer to initiate com.dz0189.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-10-31T23:32:09,367Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-10-31T23:32:09,432Z [Mock network] flow.[7dd09191-b5db-4b49-953c-0ac141054b1a].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=9150239050117906552). {}
[INFO ] 2019-10-31T23:32:09,497Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=9150239050117906552). {invocation_id=e259e6cc-bcdf-42e6-842a-229714f8c19d, invocation_timestamp=2019-10-31T23:32:09.496Z, session_id=e259e6cc-bcdf-42e6-842a-229714f8c19d, session_timestamp=2019-10-31T23:32:09.496Z}
[INFO ] 2019-10-31T23:32:09,672Z [Mock network] flow.[7dd09191-b5db-4b49-953c-0ac141054b1a].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3633655208744426733). {}
[INFO ] 2019-10-31T23:32:09,689Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3633655208744426733). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ccef02bc-0106-403a-846e-e7c096cb77b2, invocation_timestamp=2019-10-31T23:32:09.687Z, session_id=ccef02bc-0106-403a-846e-e7c096cb77b2, session_timestamp=2019-10-31T23:32:09.687Z}
[INFO ] 2019-10-31T23:32:09,739Z [Mock network] flow.[7dd09191-b5db-4b49-953c-0ac141054b1a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4517269667218174252). {}
[INFO ] 2019-10-31T23:32:09,766Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4517269667218174252). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1197f2b2-55a1-400b-b64d-366bbdb583d3, invocation_timestamp=2019-10-31T23:32:09.765Z, session_id=1197f2b2-55a1-400b-b64d-366bbdb583d3, session_timestamp=2019-10-31T23:32:09.765Z}
[INFO ] 2019-10-31T23:32:09,858Z [Mock network] flow.[1c964bf5-a1f5-4a7e-8b57-5f04e8c9daea].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7382784748825815215). {}
[INFO ] 2019-10-31T23:32:09,895Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7382784748825815215). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=938154d1-12ec-412c-aed3-6614886c6b1a, invocation_timestamp=2019-10-31T23:32:09.895Z, session_id=938154d1-12ec-412c-aed3-6614886c6b1a, session_timestamp=2019-10-31T23:32:09.895Z}
[INFO ] 2019-10-31T23:32:09,997Z [Mock network] flow.[4171451a-a42d-4362-9314-176cbdc9ed02].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-2955452023147895283). {}
[INFO ] 2019-10-31T23:32:10,036Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2955452023147895283). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=08165cba-56d6-4277-8a8a-d97a4bede233, invocation_timestamp=2019-10-31T23:32:10.035Z, session_id=08165cba-56d6-4277-8a8a-d97a4bede233, session_timestamp=2019-10-31T23:32:10.035Z}
[INFO ] 2019-10-31T23:32:10,055Z [Mock network] flow.[5d864d15-6152-4c51-86a1-3170ae9a22a2].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,117Z [Mock network] flow.[5d864d15-6152-4c51-86a1-3170ae9a22a2].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,178Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:32:10,207Z [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-649828521548225602). {}
[INFO ] 2019-10-31T23:32:10,227Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-649828521548225602). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=3e0ae345-8a55-4eaa-a108-64f39b67eeb5, invocation_timestamp=2019-10-31T23:32:10.226Z, session_id=3e0ae345-8a55-4eaa-a108-64f39b67eeb5, session_timestamp=2019-10-31T23:32:10.226Z}
[INFO ] 2019-10-31T23:32:10,237Z [Mock network] flow.[34f3a515-6d3f-4a05-ad83-089850f9425d].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,294Z [Mock network] flow.[34f3a515-6d3f-4a05-ad83-089850f9425d].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,335Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.dz0189.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-10-31T23:32:10,393Z [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,438Z [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,440Z [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,472Z [Mock network] flow.[f33bf71c-b1ec-42ef-ae91-9dcddf292334].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,581Z [Mock network] flow.[34f3a515-6d3f-4a05-ad83-089850f9425d].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2886378617039110920). {}
[INFO ] 2019-10-31T23:32:10,604Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2886378617039110920). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=e22d613d-cbbe-46af-9100-871264165cf6, invocation_timestamp=2019-10-31T23:32:10.603Z, session_id=e22d613d-cbbe-46af-9100-871264165cf6, session_timestamp=2019-10-31T23:32:10.603Z}
[INFO ] 2019-10-31T23:32:10,617Z [Mock network] flow.[b5a0fa6f-ff99-4043-b286-e7a568d9dcbf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,675Z [Mock network] flow.[b5a0fa6f-ff99-4043-b286-e7a568d9dcbf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,676Z [Mock network] flow.[b5a0fa6f-ff99-4043-b286-e7a568d9dcbf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-10-31T23:32:10,705Z [Mock network] flow.[b5a0fa6f-ff99-4043-b286-e7a568d9dcbf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
